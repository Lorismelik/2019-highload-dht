<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="581"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="581"> </text>
<g id="frames">
<g>
<title>all (1,829 samples, 100.00%)</title><rect x="10.0" y="547.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="558.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=40963] (600 samples, 32.80%)</title><rect x="10.0" y="531.0" width="387.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="542.0">[NIO Selector #0 tid=40963]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.05%)</title><rect x="10.0" y="515.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.05%)</title><rect x="10.0" y="499.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>_res (1 samples, 0.05%)</title><rect x="10.0" y="483.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (597 samples, 32.64%)</title><rect x="10.6" y="515.0" width="385.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.6" y="526.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (331 samples, 18.10%)</title><rect x="10.6" y="499.0" width="213.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.6" y="510.0">one/nio/net/JavaSelector.sel..</text>
</g>
<g>
<title>_res (1 samples, 0.05%)</title><rect x="10.6" y="483.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (329 samples, 17.99%)</title><rect x="11.3" y="483.0" width="212.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.3" y="494.0">sun/nio/ch/SelectorImpl.select</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (329 samples, 17.99%)</title><rect x="11.3" y="467.0" width="212.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.3" y="478.0">sun/nio/ch/SelectorImpl.lock..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (326 samples, 17.82%)</title><rect x="13.2" y="451.0" width="210.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.2" y="462.0">sun/nio/ch/KQueueSelectorImp..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (320 samples, 17.50%)</title><rect x="13.9" y="435.0" width="206.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.9" y="446.0">sun/nio/ch/KQueue.poll</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (1 samples, 0.05%)</title><rect x="19.0" y="419.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="22.0" y="430.0"></text>
</g>
<g>
<title>kevent (311 samples, 17.00%)</title><rect x="19.7" y="419.0" width="200.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="22.7" y="430.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (4 samples, 0.22%)</title><rect x="220.3" y="435.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (4 samples, 0.22%)</title><rect x="220.3" y="419.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.16%)</title><rect x="221.0" y="403.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.0" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.11%)</title><rect x="221.6" y="387.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.11%)</title><rect x="221.6" y="371.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="224.6" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.05%)</title><rect x="222.3" y="355.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.05%)</title><rect x="222.9" y="435.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.9" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.05%)</title><rect x="222.9" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.9" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.05%)</title><rect x="222.9" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.9" y="414.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.05%)</title><rect x="222.9" y="387.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.05%)</title><rect x="222.9" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.05%)</title><rect x="223.5" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="226.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.05%)</title><rect x="223.5" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="226.5" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (1 samples, 0.05%)</title><rect x="223.5" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.05%)</title><rect x="223.5" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="226.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (265 samples, 14.49%)</title><rect x="224.2" y="499.0" width="171.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.2" y="510.0">one/nio/net/Session.pr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (265 samples, 14.49%)</title><rect x="224.2" y="483.0" width="171.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.2" y="494.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (206 samples, 11.26%)</title><rect x="224.8" y="467.0" width="132.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.8" y="478.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (191 samples, 10.44%)</title><rect x="224.8" y="451.0" width="123.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.8" y="462.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (191 samples, 10.44%)</title><rect x="224.8" y="435.0" width="123.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.8" y="446.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (189 samples, 10.33%)</title><rect x="224.8" y="419.0" width="122.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.8" y="430.0">RequestHandler0..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (187 samples, 10.22%)</title><rect x="226.1" y="403.0" width="120.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.1" y="414.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (185 samples, 10.11%)</title><rect x="226.1" y="387.0" width="119.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.1" y="398.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (27 samples, 1.48%)</title><rect x="226.1" y="371.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (14 samples, 0.77%)</title><rect x="234.5" y="355.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (14 samples, 0.77%)</title><rect x="234.5" y="339.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.5" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (14 samples, 0.77%)</title><rect x="234.5" y="323.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="237.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.charAt (14 samples, 0.77%)</title><rect x="234.5" y="307.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.5" y="318.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="242.9" y="291.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="245.9" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 8.64%)</title><rect x="243.5" y="371.0" width="102.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.5" y="382.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 8.64%)</title><rect x="243.5" y="355.0" width="102.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.5" y="366.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (152 samples, 8.31%)</title><rect x="244.8" y="339.0" width="98.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.8" y="350.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (152 samples, 8.31%)</title><rect x="244.8" y="323.0" width="98.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.8" y="334.0">one/nio/net/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (152 samples, 8.31%)</title><rect x="244.8" y="307.0" width="98.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.8" y="318.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (152 samples, 8.31%)</title><rect x="244.8" y="291.0" width="98.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.8" y="302.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (152 samples, 8.31%)</title><rect x="244.8" y="275.0" width="98.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.8" y="286.0">sun/nio/ch/I..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.05%)</title><rect x="244.8" y="259.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.8" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.05%)</title><rect x="244.8" y="243.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="247.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="244.8" y="227.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.05%)</title><rect x="244.8" y="211.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.05%)</title><rect x="244.8" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="247.8" y="206.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="244.8" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="247.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (146 samples, 7.98%)</title><rect x="245.5" y="259.0" width="94.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.5" y="270.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (2 samples, 0.11%)</title><rect x="245.5" y="243.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.05%)</title><rect x="246.1" y="227.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (144 samples, 7.87%)</title><rect x="246.8" y="243.0" width="92.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.8" y="254.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (144 samples, 7.87%)</title><rect x="246.8" y="227.0" width="92.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.8" y="238.0">sun/nio/ch/..</text>
</g>
<g>
<title>write (139 samples, 7.60%)</title><rect x="250.0" y="211.0" width="89.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="253.0" y="222.0">write</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.27%)</title><rect x="339.7" y="259.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.7" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.27%)</title><rect x="339.7" y="243.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.7" y="254.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (5 samples, 0.27%)</title><rect x="339.7" y="227.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.7" y="238.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (5 samples, 0.27%)</title><rect x="339.7" y="211.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (5 samples, 0.27%)</title><rect x="339.7" y="195.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.7" y="206.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.22%)</title><rect x="342.9" y="339.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="345.9" y="350.0"></text>
</g>
<g>
<title>__vsnprintf_chk (1 samples, 0.05%)</title><rect x="342.9" y="323.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="345.9" y="334.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (3 samples, 0.16%)</title><rect x="343.5" y="323.0" width="2.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="346.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.11%)</title><rect x="345.5" y="387.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="346.1" y="371.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="346.1" y="355.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.11%)</title><rect x="346.8" y="419.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.11%)</title><rect x="346.8" y="403.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.8" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.11%)</title><rect x="346.8" y="387.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="349.8" y="398.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.11%)</title><rect x="346.8" y="371.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.11%)</title><rect x="346.8" y="355.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="349.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.33%)</title><rect x="348.1" y="451.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="351.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.05%)</title><rect x="348.1" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="348.1" y="419.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="348.1" y="403.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="351.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="348.1" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.1" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="348.1" y="371.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="348.7" y="435.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.7" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="348.7" y="419.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="351.7" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.22%)</title><rect x="349.4" y="435.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="352.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.44%)</title><rect x="351.9" y="451.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.22%)</title><rect x="353.2" y="435.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.22%)</title><rect x="353.2" y="419.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.11%)</title><rect x="355.8" y="435.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.8" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="357.1" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="357.1" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (58 samples, 3.17%)</title><rect x="357.7" y="467.0" width="37.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.7" y="478.0">one..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (56 samples, 3.06%)</title><rect x="358.4" y="451.0" width="36.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.4" y="462.0">one..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (56 samples, 3.06%)</title><rect x="358.4" y="435.0" width="36.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.4" y="446.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (56 samples, 3.06%)</title><rect x="358.4" y="419.0" width="36.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="361.4" y="430.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (56 samples, 3.06%)</title><rect x="358.4" y="403.0" width="36.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.4" y="414.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (53 samples, 2.90%)</title><rect x="358.4" y="387.0" width="34.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.4" y="398.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (53 samples, 2.90%)</title><rect x="358.4" y="371.0" width="34.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="361.4" y="382.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (51 samples, 2.79%)</title><rect x="359.7" y="355.0" width="32.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.7" y="366.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (3 samples, 0.16%)</title><rect x="363.5" y="339.0" width="2.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="366.5" y="350.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="364.8" y="323.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="367.8" y="334.0"></text>
</g>
<g>
<title>read (42 samples, 2.30%)</title><rect x="365.5" y="339.0" width="27.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="368.5" y="350.0">r..</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.16%)</title><rect x="392.6" y="387.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.6" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.16%)</title><rect x="392.6" y="371.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.6" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.16%)</title><rect x="392.6" y="355.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.05%)</title><rect x="393.2" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.2" y="350.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.05%)</title><rect x="393.9" y="339.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="396.9" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.05%)</title><rect x="394.5" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.5" y="462.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="395.2" y="499.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="398.2" y="510.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="395.2" y="483.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="398.2" y="494.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.05%)</title><rect x="395.2" y="467.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="398.2" y="478.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.11%)</title><rect x="395.8" y="515.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="398.8" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24323] (408 samples, 22.31%)</title><rect x="397.1" y="531.0" width="263.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="400.1" y="542.0">[NIO Selector #1 tid=24323]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="397.1" y="515.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="400.1" y="526.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="397.1" y="499.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="400.1" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="397.1" y="483.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="400.1" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="397.1" y="467.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="400.1" y="478.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="397.1" y="451.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="400.1" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="397.1" y="435.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="400.1" y="446.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="397.1" y="419.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="400.1" y="430.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.05%)</title><rect x="397.1" y="403.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="400.1" y="414.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.05%)</title><rect x="397.1" y="387.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="400.1" y="398.0"></text>
</g>
<g>
<title>G1AllocRegion::retire_internal(HeapRegion*, bool) (1 samples, 0.05%)</title><rect x="397.1" y="371.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="400.1" y="382.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.05%)</title><rect x="397.1" y="355.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="400.1" y="366.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.05%)</title><rect x="397.1" y="339.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="400.1" y="350.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.16%)</title><rect x="397.7" y="515.0" width="2.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="400.7" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (404 samples, 22.09%)</title><rect x="399.7" y="515.0" width="260.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.7" y="526.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (252 samples, 13.78%)</title><rect x="399.7" y="499.0" width="162.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.7" y="510.0">one/nio/net/JavaSelec..</text>
</g>
<g>
<title>_res (2 samples, 0.11%)</title><rect x="400.3" y="483.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="403.3" y="494.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.05%)</title><rect x="401.6" y="483.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="404.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (248 samples, 13.56%)</title><rect x="402.3" y="483.0" width="160.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="405.3" y="494.0">sun/nio/ch/SelectorI..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (247 samples, 13.50%)</title><rect x="402.9" y="467.0" width="159.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="405.9" y="478.0">sun/nio/ch/SelectorI..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (247 samples, 13.50%)</title><rect x="402.9" y="451.0" width="159.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.9" y="462.0">sun/nio/ch/KQueueSel..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (237 samples, 12.96%)</title><rect x="403.5" y="435.0" width="153.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.5" y="446.0">sun/nio/ch/KQueue.p..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (2 samples, 0.11%)</title><rect x="410.6" y="419.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="413.6" y="430.0"></text>
</g>
<g>
<title>kevent (224 samples, 12.25%)</title><rect x="411.9" y="419.0" width="144.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="414.9" y="430.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (6 samples, 0.33%)</title><rect x="556.5" y="435.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.5" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="556.5" y="419.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.5" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="556.5" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.27%)</title><rect x="557.1" y="419.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.16%)</title><rect x="558.4" y="403.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.16%)</title><rect x="558.4" y="387.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.4" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.16%)</title><rect x="558.4" y="371.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.4" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.16%)</title><rect x="558.4" y="355.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="561.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (2 samples, 0.11%)</title><rect x="560.3" y="435.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.05%)</title><rect x="561.6" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.6" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (152 samples, 8.31%)</title><rect x="562.3" y="499.0" width="98.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.3" y="510.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (152 samples, 8.31%)</title><rect x="562.3" y="483.0" width="98.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.3" y="494.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (113 samples, 6.18%)</title><rect x="562.3" y="467.0" width="72.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.3" y="478.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (100 samples, 5.47%)</title><rect x="563.5" y="451.0" width="64.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.5" y="462.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (100 samples, 5.47%)</title><rect x="563.5" y="435.0" width="64.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="566.5" y="446.0">one/nio..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (99 samples, 5.41%)</title><rect x="563.5" y="419.0" width="63.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.5" y="430.0">Request..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="564.8" y="403.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="567.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (96 samples, 5.25%)</title><rect x="565.5" y="403.0" width="61.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.5" y="414.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (94 samples, 5.14%)</title><rect x="565.5" y="387.0" width="60.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.5" y="398.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.44%)</title><rect x="565.5" y="371.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.16%)</title><rect x="568.7" y="355.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.16%)</title><rect x="568.7" y="339.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.16%)</title><rect x="568.7" y="323.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.16%)</title><rect x="568.7" y="307.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.7" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (86 samples, 4.70%)</title><rect x="570.6" y="371.0" width="55.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.6" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (86 samples, 4.70%)</title><rect x="570.6" y="355.0" width="55.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.6" y="366.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (84 samples, 4.59%)</title><rect x="571.3" y="339.0" width="54.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.3" y="350.0">one/n..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (84 samples, 4.59%)</title><rect x="571.3" y="323.0" width="54.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.3" y="334.0">one/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (84 samples, 4.59%)</title><rect x="571.3" y="307.0" width="54.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="574.3" y="318.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (84 samples, 4.59%)</title><rect x="571.3" y="291.0" width="54.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.3" y="302.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (84 samples, 4.59%)</title><rect x="571.3" y="275.0" width="54.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.3" y="286.0">sun/n..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.05%)</title><rect x="571.3" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="574.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.05%)</title><rect x="571.3" y="243.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="571.3" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.05%)</title><rect x="571.3" y="211.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.05%)</title><rect x="571.3" y="195.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.05%)</title><rect x="571.3" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (83 samples, 4.54%)</title><rect x="571.9" y="259.0" width="53.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.9" y="270.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (83 samples, 4.54%)</title><rect x="571.9" y="243.0" width="53.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.9" y="254.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (82 samples, 4.48%)</title><rect x="572.6" y="227.0" width="52.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.6" y="238.0">sun/n..</text>
</g>
<g>
<title>JNI_OnLoad (2 samples, 0.11%)</title><rect x="575.2" y="211.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="578.2" y="222.0"></text>
</g>
<g>
<title>write (76 samples, 4.16%)</title><rect x="576.5" y="211.0" width="49.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="579.5" y="222.0">write</text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="625.5" y="339.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="628.5" y="350.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="625.5" y="323.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="628.5" y="334.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.05%)</title><rect x="625.5" y="307.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="628.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.11%)</title><rect x="626.1" y="387.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.1" y="398.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="626.8" y="371.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="626.8" y="355.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.8" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.05%)</title><rect x="626.8" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.05%)</title><rect x="627.4" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="627.4" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="627.4" y="387.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="630.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="627.4" y="371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="627.4" y="355.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.33%)</title><rect x="628.1" y="451.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.11%)</title><rect x="628.1" y="435.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.11%)</title><rect x="628.1" y="419.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.1" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.22%)</title><rect x="629.4" y="435.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.05%)</title><rect x="631.9" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="631.9" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="631.9" y="419.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.9" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.22%)</title><rect x="632.6" y="451.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.22%)</title><rect x="632.6" y="435.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.6" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (39 samples, 2.13%)</title><rect x="635.2" y="467.0" width="25.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.2" y="478.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (39 samples, 2.13%)</title><rect x="635.2" y="451.0" width="25.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.2" y="462.0">o..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="635.2" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (38 samples, 2.08%)</title><rect x="635.8" y="435.0" width="24.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.8" y="446.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (38 samples, 2.08%)</title><rect x="635.8" y="419.0" width="24.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.8" y="430.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (38 samples, 2.08%)</title><rect x="635.8" y="403.0" width="24.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.8" y="414.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (35 samples, 1.91%)</title><rect x="635.8" y="387.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.8" y="398.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (35 samples, 1.91%)</title><rect x="635.8" y="371.0" width="22.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.8" y="382.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (34 samples, 1.86%)</title><rect x="636.5" y="355.0" width="21.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.5" y="366.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.05%)</title><rect x="636.5" y="339.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="639.5" y="350.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.05%)</title><rect x="637.1" y="339.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="640.1" y="350.0"></text>
</g>
<g>
<title>read (32 samples, 1.75%)</title><rect x="637.7" y="339.0" width="20.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="640.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.16%)</title><rect x="658.4" y="387.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.4" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.16%)</title><rect x="658.4" y="371.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.4" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.16%)</title><rect x="658.4" y="355.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.4" y="366.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=39939] (419 samples, 22.91%)</title><rect x="660.3" y="531.0" width="270.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="663.3" y="542.0">[NIO Selector #2 tid=39939]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (419 samples, 22.91%)</title><rect x="660.3" y="515.0" width="270.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.3" y="526.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.05%)</title><rect x="661.6" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.6" y="510.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (272 samples, 14.87%)</title><rect x="662.3" y="499.0" width="175.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.3" y="510.0">one/nio/net/JavaSelecto..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (3 samples, 0.16%)</title><rect x="662.3" y="483.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.11%)</title><rect x="662.9" y="467.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.9" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.11%)</title><rect x="662.9" y="451.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.9" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.11%)</title><rect x="662.9" y="435.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.9" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="662.9" y="419.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="662.9" y="403.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (269 samples, 14.71%)</title><rect x="664.2" y="483.0" width="173.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.2" y="494.0">sun/nio/ch/SelectorImp..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (269 samples, 14.71%)</title><rect x="664.2" y="467.0" width="173.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.2" y="478.0">sun/nio/ch/SelectorImp..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (268 samples, 14.65%)</title><rect x="664.8" y="451.0" width="172.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="667.8" y="462.0">sun/nio/ch/KQueueSelec..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (258 samples, 14.11%)</title><rect x="665.5" y="435.0" width="166.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.5" y="446.0">sun/nio/ch/KQueue.poll</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (1 samples, 0.05%)</title><rect x="670.0" y="419.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="673.0" y="430.0"></text>
</g>
<g>
<title>kevent (250 samples, 13.67%)</title><rect x="670.6" y="419.0" width="161.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="673.6" y="430.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (5 samples, 0.27%)</title><rect x="831.9" y="435.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="834.9" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.16%)</title><rect x="831.9" y="419.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.16%)</title><rect x="831.9" y="403.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.11%)</title><rect x="833.9" y="419.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.9" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.05%)</title><rect x="835.2" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (3 samples, 0.16%)</title><rect x="835.8" y="435.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.8" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (3 samples, 0.16%)</title><rect x="835.8" y="419.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="838.8" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.16%)</title><rect x="835.8" y="403.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.8" y="414.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.16%)</title><rect x="835.8" y="387.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.16%)</title><rect x="835.8" y="371.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (143 samples, 7.82%)</title><rect x="837.7" y="499.0" width="92.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="840.7" y="510.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (143 samples, 7.82%)</title><rect x="837.7" y="483.0" width="92.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.7" y="494.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (109 samples, 5.96%)</title><rect x="838.4" y="467.0" width="70.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.4" y="478.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (103 samples, 5.63%)</title><rect x="838.4" y="451.0" width="66.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.4" y="462.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (103 samples, 5.63%)</title><rect x="838.4" y="435.0" width="66.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="841.4" y="446.0">one/nio..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (103 samples, 5.63%)</title><rect x="838.4" y="419.0" width="66.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.4" y="430.0">Request..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (103 samples, 5.63%)</title><rect x="838.4" y="403.0" width="66.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.4" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (101 samples, 5.52%)</title><rect x="838.4" y="387.0" width="65.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.4" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.55%)</title><rect x="838.4" y="371.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.38%)</title><rect x="840.3" y="355.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="843.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.38%)</title><rect x="840.3" y="339.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.3" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.38%)</title><rect x="840.3" y="323.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.38%)</title><rect x="840.3" y="307.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.3" y="318.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="844.2" y="291.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="847.2" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (91 samples, 4.98%)</title><rect x="844.8" y="371.0" width="58.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="847.8" y="382.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (90 samples, 4.92%)</title><rect x="845.5" y="355.0" width="58.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="848.5" y="366.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (90 samples, 4.92%)</title><rect x="845.5" y="339.0" width="58.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.5" y="350.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (90 samples, 4.92%)</title><rect x="845.5" y="323.0" width="58.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.5" y="334.0">one/ni..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (90 samples, 4.92%)</title><rect x="845.5" y="307.0" width="58.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="848.5" y="318.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (90 samples, 4.92%)</title><rect x="845.5" y="291.0" width="58.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.5" y="302.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (90 samples, 4.92%)</title><rect x="845.5" y="275.0" width="58.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.5" y="286.0">sun/ni..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.05%)</title><rect x="845.5" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.05%)</title><rect x="845.5" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="845.5" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.05%)</title><rect x="845.5" y="211.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.05%)</title><rect x="845.5" y="195.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.05%)</title><rect x="845.5" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.5" y="190.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.05%)</title><rect x="845.5" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (88 samples, 4.81%)</title><rect x="846.1" y="259.0" width="56.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="849.1" y="270.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (88 samples, 4.81%)</title><rect x="846.1" y="243.0" width="56.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="849.1" y="254.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (87 samples, 4.76%)</title><rect x="846.8" y="227.0" width="56.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.8" y="238.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.05%)</title><rect x="847.4" y="211.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="850.4" y="222.0"></text>
</g>
<g>
<title>write (85 samples, 4.65%)</title><rect x="848.1" y="211.0" width="54.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="851.1" y="222.0">write</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="902.9" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.05%)</title><rect x="902.9" y="243.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="905.9" y="254.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.05%)</title><rect x="902.9" y="227.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="905.9" y="238.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.05%)</title><rect x="902.9" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="902.9" y="195.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.11%)</title><rect x="903.5" y="387.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="904.2" y="371.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="904.2" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="907.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.16%)</title><rect x="904.8" y="451.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.05%)</title><rect x="904.8" y="435.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="904.8" y="419.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="907.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="904.8" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="904.8" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.8" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.11%)</title><rect x="905.5" y="435.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.5" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.11%)</title><rect x="905.5" y="419.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.11%)</title><rect x="906.8" y="451.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="909.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="908.1" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.1" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="908.1" y="435.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (33 samples, 1.80%)</title><rect x="908.7" y="467.0" width="21.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="911.7" y="478.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (32 samples, 1.75%)</title><rect x="908.7" y="451.0" width="20.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="911.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="908.7" y="435.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="911.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (31 samples, 1.69%)</title><rect x="909.4" y="435.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 1.69%)</title><rect x="909.4" y="419.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (30 samples, 1.64%)</title><rect x="910.0" y="403.0" width="19.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (29 samples, 1.59%)</title><rect x="910.0" y="387.0" width="18.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (29 samples, 1.59%)</title><rect x="910.0" y="371.0" width="18.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (28 samples, 1.53%)</title><rect x="910.6" y="355.0" width="18.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.6" y="366.0"></text>
</g>
<g>
<title>read (26 samples, 1.42%)</title><rect x="911.9" y="339.0" width="16.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="914.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="928.7" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="931.7" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="928.7" y="371.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="931.7" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="928.7" y="355.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="931.7" y="366.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="928.7" y="339.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="931.7" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.05%)</title><rect x="929.4" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.4" y="462.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="930.0" y="499.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="933.0" y="510.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="930.0" y="483.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="933.0" y="494.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.05%)</title><rect x="930.0" y="467.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="933.0" y="478.0"></text>
</g>
<g>
<title>_res (1 samples, 0.05%)</title><rect x="930.0" y="451.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="933.0" y="462.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=24835] (395 samples, 21.60%)</title><rect x="930.6" y="531.0" width="254.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="933.6" y="542.0">[NIO Selector #3 tid=24835]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (393 samples, 21.49%)</title><rect x="930.6" y="515.0" width="253.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.6" y="526.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (254 samples, 13.89%)</title><rect x="930.6" y="499.0" width="163.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="933.6" y="510.0">one/nio/net/JavaSelec..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.05%)</title><rect x="930.6" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 0.05%)</title><rect x="930.6" y="467.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.6" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="930.6" y="451.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.6" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="930.6" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.6" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="930.6" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="933.6" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="930.6" y="403.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="933.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (251 samples, 13.72%)</title><rect x="931.3" y="483.0" width="161.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="934.3" y="494.0">sun/nio/ch/SelectorIm..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (251 samples, 13.72%)</title><rect x="931.3" y="467.0" width="161.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="934.3" y="478.0">sun/nio/ch/SelectorIm..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (251 samples, 13.72%)</title><rect x="931.3" y="451.0" width="161.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="934.3" y="462.0">sun/nio/ch/KQueueSele..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (239 samples, 13.07%)</title><rect x="931.3" y="435.0" width="154.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.3" y="446.0">sun/nio/ch/KQueue.poll</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (2 samples, 0.11%)</title><rect x="934.5" y="419.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="937.5" y="430.0"></text>
</g>
<g>
<title>kevent (232 samples, 12.68%)</title><rect x="935.8" y="419.0" width="149.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="938.8" y="430.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.16%)</title><rect x="1085.5" y="435.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1088.5" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="1085.5" y="419.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.5" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="1085.5" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1088.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.11%)</title><rect x="1086.1" y="419.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.11%)</title><rect x="1086.1" y="403.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.1" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.11%)</title><rect x="1086.1" y="387.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.1" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.11%)</title><rect x="1086.1" y="371.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.1" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.11%)</title><rect x="1086.1" y="355.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1089.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.05%)</title><rect x="1087.4" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.11%)</title><rect x="1088.1" y="435.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.1" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.11%)</title><rect x="1088.1" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.1" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.05%)</title><rect x="1088.1" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1091.1" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.05%)</title><rect x="1088.7" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1091.7" y="414.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.05%)</title><rect x="1088.7" y="387.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1091.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.05%)</title><rect x="1088.7" y="371.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1091.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.11%)</title><rect x="1089.4" y="435.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.4" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.11%)</title><rect x="1089.4" y="419.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.4" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.11%)</title><rect x="1089.4" y="403.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.4" y="414.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.11%)</title><rect x="1089.4" y="387.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1092.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.11%)</title><rect x="1089.4" y="371.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1092.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (4 samples, 0.22%)</title><rect x="1090.6" y="435.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.6" y="446.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="1092.6" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.6" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="1092.6" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.6" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1092.6" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1095.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1092.6" y="371.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (2 samples, 0.11%)</title><rect x="1093.2" y="483.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1096.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (2 samples, 0.11%)</title><rect x="1093.2" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.2" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (2 samples, 0.11%)</title><rect x="1093.2" y="451.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (139 samples, 7.60%)</title><rect x="1094.5" y="499.0" width="89.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.5" y="510.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (139 samples, 7.60%)</title><rect x="1094.5" y="483.0" width="89.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.5" y="494.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (103 samples, 5.63%)</title><rect x="1094.5" y="467.0" width="66.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.5" y="478.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (93 samples, 5.08%)</title><rect x="1095.2" y="451.0" width="60.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.2" y="462.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (93 samples, 5.08%)</title><rect x="1095.2" y="435.0" width="60.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.2" y="446.0">one/ni..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (92 samples, 5.03%)</title><rect x="1095.2" y="419.0" width="59.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1098.2" y="430.0">Reques..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1095.8" y="403.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1098.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (90 samples, 4.92%)</title><rect x="1096.5" y="403.0" width="58.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.5" y="414.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (90 samples, 4.92%)</title><rect x="1096.5" y="387.0" width="58.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.5" y="398.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.55%)</title><rect x="1097.1" y="371.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1100.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.38%)</title><rect x="1099.0" y="355.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1102.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.38%)</title><rect x="1099.0" y="339.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.38%)</title><rect x="1099.0" y="323.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1102.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.38%)</title><rect x="1099.0" y="307.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.0" y="318.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="1102.9" y="291.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1105.9" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (79 samples, 4.32%)</title><rect x="1103.5" y="371.0" width="51.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1106.5" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (79 samples, 4.32%)</title><rect x="1103.5" y="355.0" width="51.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.5" y="366.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (77 samples, 4.21%)</title><rect x="1103.5" y="339.0" width="49.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1106.5" y="350.0">one/n..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (77 samples, 4.21%)</title><rect x="1103.5" y="323.0" width="49.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1106.5" y="334.0">one/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (77 samples, 4.21%)</title><rect x="1103.5" y="307.0" width="49.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.5" y="318.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (77 samples, 4.21%)</title><rect x="1103.5" y="291.0" width="49.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.5" y="302.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (77 samples, 4.21%)</title><rect x="1103.5" y="275.0" width="49.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.5" y="286.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (76 samples, 4.16%)</title><rect x="1103.5" y="259.0" width="49.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.5" y="270.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (1 samples, 0.05%)</title><rect x="1103.5" y="243.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.5" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (75 samples, 4.10%)</title><rect x="1104.2" y="243.0" width="48.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.2" y="254.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (75 samples, 4.10%)</title><rect x="1104.2" y="227.0" width="48.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1107.2" y="238.0">sun/..</text>
</g>
<g>
<title>write (73 samples, 3.99%)</title><rect x="1105.5" y="211.0" width="47.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1108.5" y="222.0">write</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="1152.6" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1155.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.05%)</title><rect x="1152.6" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1155.6" y="254.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.05%)</title><rect x="1152.6" y="227.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.6" y="238.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.05%)</title><rect x="1152.6" y="211.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.05%)</title><rect x="1152.6" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.6" y="206.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.11%)</title><rect x="1153.2" y="339.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.2" y="350.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="1153.2" y="323.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1156.2" y="334.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.05%)</title><rect x="1153.9" y="323.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1156.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.05%)</title><rect x="1154.5" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.5" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="1154.5" y="403.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.5" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="1154.5" y="387.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="1154.5" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1157.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="1154.5" y="355.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1157.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.27%)</title><rect x="1155.2" y="451.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1158.2" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.16%)</title><rect x="1155.2" y="435.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1158.2" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.16%)</title><rect x="1155.2" y="419.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1158.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.11%)</title><rect x="1157.1" y="435.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1160.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.05%)</title><rect x="1158.4" y="451.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1161.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="1158.4" y="435.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1161.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="1158.4" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.4" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.16%)</title><rect x="1159.0" y="451.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1162.0" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.16%)</title><rect x="1159.0" y="435.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1162.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (1 samples, 0.05%)</title><rect x="1161.0" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1164.0" y="478.0"></text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (1 samples, 0.05%)</title><rect x="1161.0" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/AsyncServiceImpl.status (1 samples, 0.05%)</title><rect x="1161.0" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.05%)</title><rect x="1161.0" y="419.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1 samples, 0.05%)</title><rect x="1161.6" y="467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1164.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (34 samples, 1.86%)</title><rect x="1162.3" y="467.0" width="21.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1165.3" y="478.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (34 samples, 1.86%)</title><rect x="1162.3" y="451.0" width="21.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1165.3" y="462.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (34 samples, 1.86%)</title><rect x="1162.3" y="435.0" width="21.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1165.3" y="446.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (34 samples, 1.86%)</title><rect x="1162.3" y="419.0" width="21.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1165.3" y="430.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (34 samples, 1.86%)</title><rect x="1162.3" y="403.0" width="21.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1165.3" y="414.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (31 samples, 1.69%)</title><rect x="1162.3" y="387.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1165.3" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (31 samples, 1.69%)</title><rect x="1162.3" y="371.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.3" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (28 samples, 1.53%)</title><rect x="1164.2" y="355.0" width="18.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.2" y="366.0"></text>
</g>
<g>
<title>read (27 samples, 1.48%)</title><rect x="1164.8" y="339.0" width="17.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1167.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.16%)</title><rect x="1182.3" y="387.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.3" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.16%)</title><rect x="1182.3" y="371.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1185.3" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.16%)</title><rect x="1182.3" y="355.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1185.3" y="366.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.11%)</title><rect x="1184.2" y="515.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.2" y="526.0"></text>
</g>
<g>
<title>[tid=14595] (5 samples, 0.27%)</title><rect x="1185.5" y="531.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1188.5" y="542.0"></text>
</g>
<g>
<title>thread_start (5 samples, 0.27%)</title><rect x="1185.5" y="515.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1188.5" y="526.0"></text>
</g>
<g>
<title>_pthread_start (5 samples, 0.27%)</title><rect x="1185.5" y="499.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1188.5" y="510.0"></text>
</g>
<g>
<title>_pthread_body (5 samples, 0.27%)</title><rect x="1185.5" y="483.0" width="3.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1188.5" y="494.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.27%)</title><rect x="1185.5" y="467.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1188.5" y="478.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.27%)</title><rect x="1185.5" y="451.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.5" y="462.0"></text>
</g>
<g>
<title>JavaThread::run() (5 samples, 0.27%)</title><rect x="1185.5" y="435.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="446.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (5 samples, 0.27%)</title><rect x="1185.5" y="419.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.5" y="430.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (5 samples, 0.27%)</title><rect x="1185.5" y="403.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="414.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (4 samples, 0.22%)</title><rect x="1185.5" y="387.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.5" y="398.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.22%)</title><rect x="1185.5" y="371.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.5" y="382.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (4 samples, 0.22%)</title><rect x="1185.5" y="355.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.5" y="366.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.11%)</title><rect x="1185.5" y="339.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.5" y="350.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.05%)</title><rect x="1185.5" y="323.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.5" y="334.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.05%)</title><rect x="1185.5" y="307.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.5" y="318.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.05%)</title><rect x="1185.5" y="291.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.5" y="302.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.05%)</title><rect x="1185.5" y="275.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.5" y="286.0"></text>
</g>
<g>
<title>IndexSetIterator::next() (1 samples, 0.05%)</title><rect x="1185.5" y="259.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.5" y="270.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.05%)</title><rect x="1186.1" y="323.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.1" y="334.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.05%)</title><rect x="1186.1" y="307.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.1" y="318.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.05%)</title><rect x="1186.1" y="291.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.1" y="302.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.05%)</title><rect x="1186.8" y="339.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.8" y="350.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.05%)</title><rect x="1186.8" y="323.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.8" y="334.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.05%)</title><rect x="1186.8" y="307.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.8" y="318.0"></text>
</g>
<g>
<title>Unique_Node_List::push(Node*) (1 samples, 0.05%)</title><rect x="1186.8" y="291.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.8" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.4" y="339.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.4" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1187.4" y="323.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.4" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1187.4" y="307.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.4" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1187.4" y="291.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.4" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1187.4" y="275.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.4" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.4" y="259.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.4" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1187.4" y="243.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.4" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1187.4" y="227.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.4" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1187.4" y="211.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.4" y="222.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1187.4" y="195.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.4" y="206.0"></text>
</g>
<g>
<title>Compile::optimize_virtual_call(ciMethod*, int, ciInstanceKlass*, ciKlass*, ciMethod*, TypeOopPtr const*, bool, bool&amp;, int&amp;, bool) (1 samples, 0.05%)</title><rect x="1187.4" y="179.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.4" y="190.0"></text>
</g>
<g>
<title>Compile::optimize_inlining(ciMethod*, int, ciInstanceKlass*, ciMethod*, TypeOopPtr const*, bool) (1 samples, 0.05%)</title><rect x="1187.4" y="163.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.4" y="174.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.05%)</title><rect x="1187.4" y="147.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.4" y="158.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.05%)</title><rect x="1187.4" y="131.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.4" y="142.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1187.4" y="115.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.4" y="126.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1187.4" y="99.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.4" y="110.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1187.4" y="83.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.4" y="94.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.05%)</title><rect x="1187.4" y="67.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.4" y="78.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.05%)</title><rect x="1187.4" y="51.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.4" y="62.0"></text>
</g>
<g>
<title>GrowableArray&lt;Symbol*&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 0.05%)</title><rect x="1187.4" y="35.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.4" y="46.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.05%)</title><rect x="1188.1" y="387.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.1" y="398.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.05%)</title><rect x="1188.1" y="371.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.1" y="382.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.05%)</title><rect x="1188.1" y="355.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.1" y="366.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.05%)</title><rect x="1188.1" y="339.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.1" y="350.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="1188.1" y="323.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1191.1" y="334.0"></text>
</g>
<g>
<title>[tid=22787] (2 samples, 0.11%)</title><rect x="1188.7" y="531.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1191.7" y="542.0"></text>
</g>
<g>
<title>thread_start (2 samples, 0.11%)</title><rect x="1188.7" y="515.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1191.7" y="526.0"></text>
</g>
<g>
<title>_pthread_start (2 samples, 0.11%)</title><rect x="1188.7" y="499.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1191.7" y="510.0"></text>
</g>
<g>
<title>_pthread_body (2 samples, 0.11%)</title><rect x="1188.7" y="483.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1191.7" y="494.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.11%)</title><rect x="1188.7" y="467.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1191.7" y="478.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.11%)</title><rect x="1188.7" y="451.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.7" y="462.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.11%)</title><rect x="1188.7" y="435.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.7" y="446.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.11%)</title><rect x="1188.7" y="419.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.7" y="430.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.11%)</title><rect x="1188.7" y="403.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.7" y="414.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.11%)</title><rect x="1188.7" y="387.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.7" y="398.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.11%)</title><rect x="1188.7" y="371.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.11%)</title><rect x="1188.7" y="355.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1191.7" y="366.0"></text>
</g>
</g>
</svg>
