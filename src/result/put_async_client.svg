<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1061"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1061"> </text>
<g id="frames">
<g>
<title>all (66 samples, 100.00%)</title><rect x="10.0" y="1027.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1038.0">all</text>
</g>
<g>
<title>inflate (1 samples, 1.52%)</title><rect x="10.0" y="1011.0" width="17.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.run (11 samples, 16.67%)</title><rect x="27.9" y="1011.0" width="196.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.9" y="1022.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11 samples, 16.67%)</title><rect x="27.9" y="995.0" width="196.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.9" y="1006.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11 samples, 16.67%)</title><rect x="27.9" y="979.0" width="196.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.9" y="990.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (6 samples, 9.09%)</title><rect x="27.9" y="963.0" width="107.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.9" y="974.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 9.09%)</title><rect x="27.9" y="947.0" width="107.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.9" y="958.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6 samples, 9.09%)</title><rect x="27.9" y="931.0" width="107.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.9" y="942.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$240/410267771.apply (2 samples, 3.03%)</title><rect x="27.9" y="915.0" width="35.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.9" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (2 samples, 3.03%)</title><rect x="27.9" y="899.0" width="35.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.9" y="910.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 1.52%)</title><rect x="27.9" y="883.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.9" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 1.52%)</title><rect x="27.9" y="867.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.9" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 1.52%)</title><rect x="27.9" y="851.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 1.52%)</title><rect x="27.9" y="835.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.9" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 1.52%)</title><rect x="27.9" y="819.0" width="17.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1374269365.invokeStatic (1 samples, 1.52%)</title><rect x="27.9" y="803.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 1.52%)</title><rect x="27.9" y="787.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 1.52%)</title><rect x="27.9" y="771.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 1.52%)</title><rect x="27.9" y="755.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (1 samples, 1.52%)</title><rect x="27.9" y="739.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (1 samples, 1.52%)</title><rect x="27.9" y="723.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.9" y="734.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass0 (1 samples, 1.52%)</title><rect x="27.9" y="707.0" width="17.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="30.9" y="718.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 1.52%)</title><rect x="27.9" y="691.0" width="17.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="30.9" y="702.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 1.52%)</title><rect x="27.9" y="675.0" width="17.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="30.9" y="686.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 1.52%)</title><rect x="27.9" y="659.0" width="17.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="30.9" y="670.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 1.52%)</title><rect x="27.9" y="643.0" width="17.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="30.9" y="654.0"></text>
</g>
<g>
<title>ConstantPool::allocate(ClassLoaderData*, int, Thread*) (1 samples, 1.52%)</title><rect x="27.9" y="627.0" width="17.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="30.9" y="638.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 1.52%)</title><rect x="27.9" y="611.0" width="17.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="30.9" y="622.0"></text>
</g>
<g>
<title>ClassLoaderData::metaspace_non_null() [clone .part.207] (1 samples, 1.52%)</title><rect x="27.9" y="595.0" width="17.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="30.9" y="606.0"></text>
</g>
<g>
<title>ClassLoaderMetaspace::ClassLoaderMetaspace(Mutex*, Metaspace::MetaspaceType) (1 samples, 1.52%)</title><rect x="27.9" y="579.0" width="17.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="30.9" y="590.0"></text>
</g>
<g>
<title>metaspace::VirtualSpaceList::get_new_chunk(unsigned long, unsigned long) (1 samples, 1.52%)</title><rect x="27.9" y="563.0" width="17.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.9" y="574.0"></text>
</g>
<g>
<title>metaspace::Metachunk::Metachunk(metaspace::ChunkIndex, bool, unsigned long, metaspace::VirtualSpaceNode*) (1 samples, 1.52%)</title><rect x="27.9" y="547.0" width="17.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="30.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="27.9" y="531.0" width="17.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="30.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="27.9" y="515.0" width="17.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="30.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="27.9" y="499.0" width="17.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="30.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="27.9" y="483.0" width="17.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="30.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 1.52%)</title><rect x="45.8" y="883.0" width="17.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 1.52%)</title><rect x="45.8" y="867.0" width="17.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 1.52%)</title><rect x="45.8" y="851.0" width="17.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 1.52%)</title><rect x="45.8" y="835.0" width="17.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 1.52%)</title><rect x="45.8" y="819.0" width="17.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.8" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 1.52%)</title><rect x="45.8" y="803.0" width="17.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 1.52%)</title><rect x="45.8" y="787.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$138/2011251853.apply (4 samples, 6.06%)</title><rect x="63.6" y="915.0" width="71.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.6" y="926.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (4 samples, 6.06%)</title><rect x="63.6" y="899.0" width="71.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.6" y="910.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (4 samples, 6.06%)</title><rect x="63.6" y="883.0" width="71.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.6" y="894.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (4 samples, 6.06%)</title><rect x="63.6" y="867.0" width="71.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.6" y="878.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (4 samples, 6.06%)</title><rect x="63.6" y="851.0" width="71.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.6" y="862.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (4 samples, 6.06%)</title><rect x="63.6" y="835.0" width="71.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.6" y="846.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (4 samples, 6.06%)</title><rect x="63.6" y="819.0" width="71.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.6" y="830.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (4 samples, 6.06%)</title><rect x="63.6" y="803.0" width="71.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.6" y="814.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3 samples, 4.55%)</title><rect x="63.6" y="787.0" width="53.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.6" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3 samples, 4.55%)</title><rect x="63.6" y="771.0" width="53.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.6" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 4.55%)</title><rect x="63.6" y="755.0" width="53.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.6" y="766.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$157/691061263.apply (3 samples, 4.55%)</title><rect x="63.6" y="739.0" width="53.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.6" y="750.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (3 samples, 4.55%)</title><rect x="63.6" y="723.0" width="53.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.6" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (3 samples, 4.55%)</title><rect x="63.6" y="707.0" width="53.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.6" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (3 samples, 4.55%)</title><rect x="63.6" y="691.0" width="53.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.6" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (2 samples, 3.03%)</title><rect x="81.5" y="675.0" width="35.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.5" y="686.0">jdk..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 1.52%)</title><rect x="81.5" y="659.0" width="17.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="84.5" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 1.52%)</title><rect x="81.5" y="643.0" width="17.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="84.5" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 1.52%)</title><rect x="81.5" y="627.0" width="17.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="84.5" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 1.52%)</title><rect x="81.5" y="611.0" width="17.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="84.5" y="622.0"></text>
</g>
<g>
<title>_init (1 samples, 1.52%)</title><rect x="81.5" y="595.0" width="17.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="84.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1 samples, 1.52%)</title><rect x="99.4" y="659.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getPlainConnection (1 samples, 1.52%)</title><rect x="99.4" y="643.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.&lt;init&gt; (1 samples, 1.52%)</title><rect x="99.4" y="627.0" width="17.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.&lt;init&gt; (1 samples, 1.52%)</title><rect x="99.4" y="611.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.&lt;init&gt; (1 samples, 1.52%)</title><rect x="99.4" y="595.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.&lt;init&gt; (1 samples, 1.52%)</title><rect x="99.4" y="579.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 1.52%)</title><rect x="99.4" y="563.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 1.52%)</title><rect x="99.4" y="547.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 1.52%)</title><rect x="99.4" y="531.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 1.52%)</title><rect x="99.4" y="515.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 1.52%)</title><rect x="99.4" y="499.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1374269365.invokeStatic (1 samples, 1.52%)</title><rect x="99.4" y="483.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 1.52%)</title><rect x="99.4" y="467.0" width="17.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 1.52%)</title><rect x="99.4" y="451.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 1.52%)</title><rect x="99.4" y="435.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (1 samples, 1.52%)</title><rect x="99.4" y="419.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (1 samples, 1.52%)</title><rect x="99.4" y="403.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.4" y="414.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass0 (1 samples, 1.52%)</title><rect x="99.4" y="387.0" width="17.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="102.4" y="398.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 1.52%)</title><rect x="99.4" y="371.0" width="17.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="102.4" y="382.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 1.52%)</title><rect x="99.4" y="355.0" width="17.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="102.4" y="366.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 1.52%)</title><rect x="99.4" y="339.0" width="17.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="102.4" y="350.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 1.52%)</title><rect x="99.4" y="323.0" width="17.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="102.4" y="334.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 1.52%)</title><rect x="99.4" y="307.0" width="17.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="102.4" y="318.0"></text>
</g>
<g>
<title>StackMapFrame::set_locals_from_arg(methodHandle const&amp;, VerificationType, Thread*) (1 samples, 1.52%)</title><rect x="99.4" y="291.0" width="17.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="102.4" y="302.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 1.52%)</title><rect x="99.4" y="275.0" width="17.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="102.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1 samples, 1.52%)</title><rect x="117.3" y="787.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.3" y="798.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 1.52%)</title><rect x="117.3" y="771.0" width="17.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="120.3" y="782.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 1.52%)</title><rect x="117.3" y="755.0" width="17.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="120.3" y="766.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 1.52%)</title><rect x="117.3" y="739.0" width="17.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="120.3" y="750.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 1.52%)</title><rect x="117.3" y="723.0" width="17.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="120.3" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 1.52%)</title><rect x="117.3" y="707.0" width="17.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="120.3" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 1.52%)</title><rect x="117.3" y="691.0" width="17.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="120.3" y="702.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 1.52%)</title><rect x="117.3" y="675.0" width="17.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="120.3" y="686.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 1.52%)</title><rect x="117.3" y="659.0" width="17.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="120.3" y="670.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 1.52%)</title><rect x="117.3" y="643.0" width="17.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="120.3" y="654.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (1 samples, 1.52%)</title><rect x="117.3" y="627.0" width="17.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="120.3" y="638.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 1.52%)</title><rect x="117.3" y="611.0" width="17.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="120.3" y="622.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 1.52%)</title><rect x="117.3" y="595.0" width="17.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="120.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$261/1548475756.run (3 samples, 4.55%)</title><rect x="135.2" y="963.0" width="53.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.2" y="974.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 4.55%)</title><rect x="135.2" y="947.0" width="53.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.2" y="958.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (3 samples, 4.55%)</title><rect x="135.2" y="931.0" width="53.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.2" y="942.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (3 samples, 4.55%)</title><rect x="135.2" y="915.0" width="53.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.2" y="926.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 4.55%)</title><rect x="135.2" y="899.0" width="53.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.2" y="910.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 4.55%)</title><rect x="135.2" y="883.0" width="53.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.2" y="894.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 4.55%)</title><rect x="135.2" y="867.0" width="53.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.2" y="878.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 4.55%)</title><rect x="135.2" y="851.0" width="53.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.2" y="862.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 4.55%)</title><rect x="135.2" y="835.0" width="53.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="138.2" y="846.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 4.55%)</title><rect x="135.2" y="819.0" width="53.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.2" y="830.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3 samples, 4.55%)</title><rect x="135.2" y="803.0" width="53.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.2" y="814.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (2 samples, 3.03%)</title><rect x="135.2" y="787.0" width="35.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.2" y="798.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 1.52%)</title><rect x="135.2" y="771.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 1.52%)</title><rect x="135.2" y="755.0" width="17.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 1.52%)</title><rect x="135.2" y="739.0" width="17.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 1.52%)</title><rect x="135.2" y="723.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 1.52%)</title><rect x="135.2" y="707.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1374269365.invokeStatic (1 samples, 1.52%)</title><rect x="135.2" y="691.0" width="17.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 1.52%)</title><rect x="135.2" y="675.0" width="17.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 1.52%)</title><rect x="135.2" y="659.0" width="17.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 1.52%)</title><rect x="135.2" y="643.0" width="17.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1 samples, 1.52%)</title><rect x="153.0" y="771.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 1.52%)</title><rect x="153.0" y="755.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 1.52%)</title><rect x="153.0" y="739.0" width="17.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 1.52%)</title><rect x="153.0" y="723.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 1.52%)</title><rect x="153.0" y="707.0" width="17.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 1.52%)</title><rect x="153.0" y="691.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$243/1562756609.apply (1 samples, 1.52%)</title><rect x="153.0" y="675.0" width="17.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1 samples, 1.52%)</title><rect x="153.0" y="659.0" width="17.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 1.52%)</title><rect x="153.0" y="643.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$153/633678813.apply (1 samples, 1.52%)</title><rect x="153.0" y="627.0" width="17.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 1.52%)</title><rect x="153.0" y="611.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 1.52%)</title><rect x="153.0" y="595.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 1.52%)</title><rect x="153.0" y="579.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 1.52%)</title><rect x="153.0" y="563.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 1.52%)</title><rect x="153.0" y="547.0" width="17.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 1.52%)</title><rect x="153.0" y="531.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 1.52%)</title><rect x="153.0" y="515.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1374269365.invokeStatic (1 samples, 1.52%)</title><rect x="153.0" y="499.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 1.52%)</title><rect x="153.0" y="483.0" width="17.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 1.52%)</title><rect x="153.0" y="467.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 1.52%)</title><rect x="153.0" y="451.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (1 samples, 1.52%)</title><rect x="153.0" y="435.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.newClass (1 samples, 1.52%)</title><rect x="153.0" y="419.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.newStringishItem (1 samples, 1.52%)</title><rect x="153.0" y="403.0" width="17.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.newUTF8 (1 samples, 1.52%)</title><rect x="153.0" y="387.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.put (1 samples, 1.52%)</title><rect x="153.0" y="371.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 1.52%)</title><rect x="170.9" y="787.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 1.52%)</title><rect x="170.9" y="771.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 1.52%)</title><rect x="170.9" y="755.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 1.52%)</title><rect x="170.9" y="739.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 1.52%)</title><rect x="170.9" y="723.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.9" y="734.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1 samples, 1.52%)</title><rect x="170.9" y="707.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 1.52%)</title><rect x="170.9" y="691.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 1.52%)</title><rect x="170.9" y="675.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 1.52%)</title><rect x="170.9" y="659.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1 samples, 1.52%)</title><rect x="170.9" y="643.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 1.52%)</title><rect x="170.9" y="627.0" width="17.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="611.0" width="17.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="173.9" y="622.0"></text>
</g>
<g>
<title>writev (1 samples, 1.52%)</title><rect x="170.9" y="595.0" width="17.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="173.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="579.0" width="17.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="173.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="563.0" width="17.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="173.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="547.0" width="17.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="173.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="531.0" width="17.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="173.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="515.0" width="17.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="173.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="499.0" width="17.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="173.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="483.0" width="17.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="173.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="467.0" width="17.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="173.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="451.0" width="17.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="173.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="435.0" width="17.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="173.9" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="419.0" width="17.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="173.9" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="403.0" width="17.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="173.9" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="387.0" width="17.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="173.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="371.0" width="17.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="173.9" y="382.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="355.0" width="17.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="173.9" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="339.0" width="17.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="173.9" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="323.0" width="17.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="173.9" y="334.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="307.0" width="17.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="173.9" y="318.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="291.0" width="17.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="173.9" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="275.0" width="17.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="173.9" y="286.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="259.0" width="17.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="173.9" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="243.0" width="17.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="173.9" y="254.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="227.0" width="17.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="173.9" y="238.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="211.0" width="17.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="173.9" y="222.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="195.0" width="17.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="173.9" y="206.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="179.0" width="17.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="173.9" y="190.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="163.0" width="17.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="173.9" y="174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="147.0" width="17.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="173.9" y="158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="131.0" width="17.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="173.9" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="115.0" width="17.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="173.9" y="126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="99.0" width="17.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="173.9" y="110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="83.0" width="17.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="173.9" y="94.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="67.0" width="17.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="173.9" y="78.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="51.0" width="17.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="173.9" y="62.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="170.9" y="35.0" width="17.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="173.9" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 3.03%)</title><rect x="188.8" y="963.0" width="35.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.8" y="974.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 3.03%)</title><rect x="188.8" y="947.0" width="35.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.8" y="958.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 3.03%)</title><rect x="188.8" y="931.0" width="35.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.8" y="942.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$197/862142980.run (2 samples, 3.03%)</title><rect x="188.8" y="915.0" width="35.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.8" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 3.03%)</title><rect x="188.8" y="899.0" width="35.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.8" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 3.03%)</title><rect x="188.8" y="883.0" width="35.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.8" y="894.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2 samples, 3.03%)</title><rect x="188.8" y="867.0" width="35.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.8" y="878.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2 samples, 3.03%)</title><rect x="188.8" y="851.0" width="35.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.8" y="862.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2 samples, 3.03%)</title><rect x="188.8" y="835.0" width="35.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.8" y="846.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 1.52%)</title><rect x="188.8" y="819.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 1.52%)</title><rect x="188.8" y="803.0" width="17.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 1.52%)</title><rect x="188.8" y="787.0" width="17.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 1.52%)</title><rect x="188.8" y="771.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 1.52%)</title><rect x="188.8" y="755.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 1.52%)</title><rect x="188.8" y="739.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 1.52%)</title><rect x="188.8" y="723.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 1.52%)</title><rect x="188.8" y="707.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 1.52%)</title><rect x="188.8" y="691.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 1.52%)</title><rect x="188.8" y="675.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$140/914737545.apply (1 samples, 1.52%)</title><rect x="188.8" y="659.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1 samples, 1.52%)</title><rect x="188.8" y="643.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1 samples, 1.52%)</title><rect x="188.8" y="627.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1 samples, 1.52%)</title><rect x="188.8" y="611.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 1.52%)</title><rect x="188.8" y="595.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 1.52%)</title><rect x="188.8" y="579.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 1.52%)</title><rect x="188.8" y="563.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.8" y="574.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 1.52%)</title><rect x="188.8" y="547.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1 samples, 1.52%)</title><rect x="206.7" y="819.0" width="17.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (1 samples, 1.52%)</title><rect x="206.7" y="803.0" width="17.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.7" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 1.52%)</title><rect x="206.7" y="787.0" width="17.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 1.52%)</title><rect x="206.7" y="771.0" width="17.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 1.52%)</title><rect x="206.7" y="755.0" width="17.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.7" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (1 samples, 1.52%)</title><rect x="206.7" y="739.0" width="17.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 1.52%)</title><rect x="206.7" y="723.0" width="17.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 1.52%)</title><rect x="206.7" y="707.0" width="17.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="209.7" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 1.52%)</title><rect x="206.7" y="691.0" width="17.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="209.7" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 1.52%)</title><rect x="206.7" y="675.0" width="17.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="209.7" y="686.0"></text>
</g>
<g>
<title>CompiledIC::is_megamorphic() const (1 samples, 1.52%)</title><rect x="206.7" y="659.0" width="17.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="209.7" y="670.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 1.52%)</title><rect x="206.7" y="643.0" width="17.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="209.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 3.03%)</title><rect x="224.5" y="1011.0" width="35.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.5" y="1022.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLL.make (1 samples, 1.52%)</title><rect x="224.5" y="995.0" width="17.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLL.&lt;init&gt; (1 samples, 1.52%)</title><rect x="224.5" y="979.0" width="17.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 1.52%)</title><rect x="224.5" y="963.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (1 samples, 1.52%)</title><rect x="224.5" y="947.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.5" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (1 samples, 1.52%)</title><rect x="224.5" y="931.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.5" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 1.52%)</title><rect x="224.5" y="915.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.5" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 1.52%)</title><rect x="224.5" y="899.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (1 samples, 1.52%)</title><rect x="224.5" y="883.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.5" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.resolveInvokerMember (1 samples, 1.52%)</title><rect x="224.5" y="867.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.5" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.&lt;init&gt; (1 samples, 1.52%)</title><rect x="224.5" y="851.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.5" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.initResolved (1 samples, 1.52%)</title><rect x="224.5" y="835.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.5" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (1 samples, 1.52%)</title><rect x="242.4" y="995.0" width="17.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (1 samples, 1.52%)</title><rect x="242.4" y="979.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.4" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (1 samples, 1.52%)</title><rect x="242.4" y="963.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.4" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (1 samples, 1.52%)</title><rect x="242.4" y="947.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.4" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.filterArguments (1 samples, 1.52%)</title><rect x="242.4" y="931.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="245.4" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.filterArgument (1 samples, 1.52%)</title><rect x="242.4" y="915.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.4" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.filterArgumentForm (1 samples, 1.52%)</title><rect x="242.4" y="899.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.4" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.makeArgumentCombinationForm (1 samples, 1.52%)</title><rect x="242.4" y="883.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.4" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.newSpeciesData (1 samples, 1.52%)</title><rect x="242.4" y="867.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.4" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$SpeciesData.extendWith (1 samples, 1.52%)</title><rect x="242.4" y="851.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.4" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer.findSpecies (1 samples, 1.52%)</title><rect x="242.4" y="835.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.loadSpecies (1 samples, 1.52%)</title><rect x="242.4" y="819.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.generateConcreteSpeciesCode (1 samples, 1.52%)</title><rect x="242.4" y="803.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.generateConcreteSpeciesCodeFile (1 samples, 1.52%)</title><rect x="242.4" y="787.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.parameterList (1 samples, 1.52%)</title><rect x="242.4" y="771.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.4" y="782.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 1.52%)</title><rect x="242.4" y="755.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.4" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableRandomAccessList.&lt;init&gt; (1 samples, 1.52%)</title><rect x="242.4" y="739.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.4" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.&lt;init&gt; (1 samples, 1.52%)</title><rect x="242.4" y="723.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.4" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.&lt;init&gt; (1 samples, 1.52%)</title><rect x="242.4" y="707.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (2 samples, 3.03%)</title><rect x="260.3" y="1011.0" width="35.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="263.3" y="1022.0">jdk..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectedKeys (1 samples, 1.52%)</title><rect x="260.3" y="995.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.3" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.ensureOpen (1 samples, 1.52%)</title><rect x="260.3" y="979.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.3" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 1.52%)</title><rect x="278.2" y="995.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.2" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 1.52%)</title><rect x="278.2" y="979.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.2" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (1 samples, 1.52%)</title><rect x="278.2" y="963.0" width="17.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.2" y="974.0"></text>
</g>
<g>
<title>msort_with_tmp.part.0 (1 samples, 1.52%)</title><rect x="296.1" y="1011.0" width="17.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="299.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="296.1" y="995.0" width="17.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="299.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="296.1" y="979.0" width="17.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="299.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="296.1" y="963.0" width="17.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="299.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="296.1" y="947.0" width="17.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="299.1" y="958.0"></text>
</g>
<g>
<title>munmap (2 samples, 3.03%)</title><rect x="313.9" y="1011.0" width="35.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="316.9" y="1022.0">mun..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="313.9" y="995.0" width="35.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="316.9" y="1006.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="313.9" y="979.0" width="35.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="316.9" y="990.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="313.9" y="963.0" width="35.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="316.9" y="974.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="313.9" y="947.0" width="35.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="316.9" y="958.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="313.9" y="931.0" width="35.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="316.9" y="942.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="313.9" y="915.0" width="35.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="316.9" y="926.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="313.9" y="899.0" width="35.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="316.9" y="910.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="313.9" y="883.0" width="35.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="316.9" y="894.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="313.9" y="867.0" width="35.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="316.9" y="878.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="313.9" y="851.0" width="35.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="316.9" y="862.0">[un..</text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="331.8" y="835.0" width="17.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="334.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="331.8" y="819.0" width="17.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="334.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="331.8" y="803.0" width="17.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="334.8" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5 samples, 7.58%)</title><rect x="349.7" y="1011.0" width="89.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.7" y="1022.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/Session.process (5 samples, 7.58%)</title><rect x="349.7" y="995.0" width="89.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.7" y="1006.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5 samples, 7.58%)</title><rect x="349.7" y="979.0" width="89.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.7" y="990.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 7.58%)</title><rect x="349.7" y="963.0" width="89.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.7" y="974.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 7.58%)</title><rect x="349.7" y="947.0" width="89.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.7" y="958.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 7.58%)</title><rect x="349.7" y="931.0" width="89.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.7" y="942.0">one/nio/ht..</text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/AsyncServiceImpl.handleDefault (5 samples, 7.58%)</title><rect x="349.7" y="915.0" width="89.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.7" y="926.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/AsyncServiceImpl.entity (5 samples, 7.58%)</title><rect x="349.7" y="899.0" width="89.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.7" y="910.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/Coordinators.coordinateRequest (5 samples, 7.58%)</title><rect x="349.7" y="883.0" width="89.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.7" y="894.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/Coordinators.coordinatePut (5 samples, 7.58%)</title><rect x="349.7" y="867.0" width="89.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.7" y="878.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (4 samples, 6.06%)</title><rect x="349.7" y="851.0" width="71.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.7" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 6.06%)</title><rect x="349.7" y="835.0" width="71.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.7" y="846.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (4 samples, 6.06%)</title><rect x="349.7" y="819.0" width="71.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.7" y="830.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 6.06%)</title><rect x="349.7" y="803.0" width="71.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.7" y="814.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 6.06%)</title><rect x="349.7" y="787.0" width="71.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.7" y="798.0">java/uti..</text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (4 samples, 6.06%)</title><rect x="349.7" y="771.0" width="71.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.7" y="782.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 4.55%)</title><rect x="367.6" y="755.0" width="53.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.6" y="766.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/Coordinators$$Lambda$132/275330987.apply (3 samples, 4.55%)</title><rect x="367.6" y="739.0" width="53.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.6" y="750.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/Coordinators.lambda$coordinatePut$6 (3 samples, 4.55%)</title><rect x="367.6" y="723.0" width="53.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.6" y="734.0">ru/ma..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (3 samples, 4.55%)</title><rect x="367.6" y="707.0" width="53.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.6" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3 samples, 4.55%)</title><rect x="367.6" y="691.0" width="53.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.6" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3 samples, 4.55%)</title><rect x="367.6" y="675.0" width="53.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.6" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3 samples, 4.55%)</title><rect x="367.6" y="659.0" width="53.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.6" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1 samples, 1.52%)</title><rect x="367.6" y="643.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.6" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 1.52%)</title><rect x="367.6" y="627.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="370.6" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 1.52%)</title><rect x="367.6" y="611.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="370.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 1.52%)</title><rect x="367.6" y="595.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 1.52%)</title><rect x="367.6" y="579.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1 samples, 1.52%)</title><rect x="385.5" y="643.0" width="17.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 1.52%)</title><rect x="385.5" y="627.0" width="17.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="388.5" y="638.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 1.52%)</title><rect x="385.5" y="611.0" width="17.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="388.5" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (1 samples, 1.52%)</title><rect x="385.5" y="595.0" width="17.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="388.5" y="606.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 1.52%)</title><rect x="385.5" y="579.0" width="17.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="388.5" y="590.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (1 samples, 1.52%)</title><rect x="385.5" y="563.0" width="17.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="388.5" y="574.0"></text>
</g>
<g>
<title>ConstantPool::resolve_bootstrap_specifier_at_impl(constantPoolHandle const&amp;, int, Thread*) (1 samples, 1.52%)</title><rect x="385.5" y="547.0" width="17.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="388.5" y="558.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (1 samples, 1.52%)</title><rect x="385.5" y="531.0" width="17.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="388.5" y="542.0"></text>
</g>
<g>
<title>SystemDictionary::link_method_handle_constant(Klass*, int, Klass*, Symbol*, Symbol*, Thread*) (1 samples, 1.52%)</title><rect x="385.5" y="515.0" width="17.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="388.5" y="526.0"></text>
</g>
<g>
<title>MethodHandles::resolve_MemberName(Handle, Klass*, bool, Thread*) (1 samples, 1.52%)</title><rect x="385.5" y="499.0" width="17.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="388.5" y="510.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 1.52%)</title><rect x="385.5" y="483.0" width="17.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="388.5" y="494.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_static_method(LinkInfo const&amp;, Thread*) (1 samples, 1.52%)</title><rect x="385.5" y="467.0" width="17.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="388.5" y="478.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 1.52%)</title><rect x="385.5" y="451.0" width="17.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="388.5" y="462.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 1.52%)</title><rect x="385.5" y="435.0" width="17.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="388.5" y="446.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 1.52%)</title><rect x="385.5" y="419.0" width="17.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="388.5" y="430.0"></text>
</g>
<g>
<title>SystemDictionary::add_loader_constraint(Symbol*, Handle, Handle, Thread*) (1 samples, 1.52%)</title><rect x="385.5" y="403.0" width="17.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="388.5" y="414.0"></text>
</g>
<g>
<title>Dictionary::find_class(int, unsigned int, Symbol*) (1 samples, 1.52%)</title><rect x="385.5" y="387.0" width="17.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="388.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1 samples, 1.52%)</title><rect x="403.3" y="643.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1 samples, 1.52%)</title><rect x="403.3" y="627.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 1.52%)</title><rect x="403.3" y="611.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 1.52%)</title><rect x="403.3" y="595.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 1.52%)</title><rect x="403.3" y="579.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="406.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 1.52%)</title><rect x="403.3" y="563.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="406.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethod (1 samples, 1.52%)</title><rect x="403.3" y="547.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodImpl (1 samples, 1.52%)</title><rect x="403.3" y="531.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.varHandleOperationLinkerMethod (1 samples, 1.52%)</title><rect x="403.3" y="515.0" width="17.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandle$AccessDescriptor.&lt;init&gt; (1 samples, 1.52%)</title><rect x="403.3" y="499.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.erase (1 samples, 1.52%)</title><rect x="403.3" y="483.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="406.3" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 1.52%)</title><rect x="403.3" y="467.0" width="17.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="406.3" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 1.52%)</title><rect x="403.3" y="451.0" width="17.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="406.3" y="462.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 1.52%)</title><rect x="403.3" y="435.0" width="17.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="406.3" y="446.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 1.52%)</title><rect x="403.3" y="419.0" width="17.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="406.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/Coordinators.createRequests (1 samples, 1.52%)</title><rect x="421.2" y="851.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.2" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 1.52%)</title><rect x="421.2" y="835.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 1.52%)</title><rect x="421.2" y="819.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.2" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 1.52%)</title><rect x="421.2" y="803.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.2" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 1.52%)</title><rect x="421.2" y="787.0" width="17.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 1.52%)</title><rect x="421.2" y="771.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.2" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 1.52%)</title><rect x="421.2" y="755.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.2" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 1.52%)</title><rect x="421.2" y="739.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 1.52%)</title><rect x="421.2" y="723.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.2" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 1.52%)</title><rect x="421.2" y="707.0" width="17.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 1.52%)</title><rect x="421.2" y="691.0" width="17.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/Coordinators$$Lambda$118/1427945906.apply (1 samples, 1.52%)</title><rect x="421.2" y="675.0" width="17.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="424.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/Coordinators.lambda$createRequests$11 (1 samples, 1.52%)</title><rect x="421.2" y="659.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 1.52%)</title><rect x="421.2" y="643.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 1.52%)</title><rect x="421.2" y="627.0" width="17.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (1 samples, 1.52%)</title><rect x="421.2" y="611.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (1 samples, 1.52%)</title><rect x="421.2" y="595.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="424.2" y="606.0"></text>
</g>
<g>
<title>start_thread (42 samples, 63.64%)</title><rect x="439.1" y="1011.0" width="750.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="442.1" y="1022.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (42 samples, 63.64%)</title><rect x="439.1" y="995.0" width="750.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="442.1" y="1006.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (42 samples, 63.64%)</title><rect x="439.1" y="979.0" width="750.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="442.1" y="990.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (38 samples, 57.58%)</title><rect x="439.1" y="963.0" width="679.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="442.1" y="974.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (38 samples, 57.58%)</title><rect x="439.1" y="947.0" width="679.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="442.1" y="958.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (37 samples, 56.06%)</title><rect x="439.1" y="931.0" width="661.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="442.1" y="942.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (37 samples, 56.06%)</title><rect x="439.1" y="915.0" width="661.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="442.1" y="926.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (28 samples, 42.42%)</title><rect x="439.1" y="899.0" width="500.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="442.1" y="910.0">C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (28 samples, 42.42%)</title><rect x="439.1" y="883.0" width="500.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="442.1" y="894.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, boo..</text>
</g>
<g>
<title>Compile::Code_Gen() (16 samples, 24.24%)</title><rect x="439.1" y="867.0" width="286.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="442.1" y="878.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (1 samples, 1.52%)</title><rect x="439.1" y="851.0" width="17.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="442.1" y="862.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 1.52%)</title><rect x="439.1" y="835.0" width="17.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="442.1" y="846.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 1.52%)</title><rect x="457.0" y="851.0" width="17.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="460.0" y="862.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 1.52%)</title><rect x="457.0" y="835.0" width="17.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="460.0" y="846.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 1.52%)</title><rect x="457.0" y="819.0" width="17.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="460.0" y="830.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 1.52%)</title><rect x="457.0" y="803.0" width="17.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="460.0" y="814.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 1.52%)</title><rect x="457.0" y="787.0" width="17.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="460.0" y="798.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 1.52%)</title><rect x="457.0" y="771.0" width="17.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="460.0" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 1.52%)</title><rect x="474.8" y="851.0" width="17.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="477.8" y="862.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 1.52%)</title><rect x="474.8" y="835.0" width="17.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="477.8" y="846.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 1.52%)</title><rect x="474.8" y="819.0" width="17.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="477.8" y="830.0"></text>
</g>
<g>
<title>PhaseLive::add_livein(Block*, IndexSet*) (1 samples, 1.52%)</title><rect x="474.8" y="803.0" width="17.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="477.8" y="814.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 1.52%)</title><rect x="474.8" y="787.0" width="17.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="477.8" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (13 samples, 19.70%)</title><rect x="492.7" y="851.0" width="232.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="495.7" y="862.0">PhaseChaitin::Register_Allocate()</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 1.52%)</title><rect x="510.6" y="835.0" width="17.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="513.6" y="846.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 1.52%)</title><rect x="528.5" y="835.0" width="17.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="531.5" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 3.03%)</title><rect x="546.4" y="835.0" width="35.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="549.4" y="846.0">Pha..</text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 1.52%)</title><rect x="564.2" y="819.0" width="17.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="567.2" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (3 samples, 4.55%)</title><rect x="582.1" y="835.0" width="53.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="585.1" y="846.0">Phase..</text>
</g>
<g>
<title>PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 1.52%)</title><rect x="600.0" y="819.0" width="17.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="603.0" y="830.0"></text>
</g>
<g>
<title>TypeNode::bottom_type() const (1 samples, 1.52%)</title><rect x="600.0" y="803.0" width="17.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="603.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="617.9" y="819.0" width="17.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="620.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="617.9" y="803.0" width="17.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="620.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="617.9" y="787.0" width="17.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="620.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="617.9" y="771.0" width="17.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="620.9" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.178] (1 samples, 1.52%)</title><rect x="635.8" y="835.0" width="17.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="638.8" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 3.03%)</title><rect x="653.6" y="835.0" width="35.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="656.6" y="846.0">Pha..</text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 1.52%)</title><rect x="653.6" y="819.0" width="17.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="656.6" y="830.0"></text>
</g>
<g>
<title>TypeNode::ideal_reg() const (1 samples, 1.52%)</title><rect x="671.5" y="819.0" width="17.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="674.5" y="830.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 1.52%)</title><rect x="689.4" y="835.0" width="17.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="692.4" y="846.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 1.52%)</title><rect x="689.4" y="819.0" width="17.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="692.4" y="830.0"></text>
</g>
<g>
<title>rdi_RegPOper::in_RegMask(int) const (1 samples, 1.52%)</title><rect x="707.3" y="835.0" width="17.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="710.3" y="846.0"></text>
</g>
<g>
<title>Compile::Optimize() (10 samples, 15.15%)</title><rect x="725.2" y="867.0" width="178.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="728.2" y="878.0">Compile::Optimize()</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 1.52%)</title><rect x="725.2" y="851.0" width="17.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="728.2" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (7 samples, 10.61%)</title><rect x="743.0" y="851.0" width="125.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="746.0" y="862.0">PhaseIdealLoop:..</text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 1.52%)</title><rect x="743.0" y="835.0" width="17.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="746.0" y="846.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 1.52%)</title><rect x="743.0" y="819.0" width="17.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="746.0" y="830.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 1.52%)</title><rect x="743.0" y="803.0" width="17.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="746.0" y="814.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 1.52%)</title><rect x="743.0" y="787.0" width="17.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="746.0" y="798.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 1.52%)</title><rect x="743.0" y="771.0" width="17.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="746.0" y="782.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 1.52%)</title><rect x="743.0" y="755.0" width="17.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="746.0" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_pre_post_loops(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 1.52%)</title><rect x="743.0" y="739.0" width="17.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="746.0" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 1.52%)</title><rect x="743.0" y="723.0" width="17.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="746.0" y="734.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 1.52%)</title><rect x="743.0" y="707.0" width="17.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="746.0" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 1.52%)</title><rect x="760.9" y="835.0" width="17.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="763.9" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_early_ctrl(Node*) (1 samples, 1.52%)</title><rect x="760.9" y="819.0" width="17.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="763.9" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 1.52%)</title><rect x="760.9" y="803.0" width="17.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="763.9" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 1.52%)</title><rect x="778.8" y="835.0" width="17.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="781.8" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 4.55%)</title><rect x="796.7" y="835.0" width="53.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="799.7" y="846.0">Phase..</text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 3.03%)</title><rect x="796.7" y="819.0" width="35.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="799.7" y="830.0">Pha..</text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 1.52%)</title><rect x="796.7" y="803.0" width="17.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="799.7" y="814.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 1.52%)</title><rect x="796.7" y="787.0" width="17.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="799.7" y="798.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 1.52%)</title><rect x="814.5" y="803.0" width="17.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="817.5" y="814.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 1.52%)</title><rect x="814.5" y="787.0" width="17.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="817.5" y="798.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 1.52%)</title><rect x="814.5" y="771.0" width="17.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="817.5" y="782.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 1.52%)</title><rect x="814.5" y="755.0" width="17.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="817.5" y="766.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 1.52%)</title><rect x="814.5" y="739.0" width="17.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="817.5" y="750.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 1.52%)</title><rect x="814.5" y="723.0" width="17.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="817.5" y="734.0"></text>
</g>
<g>
<title>Type::narrow(Type const*) const (1 samples, 1.52%)</title><rect x="832.4" y="819.0" width="17.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="835.4" y="830.0"></text>
</g>
<g>
<title>madvise (1 samples, 1.52%)</title><rect x="850.3" y="835.0" width="17.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="853.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="850.3" y="819.0" width="17.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="853.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="850.3" y="803.0" width="17.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="853.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="850.3" y="787.0" width="17.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="853.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="850.3" y="771.0" width="17.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="853.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="850.3" y="755.0" width="17.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="853.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="850.3" y="739.0" width="17.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="853.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="850.3" y="723.0" width="17.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="853.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="850.3" y="707.0" width="17.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="853.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="850.3" y="691.0" width="17.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="853.3" y="702.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 1.52%)</title><rect x="868.2" y="851.0" width="17.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="871.2" y="862.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 1.52%)</title><rect x="868.2" y="835.0" width="17.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="871.2" y="846.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 1.52%)</title><rect x="868.2" y="819.0" width="17.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="871.2" y="830.0"></text>
</g>
<g>
<title>Node::has_special_unique_user() const (1 samples, 1.52%)</title><rect x="868.2" y="803.0" width="17.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="871.2" y="814.0"></text>
</g>
<g>
<title>__GI_memset (1 samples, 1.52%)</title><rect x="886.1" y="851.0" width="17.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="889.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="886.1" y="835.0" width="17.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="889.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="886.1" y="819.0" width="17.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="889.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="886.1" y="803.0" width="17.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="889.1" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 3.03%)</title><rect x="903.9" y="867.0" width="35.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="906.9" y="878.0">Par..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 3.03%)</title><rect x="903.9" y="851.0" width="35.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="906.9" y="862.0">Par..</text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 3.03%)</title><rect x="903.9" y="835.0" width="35.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="906.9" y="846.0">Par..</text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 3.03%)</title><rect x="903.9" y="819.0" width="35.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="906.9" y="830.0">Par..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 3.03%)</title><rect x="903.9" y="803.0" width="35.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="906.9" y="814.0">Par..</text>
</g>
<g>
<title>Parse::do_call() (2 samples, 3.03%)</title><rect x="903.9" y="787.0" width="35.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="906.9" y="798.0">Par..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 3.03%)</title><rect x="903.9" y="771.0" width="35.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="906.9" y="782.0">Par..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 3.03%)</title><rect x="903.9" y="755.0" width="35.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="906.9" y="766.0">Par..</text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 3.03%)</title><rect x="903.9" y="739.0" width="35.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="906.9" y="750.0">Par..</text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 3.03%)</title><rect x="903.9" y="723.0" width="35.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="906.9" y="734.0">Par..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 3.03%)</title><rect x="903.9" y="707.0" width="35.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="906.9" y="718.0">Par..</text>
</g>
<g>
<title>Parse::do_call() (2 samples, 3.03%)</title><rect x="903.9" y="691.0" width="35.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="906.9" y="702.0">Par..</text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 1.52%)</title><rect x="903.9" y="675.0" width="17.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="906.9" y="686.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 1.52%)</title><rect x="903.9" y="659.0" width="17.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="906.9" y="670.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_arraycopy() (1 samples, 1.52%)</title><rect x="903.9" y="643.0" width="17.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="906.9" y="654.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 1.52%)</title><rect x="903.9" y="627.0" width="17.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="906.9" y="638.0"></text>
</g>
<g>
<title>CastIINode::Value(PhaseGVN*) const (1 samples, 1.52%)</title><rect x="903.9" y="611.0" width="17.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="906.9" y="622.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 1.52%)</title><rect x="903.9" y="595.0" width="17.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="906.9" y="606.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 1.52%)</title><rect x="903.9" y="579.0" width="17.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="906.9" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 1.52%)</title><rect x="921.8" y="675.0" width="17.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="924.8" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 1.52%)</title><rect x="921.8" y="659.0" width="17.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="924.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 1.52%)</title><rect x="921.8" y="643.0" width="17.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="924.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 1.52%)</title><rect x="921.8" y="627.0" width="17.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="924.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 1.52%)</title><rect x="921.8" y="611.0" width="17.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="924.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 1.52%)</title><rect x="921.8" y="595.0" width="17.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="924.8" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 1.52%)</title><rect x="921.8" y="579.0" width="17.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="924.8" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 1.52%)</title><rect x="921.8" y="563.0" width="17.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="924.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 1.52%)</title><rect x="921.8" y="547.0" width="17.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="924.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 1.52%)</title><rect x="921.8" y="531.0" width="17.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="924.8" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 1.52%)</title><rect x="921.8" y="515.0" width="17.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="924.8" y="526.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 1.52%)</title><rect x="921.8" y="499.0" width="17.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="924.8" y="510.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (9 samples, 13.64%)</title><rect x="939.7" y="899.0" width="160.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="942.7" y="910.0">Compiler::compile_me..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (9 samples, 13.64%)</title><rect x="939.7" y="883.0" width="160.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="942.7" y="894.0">Compilation::Compila..</text>
</g>
<g>
<title>Compilation::compile_method() (9 samples, 13.64%)</title><rect x="939.7" y="867.0" width="160.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="942.7" y="878.0">Compilation::compile..</text>
</g>
<g>
<title>Compilation::compile_java_method() (9 samples, 13.64%)</title><rect x="939.7" y="851.0" width="160.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="942.7" y="862.0">Compilation::compile..</text>
</g>
<g>
<title>Compilation::build_hir() (1 samples, 1.52%)</title><rect x="939.7" y="835.0" width="17.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="942.7" y="846.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 1.52%)</title><rect x="939.7" y="819.0" width="17.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="942.7" y="830.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 1.52%)</title><rect x="939.7" y="803.0" width="17.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="942.7" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 1.52%)</title><rect x="939.7" y="787.0" width="17.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="942.7" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 1.52%)</title><rect x="939.7" y="771.0" width="17.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="942.7" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 1.52%)</title><rect x="939.7" y="755.0" width="17.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="942.7" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 1.52%)</title><rect x="939.7" y="739.0" width="17.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="942.7" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 1.52%)</title><rect x="939.7" y="723.0" width="17.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="942.7" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 1.52%)</title><rect x="939.7" y="707.0" width="17.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="942.7" y="718.0"></text>
</g>
<g>
<title>ValueNumberingVisitor::do_ProfileCall(ProfileCall*) (1 samples, 1.52%)</title><rect x="939.7" y="691.0" width="17.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="942.7" y="702.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (3 samples, 4.55%)</title><rect x="957.6" y="835.0" width="53.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="960.6" y="846.0">Compi..</text>
</g>
<g>
<title>Compilation::generate_exception_handler_table() (1 samples, 1.52%)</title><rect x="957.6" y="819.0" width="17.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="960.6" y="830.0"></text>
</g>
<g>
<title>ExceptionHandlerTable::add_subtable(int, GrowableArray&lt;long&gt;*, GrowableArray&lt;long&gt;*, GrowableArray&lt;long&gt;*) (1 samples, 1.52%)</title><rect x="957.6" y="803.0" width="17.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="960.6" y="814.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 1.52%)</title><rect x="957.6" y="787.0" width="17.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="960.6" y="798.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 1.52%)</title><rect x="975.5" y="819.0" width="17.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="978.5" y="830.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (1 samples, 1.52%)</title><rect x="975.5" y="803.0" width="17.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="978.5" y="814.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 1.52%)</title><rect x="975.5" y="787.0" width="17.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="978.5" y="798.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 1.52%)</title><rect x="975.5" y="771.0" width="17.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="978.5" y="782.0"></text>
</g>
<g>
<title>ConstantIntValue::write_on(DebugInfoWriteStream*) (1 samples, 1.52%)</title><rect x="975.5" y="755.0" width="17.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="978.5" y="766.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (1 samples, 1.52%)</title><rect x="993.3" y="819.0" width="17.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="996.3" y="830.0"></text>
</g>
<g>
<title>RangeCheckStub::emit_code(LIR_Assembler*) (1 samples, 1.52%)</title><rect x="993.3" y="803.0" width="17.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="996.3" y="814.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 1.52%)</title><rect x="993.3" y="787.0" width="17.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="996.3" y="798.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 1.52%)</title><rect x="993.3" y="771.0" width="17.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="996.3" y="782.0"></text>
</g>
<g>
<title>LocationValue::write_on(DebugInfoWriteStream*) (1 samples, 1.52%)</title><rect x="993.3" y="755.0" width="17.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="996.3" y="766.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (5 samples, 7.58%)</title><rect x="1011.2" y="835.0" width="89.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1014.2" y="846.0">Compilatio..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (2 samples, 3.03%)</title><rect x="1011.2" y="819.0" width="35.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1014.2" y="830.0">Blo..</text>
</g>
<g>
<title>LIRGenerator::block_do(BlockBegin*) (2 samples, 3.03%)</title><rect x="1011.2" y="803.0" width="35.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1014.2" y="814.0">LIR..</text>
</g>
<g>
<title>LIRGenerator::do_If(If*) (2 samples, 3.03%)</title><rect x="1011.2" y="787.0" width="35.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1014.2" y="798.0">LIR..</text>
</g>
<g>
<title>LIRGenerator::profile_branch(If*, Instruction::Condition) (1 samples, 1.52%)</title><rect x="1011.2" y="771.0" width="17.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1014.2" y="782.0"></text>
</g>
<g>
<title>CompilationResourceObj::operator new(unsigned long) (1 samples, 1.52%)</title><rect x="1011.2" y="755.0" width="17.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1014.2" y="766.0"></text>
</g>
<g>
<title>LIRGenerator::walk(Instruction*) (1 samples, 1.52%)</title><rect x="1029.1" y="771.0" width="17.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1032.1" y="782.0"></text>
</g>
<g>
<title>LIRGenerator::do_Constant(Constant*) (1 samples, 1.52%)</title><rect x="1029.1" y="755.0" width="17.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1032.1" y="766.0"></text>
</g>
<g>
<title>LIR_OprFact::value_type(ValueType*) (1 samples, 1.52%)</title><rect x="1029.1" y="739.0" width="17.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1032.1" y="750.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (3 samples, 4.55%)</title><rect x="1047.0" y="819.0" width="53.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1050.0" y="830.0">Linea..</text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 1.52%)</title><rect x="1047.0" y="803.0" width="17.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.0" y="814.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 1.52%)</title><rect x="1047.0" y="787.0" width="17.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1050.0" y="798.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 1.52%)</title><rect x="1047.0" y="771.0" width="17.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1050.0" y="782.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (1 samples, 1.52%)</title><rect x="1047.0" y="755.0" width="17.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1050.0" y="766.0"></text>
</g>
<g>
<title>LinearScanWalker::split_before_usage(Interval*, int, int) (1 samples, 1.52%)</title><rect x="1047.0" y="739.0" width="17.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1050.0" y="750.0"></text>
</g>
<g>
<title>Interval::split(int) (1 samples, 1.52%)</title><rect x="1047.0" y="723.0" width="17.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1050.0" y="734.0"></text>
</g>
<g>
<title>Interval::new_split_child() (1 samples, 1.52%)</title><rect x="1047.0" y="707.0" width="17.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1050.0" y="718.0"></text>
</g>
<g>
<title>Interval::Interval(int) (1 samples, 1.52%)</title><rect x="1047.0" y="691.0" width="17.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1050.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1047.0" y="675.0" width="17.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1050.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1047.0" y="659.0" width="17.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1050.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1047.0" y="643.0" width="17.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1050.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1047.0" y="627.0" width="17.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1050.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1047.0" y="611.0" width="17.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1050.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1047.0" y="595.0" width="17.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1050.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1047.0" y="579.0" width="17.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1050.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1047.0" y="563.0" width="17.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1050.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1047.0" y="547.0" width="17.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1050.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1047.0" y="531.0" width="17.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1050.0" y="542.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (1 samples, 1.52%)</title><rect x="1064.8" y="803.0" width="17.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1067.8" y="814.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 1.52%)</title><rect x="1064.8" y="787.0" width="17.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1067.8" y="798.0"></text>
</g>
<g>
<title>LinearScan::resolve_exception_handlers() (1 samples, 1.52%)</title><rect x="1082.7" y="803.0" width="17.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1085.7" y="814.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 1.52%)</title><rect x="1100.6" y="931.0" width="17.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1103.6" y="942.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 1.52%)</title><rect x="1100.6" y="915.0" width="17.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1103.6" y="926.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 1.52%)</title><rect x="1100.6" y="899.0" width="17.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1103.6" y="910.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 1.52%)</title><rect x="1100.6" y="883.0" width="17.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1103.6" y="894.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (1 samples, 1.52%)</title><rect x="1100.6" y="867.0" width="17.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1103.6" y="878.0"></text>
</g>
<g>
<title>ScopeDesc::ScopeDesc(CompiledMethod const*, int, int, bool, bool, bool) (1 samples, 1.52%)</title><rect x="1100.6" y="851.0" width="17.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1103.6" y="862.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 4.55%)</title><rect x="1118.5" y="963.0" width="53.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1121.5" y="974.0">VMThr..</text>
</g>
<g>
<title>VMThread::loop() (3 samples, 4.55%)</title><rect x="1118.5" y="947.0" width="53.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1121.5" y="958.0">VMThr..</text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 1.52%)</title><rect x="1118.5" y="931.0" width="17.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1121.5" y="942.0"></text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 3.03%)</title><rect x="1136.4" y="931.0" width="35.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1139.4" y="942.0">__G..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="1136.4" y="915.0" width="35.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1139.4" y="926.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="1136.4" y="899.0" width="35.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1139.4" y="910.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="1136.4" y="883.0" width="35.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1139.4" y="894.0">[un..</text>
</g>
<g>
<title>[unknown] (2 samples, 3.03%)</title><rect x="1136.4" y="867.0" width="35.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1139.4" y="878.0">[un..</text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 1.52%)</title><rect x="1172.1" y="963.0" width="17.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.1" y="974.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 1.52%)</title><rect x="1172.1" y="947.0" width="17.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.1" y="958.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 1.52%)</title><rect x="1172.1" y="931.0" width="17.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.1" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 1.52%)</title><rect x="1172.1" y="915.0" width="17.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1175.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1172.1" y="899.0" width="17.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1175.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1172.1" y="883.0" width="17.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1175.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1172.1" y="867.0" width="17.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1175.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1172.1" y="851.0" width="17.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1175.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1172.1" y="835.0" width="17.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1175.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1172.1" y="819.0" width="17.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1175.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1172.1" y="803.0" width="17.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1175.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.52%)</title><rect x="1172.1" y="787.0" width="17.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1175.1" y="798.0"></text>
</g>
</g>
</svg>
