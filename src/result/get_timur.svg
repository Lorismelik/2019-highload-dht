<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="421"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="421"> </text>
<g id="frames">
<g>
<title>all (3,370 samples, 100.00%)</title><rect x="10.0" y="387.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="398.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=24579] (855 samples, 25.37%)</title><rect x="10.0" y="371.0" width="299.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="382.0">[NIO Selector #0 tid=24579]</text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.15%)</title><rect x="10.0" y="355.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="10.0" y="339.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.03%)</title><rect x="10.4" y="339.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.4" y="350.0"></text>
</g>
<g>
<title>CompiledMethod::is_method_handle_return(unsigned char*) (1 samples, 0.03%)</title><rect x="10.7" y="339.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.7" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (2 samples, 0.06%)</title><rect x="11.1" y="339.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.1" y="350.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.06%)</title><rect x="11.1" y="323.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.1" y="334.0"></text>
</g>
<g>
<title>[unknown_Java] (9 samples, 0.27%)</title><rect x="11.8" y="355.0" width="3.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="14.8" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (7 samples, 0.21%)</title><rect x="12.1" y="339.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.1" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.21%)</title><rect x="12.1" y="323.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.1" y="334.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (5 samples, 0.15%)</title><rect x="12.1" y="307.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.1" y="318.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="13.9" y="307.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="16.9" y="318.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.03%)</title><rect x="13.9" y="291.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.9" y="302.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="14.2" y="307.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="17.2" y="318.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="14.6" y="339.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.6" y="350.0"></text>
</g>
<g>
<title>_res (1 samples, 0.03%)</title><rect x="14.6" y="323.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="17.6" y="334.0"></text>
</g>
<g>
<title>nmethod::exception_begin() const (2 samples, 0.06%)</title><rect x="14.9" y="355.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="17.9" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (839 samples, 24.90%)</title><rect x="15.6" y="355.0" width="293.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.6" y="366.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="16.0" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector$1.next (5 samples, 0.15%)</title><rect x="16.3" y="339.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector$1.next (5 samples, 0.15%)</title><rect x="16.3" y="323.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (2 samples, 0.06%)</title><rect x="17.4" y="307.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.4" y="318.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (447 samples, 13.26%)</title><rect x="18.1" y="339.0" width="156.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.1" y="350.0">one/nio/net/JavaSele..</text>
</g>
<g>
<title>_res (1 samples, 0.03%)</title><rect x="18.8" y="323.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="21.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (4 samples, 0.12%)</title><rect x="19.1" y="323.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.1" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.03%)</title><rect x="20.5" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (1 samples, 0.03%)</title><rect x="20.5" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (438 samples, 13.00%)</title><rect x="20.9" y="323.0" width="153.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.9" y="334.0">sun/nio/ch/Selector..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (438 samples, 13.00%)</title><rect x="20.9" y="307.0" width="153.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.9" y="318.0">sun/nio/ch/Selector..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (438 samples, 13.00%)</title><rect x="20.9" y="291.0" width="153.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.9" y="302.0">sun/nio/ch/KQueueSe..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (419 samples, 12.43%)</title><rect x="20.9" y="275.0" width="146.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.9" y="286.0">sun/nio/ch/KQueue...</text>
</g>
<g>
<title>JNI_OnLoad (1 samples, 0.03%)</title><rect x="26.1" y="259.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="29.1" y="270.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (3 samples, 0.09%)</title><rect x="26.5" y="259.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="29.5" y="270.0"></text>
</g>
<g>
<title>kevent (400 samples, 11.87%)</title><rect x="27.5" y="259.0" width="140.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="30.5" y="270.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (10 samples, 0.30%)</title><rect x="167.6" y="275.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.6" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="167.9" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.9" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="167.9" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="170.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (8 samples, 0.24%)</title><rect x="168.3" y="259.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.3" y="270.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.24%)</title><rect x="168.3" y="243.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.3" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.24%)</title><rect x="168.3" y="227.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.3" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="168.3" y="211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.3" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.21%)</title><rect x="168.6" y="211.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.6" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.03%)</title><rect x="168.6" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.6" y="206.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.12%)</title><rect x="169.0" y="195.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.0" y="206.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.06%)</title><rect x="170.4" y="195.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="173.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.03%)</title><rect x="171.1" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (6 samples, 0.18%)</title><rect x="171.4" y="275.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.4" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (6 samples, 0.18%)</title><rect x="171.4" y="259.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="174.4" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.18%)</title><rect x="171.4" y="243.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.4" y="254.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.18%)</title><rect x="171.4" y="227.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.4" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.18%)</title><rect x="171.4" y="211.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.06%)</title><rect x="173.5" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.5" y="286.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="173.9" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.9" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="173.9" y="243.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.9" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="173.9" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.9" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="173.9" y="211.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.03%)</title><rect x="174.2" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.2" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.03%)</title><rect x="174.2" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.2" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (1 samples, 0.03%)</title><rect x="174.2" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="177.2" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (385 samples, 11.42%)</title><rect x="174.6" y="339.0" width="134.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.6" y="350.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (385 samples, 11.42%)</title><rect x="174.6" y="323.0" width="134.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.6" y="334.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.03%)</title><rect x="174.9" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.9" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.03%)</title><rect x="174.9" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.9" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.03%)</title><rect x="174.9" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.9" y="286.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.close (1 samples, 0.03%)</title><rect x="174.9" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.9" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.03%)</title><rect x="174.9" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.9" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (1 samples, 0.03%)</title><rect x="174.9" y="227.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (1 samples, 0.03%)</title><rect x="174.9" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (1 samples, 0.03%)</title><rect x="174.9" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketOptionRegistry.findOption (1 samples, 0.03%)</title><rect x="174.9" y="179.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.9" y="190.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="174.9" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="177.9" y="174.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="174.9" y="147.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketOptionRegistry$RegistryKey.hashCode (1 samples, 0.03%)</title><rect x="174.9" y="131.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (320 samples, 9.50%)</title><rect x="175.3" y="307.0" width="112.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.3" y="318.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (297 samples, 8.81%)</title><rect x="176.0" y="291.0" width="104.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.0" y="302.0">one/nio/http..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="176.3" y="275.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="179.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (294 samples, 8.72%)</title><rect x="177.0" y="275.0" width="103.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.0" y="286.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (292 samples, 8.66%)</title><rect x="177.0" y="259.0" width="102.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.0" y="270.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (151 samples, 4.48%)</title><rect x="177.4" y="243.0" width="52.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="180.4" y="254.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (144 samples, 4.27%)</title><rect x="177.4" y="227.0" width="50.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.4" y="238.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.36%)</title><rect x="177.4" y="211.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.4" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (9 samples, 0.27%)</title><rect x="178.4" y="195.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="181.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.27%)</title><rect x="178.4" y="179.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.4" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.27%)</title><rect x="178.4" y="163.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.charAt (9 samples, 0.27%)</title><rect x="178.4" y="147.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.4" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="181.2" y="131.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="184.2" y="142.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (132 samples, 3.92%)</title><rect x="181.6" y="211.0" width="46.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.6" y="222.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (132 samples, 3.92%)</title><rect x="181.6" y="195.0" width="46.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.6" y="206.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (131 samples, 3.89%)</title><rect x="181.6" y="179.0" width="45.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.6" y="190.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (131 samples, 3.89%)</title><rect x="181.6" y="163.0" width="45.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.6" y="174.0">one/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="181.6" y="147.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.6" y="158.0"></text>
</g>
<g>
<title>__cxx_global_var_init.4 (1 samples, 0.03%)</title><rect x="181.6" y="131.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="184.6" y="142.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="181.9" y="131.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="184.9" y="142.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="181.9" y="115.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="184.9" y="126.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.03%)</title><rect x="181.9" y="99.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="184.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (129 samples, 3.83%)</title><rect x="182.3" y="147.0" width="45.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.3" y="158.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (129 samples, 3.83%)</title><rect x="182.3" y="131.0" width="45.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.3" y="142.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (126 samples, 3.74%)</title><rect x="183.3" y="115.0" width="44.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.3" y="126.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (126 samples, 3.74%)</title><rect x="183.3" y="99.0" width="44.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.3" y="110.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (2 samples, 0.06%)</title><rect x="183.3" y="83.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (124 samples, 3.68%)</title><rect x="184.0" y="83.0" width="43.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.0" y="94.0">sun/..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="184.4" y="67.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="187.4" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (122 samples, 3.62%)</title><rect x="184.7" y="67.0" width="42.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.7" y="78.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (2 samples, 0.06%)</title><rect x="186.1" y="51.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="189.1" y="62.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="186.8" y="51.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="189.8" y="62.0"></text>
</g>
<g>
<title>write (115 samples, 3.41%)</title><rect x="187.2" y="51.0" width="40.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="190.2" y="62.0">write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.03%)</title><rect x="227.4" y="179.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.21%)</title><rect x="227.8" y="227.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.12%)</title><rect x="228.8" y="211.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.12%)</title><rect x="228.8" y="195.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.8" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.18%)</title><rect x="230.2" y="243.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="233.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.18%)</title><rect x="230.2" y="227.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.15%)</title><rect x="230.6" y="211.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.6" y="222.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="230.6" y="195.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="233.6" y="206.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.09%)</title><rect x="230.9" y="195.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="233.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="232.0" y="195.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/ServiceImpl.entity (134 samples, 3.98%)</title><rect x="232.3" y="243.0" width="47.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.3" y="254.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="232.3" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="232.3" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/ServiceImpl.doGet (133 samples, 3.95%)</title><rect x="232.7" y="227.0" width="46.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.7" y="238.0">ru/m..</text>
</g>
<g>
<title>ExceptionBlob (1 samples, 0.03%)</title><rect x="233.0" y="211.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="236.0" y="222.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.06%)</title><rect x="233.4" y="211.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="236.4" y="222.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.06%)</title><rect x="234.1" y="211.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="237.1" y="222.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (25 samples, 0.74%)</title><rect x="234.8" y="211.0" width="8.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="237.8" y="222.0"></text>
</g>
<g>
<title>Exceptions::debug_check_abort(Handle, char const*) (1 samples, 0.03%)</title><rect x="235.1" y="195.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="238.1" y="206.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.15%)</title><rect x="235.5" y="195.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="238.5" y="206.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.15%)</title><rect x="235.5" y="179.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="238.5" y="190.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.03%)</title><rect x="235.5" y="163.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="238.5" y="174.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.12%)</title><rect x="235.8" y="163.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="238.8" y="174.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (4 samples, 0.12%)</title><rect x="235.8" y="147.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="238.8" y="158.0"></text>
</g>
<g>
<title>JavaThread::reguard_stack() (1 samples, 0.03%)</title><rect x="237.2" y="195.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="240.2" y="206.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (12 samples, 0.36%)</title><rect x="237.6" y="195.0" width="4.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="240.6" y="206.0"></text>
</g>
<g>
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (1 samples, 0.03%)</title><rect x="239.0" y="179.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="242.0" y="190.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="239.3" y="179.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="242.3" y="190.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="239.7" y="163.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="242.7" y="174.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.03%)</title><rect x="239.7" y="147.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="242.7" y="158.0"></text>
</g>
<g>
<title>CompiledMethod::handler_for_exception_and_pc(Handle, unsigned char*) (1 samples, 0.03%)</title><rect x="240.0" y="179.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="243.0" y="190.0"></text>
</g>
<g>
<title>CompiledMethod::is_method_handle_return(unsigned char*) (1 samples, 0.03%)</title><rect x="240.4" y="179.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="243.4" y="190.0"></text>
</g>
<g>
<title>ExceptionCache::match(Handle, unsigned char*) (1 samples, 0.03%)</title><rect x="240.7" y="179.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="243.7" y="190.0"></text>
</g>
<g>
<title>Exceptions::debug_check_abort(Handle, char const*) (1 samples, 0.03%)</title><rect x="241.1" y="179.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="244.1" y="190.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.03%)</title><rect x="241.4" y="179.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="244.4" y="190.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (3 samples, 0.09%)</title><rect x="241.8" y="195.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="244.8" y="206.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.06%)</title><rect x="242.8" y="195.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="245.8" y="206.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.03%)</title><rect x="243.2" y="179.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="246.2" y="190.0"></text>
</g>
<g>
<title>frame::is_deoptimized_frame() const (1 samples, 0.03%)</title><rect x="243.5" y="211.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="246.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.12%)</title><rect x="243.9" y="211.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.9" y="222.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="244.6" y="195.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="247.6" y="206.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="244.9" y="195.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="247.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/lorismelik/RocksDAO.get (97 samples, 2.88%)</title><rect x="245.3" y="211.0" width="34.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.3" y="222.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.18%)</title><rect x="245.3" y="195.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/836220863.invoke (6 samples, 0.18%)</title><rect x="245.3" y="179.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.18%)</title><rect x="245.3" y="163.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="248.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixCoder (6 samples, 0.18%)</title><rect x="245.3" y="147.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.coder (6 samples, 0.18%)</title><rect x="245.3" y="131.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.3" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.09%)</title><rect x="245.6" y="115.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="248.6" y="126.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="246.7" y="115.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="249.7" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.03%)</title><rect x="247.1" y="115.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (6 samples, 0.18%)</title><rect x="247.4" y="195.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="250.4" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="247.4" y="179.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (5 samples, 0.15%)</title><rect x="247.8" y="179.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.8" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.12%)</title><rect x="248.1" y="163.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="251.1" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.12%)</title><rect x="248.1" y="147.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.1" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.09%)</title><rect x="248.1" y="131.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.1" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="248.8" y="115.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="251.8" y="126.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="249.2" y="131.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="252.2" y="142.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="249.5" y="195.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="252.5" y="206.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (77 samples, 2.28%)</title><rect x="249.9" y="195.0" width="26.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.9" y="206.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (77 samples, 2.28%)</title><rect x="249.9" y="179.0" width="26.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.9" y="190.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (75 samples, 2.23%)</title><rect x="250.6" y="163.0" width="26.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="253.6" y="174.0">J..</text>
</g>
<g>
<title>free_tiny (1 samples, 0.03%)</title><rect x="250.9" y="147.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="253.9" y="158.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (70 samples, 2.08%)</title><rect x="251.3" y="147.0" width="24.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="254.3" y="158.0">r..</text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (2 samples, 0.06%)</title><rect x="251.6" y="131.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="254.6" y="142.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.06%)</title><rect x="252.3" y="131.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="255.3" y="142.0"></text>
</g>
<g>
<title>__cxxabiv1::__class_type_info::process_static_type_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int) const (1 samples, 0.03%)</title><rect x="253.0" y="131.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="256.0" y="142.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="253.4" y="131.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="256.4" y="142.0"></text>
</g>
<g>
<title>free_tiny (1 samples, 0.03%)</title><rect x="253.7" y="131.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="256.7" y="142.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="254.1" y="131.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="257.1" y="142.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.03%)</title><rect x="254.1" y="115.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="257.1" y="126.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.03%)</title><rect x="254.1" y="99.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="257.1" y="110.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.03%)</title><rect x="254.1" y="83.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="257.1" y="94.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.03%)</title><rect x="254.1" y="67.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="257.1" y="78.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.03%)</title><rect x="254.1" y="51.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="257.1" y="62.0"></text>
</g>
<g>
<title>OrderAccess::acquire() (1 samples, 0.03%)</title><rect x="254.1" y="35.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="257.1" y="46.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (16 samples, 0.47%)</title><rect x="254.4" y="131.0" width="5.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="257.4" y="142.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (3 samples, 0.09%)</title><rect x="255.1" y="115.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="258.1" y="126.0"></text>
</g>
<g>
<title>os::is_MP() (3 samples, 0.09%)</title><rect x="255.1" y="99.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="258.1" y="110.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (6 samples, 0.18%)</title><rect x="256.2" y="115.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="259.2" y="126.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.03%)</title><rect x="256.5" y="99.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="259.5" y="110.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (3 samples, 0.09%)</title><rect x="256.9" y="99.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="259.9" y="110.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (3 samples, 0.09%)</title><rect x="256.9" y="83.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="259.9" y="94.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (2 samples, 0.06%)</title><rect x="257.2" y="67.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="260.2" y="78.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (2 samples, 0.06%)</title><rect x="257.2" y="51.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="260.2" y="62.0"></text>
</g>
<g>
<title>compiler_barrier() (1 samples, 0.03%)</title><rect x="257.2" y="35.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="260.2" y="46.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::ordered_load&lt;void volatile*, (ScopedFenceType)0&gt;(void volatile* const volatile*) (1 samples, 0.03%)</title><rect x="257.6" y="35.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="260.6" y="46.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.03%)</title><rect x="257.9" y="99.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="260.9" y="110.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="258.3" y="115.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="261.3" y="126.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.06%)</title><rect x="258.6" y="115.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="261.6" y="126.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="259.0" y="99.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="262.0" y="110.0"></text>
</g>
<g>
<title>Chunk::next() const (1 samples, 0.03%)</title><rect x="259.0" y="83.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="262.0" y="94.0"></text>
</g>
<g>
<title>oopDesc* G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;::oop_load_not_in_heap&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.03%)</title><rect x="259.3" y="115.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="262.3" y="126.0"></text>
</g>
<g>
<title>G1BarrierSet::enqueue_if_weak(unsigned long long, oopDesc*) (1 samples, 0.03%)</title><rect x="259.3" y="99.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="262.3" y="110.0"></text>
</g>
<g>
<title>oopDesc* RawAccessBarrier&lt;1097844ull&gt;::oop_load&lt;oopDesc*&gt;(void*) (1 samples, 0.03%)</title><rect x="259.7" y="115.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="262.7" y="126.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.03%)</title><rect x="260.0" y="131.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="263.0" y="142.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (37 samples, 1.10%)</title><rect x="260.4" y="131.0" width="12.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="263.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (37 samples, 1.10%)</title><rect x="260.4" y="115.0" width="12.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="263.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (35 samples, 1.04%)</title><rect x="261.1" y="99.0" width="12.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="264.1" y="110.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (1 samples, 0.03%)</title><rect x="261.1" y="83.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="264.1" y="94.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.03%)</title><rect x="261.4" y="83.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="264.4" y="94.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (27 samples, 0.80%)</title><rect x="261.8" y="83.0" width="9.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="264.8" y="94.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (3 samples, 0.09%)</title><rect x="264.2" y="67.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="267.2" y="78.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.03%)</title><rect x="265.3" y="67.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="268.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (5 samples, 0.15%)</title><rect x="265.6" y="67.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="268.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (4 samples, 0.12%)</title><rect x="265.6" y="51.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="268.6" y="62.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (1 samples, 0.03%)</title><rect x="266.3" y="35.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="269.3" y="46.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="266.7" y="35.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="269.7" y="46.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.03%)</title><rect x="267.0" y="51.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="270.0" y="62.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.06%)</title><rect x="267.4" y="67.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="270.4" y="78.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.06%)</title><rect x="267.4" y="51.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="270.4" y="62.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (1 samples, 0.03%)</title><rect x="267.4" y="35.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="270.4" y="46.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="267.7" y="35.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="270.7" y="46.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.06%)</title><rect x="268.1" y="67.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="271.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.03%)</title><rect x="268.8" y="67.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="271.8" y="78.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*) (6 samples, 0.18%)</title><rect x="269.1" y="67.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="272.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long long*, rocksdb::Env*, unsigned long long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (4 samples, 0.12%)</title><rect x="269.5" y="51.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="272.5" y="62.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (1 samples, 0.03%)</title><rect x="270.2" y="35.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="273.2" y="46.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="270.5" y="35.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="273.5" y="46.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="270.9" y="51.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="273.9" y="62.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyUserComparator(rocksdb::ColumnFamilyHandle*) (1 samples, 0.03%)</title><rect x="271.2" y="83.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="274.2" y="94.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="271.6" y="83.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="274.6" y="94.0"></text>
</g>
<g>
<title>thread-local wrapper routine for rocksdb::perf_context (4 samples, 0.12%)</title><rect x="271.9" y="83.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="274.9" y="94.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.06%)</title><rect x="273.3" y="131.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="276.3" y="142.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="274.0" y="131.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="277.0" y="142.0"></text>
</g>
<g>
<title>vtable for std::__1::time_get_byname&lt;char, std::__1::istreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; &gt; &gt; (4 samples, 0.12%)</title><rect x="274.4" y="131.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="277.4" y="142.0"></text>
</g>
<g>
<title>malloc (4 samples, 0.12%)</title><rect x="274.4" y="115.0" width="1.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="277.4" y="126.0"></text>
</g>
<g>
<title>malloc_zone_malloc (4 samples, 0.12%)</title><rect x="274.4" y="99.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="277.4" y="110.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (2 samples, 0.06%)</title><rect x="275.1" y="83.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="278.1" y="94.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (2 samples, 0.06%)</title><rect x="275.1" y="67.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="278.1" y="78.0"></text>
</g>
<g>
<title>vtable for std::__1::messages&lt;char&gt; (1 samples, 0.03%)</title><rect x="275.8" y="147.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="278.8" y="158.0"></text>
</g>
<g>
<title>vtable for std::__1::time_get_byname&lt;char, std::__1::istreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; &gt; &gt; (2 samples, 0.06%)</title><rect x="276.1" y="147.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="279.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shiftBytes (3 samples, 0.09%)</title><rect x="276.8" y="195.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.clone (3 samples, 0.09%)</title><rect x="276.8" y="179.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.09%)</title><rect x="276.8" y="163.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="276.8" y="147.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="279.8" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="276.8" y="131.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.8" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="277.5" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="277.5" y="99.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="277.5" y="83.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.5" y="94.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="277.5" y="67.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.5" y="78.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="277.5" y="51.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="280.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/lorismelik/NoSuchElementExceptionLite.&lt;init&gt; (4 samples, 0.12%)</title><rect x="277.9" y="195.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.9" y="206.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (4 samples, 0.12%)</title><rect x="277.9" y="179.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.9" y="190.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (4 samples, 0.12%)</title><rect x="277.9" y="163.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.9" y="174.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (4 samples, 0.12%)</title><rect x="277.9" y="147.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.9" y="158.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (4 samples, 0.12%)</title><rect x="277.9" y="131.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="279.3" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.3" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="279.3" y="243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.3" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="279.3" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="279.3" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.3" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="279.6" y="259.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.6" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="279.6" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="279.6" y="227.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.6" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="279.6" y="211.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.24%)</title><rect x="280.0" y="291.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.06%)</title><rect x="280.7" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="280.7" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="280.7" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.06%)</title><rect x="280.7" y="227.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.7" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.09%)</title><rect x="281.4" y="275.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.4" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.09%)</title><rect x="281.4" y="259.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.4" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="282.4" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="282.8" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.27%)</title><rect x="283.1" y="291.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.1" y="302.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.27%)</title><rect x="283.1" y="275.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.09%)</title><rect x="283.5" y="259.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="286.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.15%)</title><rect x="284.5" y="259.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.5" y="270.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.09%)</title><rect x="285.2" y="243.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.2" y="254.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.09%)</title><rect x="285.2" y="227.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.03%)</title><rect x="285.9" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.9" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.09%)</title><rect x="286.3" y="291.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.3" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.09%)</title><rect x="286.3" y="275.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.3" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (63 samples, 1.87%)</title><rect x="287.3" y="307.0" width="22.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.3" y="318.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (63 samples, 1.87%)</title><rect x="287.3" y="291.0" width="22.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.3" y="302.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (63 samples, 1.87%)</title><rect x="287.3" y="275.0" width="22.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.3" y="286.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (63 samples, 1.87%)</title><rect x="287.3" y="259.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.3" y="270.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (63 samples, 1.87%)</title><rect x="287.3" y="243.0" width="22.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.3" y="254.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (56 samples, 1.66%)</title><rect x="287.3" y="227.0" width="19.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (56 samples, 1.66%)</title><rect x="287.3" y="211.0" width="19.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (53 samples, 1.57%)</title><rect x="288.4" y="195.0" width="18.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.4" y="206.0"></text>
</g>
<g>
<title>read (49 samples, 1.45%)</title><rect x="289.8" y="179.0" width="17.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="292.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.21%)</title><rect x="306.9" y="227.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.9" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.21%)</title><rect x="306.9" y="211.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.9" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.21%)</title><rect x="306.9" y="195.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="309.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (2 samples, 0.06%)</title><rect x="308.3" y="179.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.3" y="190.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.03%)</title><rect x="309.0" y="179.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="312.0" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24835] (836 samples, 24.81%)</title><rect x="309.4" y="371.0" width="292.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="312.4" y="382.0">[NIO Selector #1 tid=24835]</text>
</g>
<g>
<title>OptoRuntime::rethrow_C(oopDesc*, JavaThread*, unsigned char*) (1 samples, 0.03%)</title><rect x="309.4" y="355.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="312.4" y="366.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.15%)</title><rect x="309.7" y="355.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="312.7" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (5 samples, 0.15%)</title><rect x="309.7" y="339.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="312.7" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="310.1" y="323.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="313.1" y="334.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="310.1" y="307.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="313.1" y="318.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.06%)</title><rect x="310.4" y="323.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="313.4" y="334.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="311.1" y="323.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="314.1" y="334.0"></text>
</g>
<g>
<title>[unknown_Java] (5 samples, 0.15%)</title><rect x="311.5" y="355.0" width="1.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="314.5" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (4 samples, 0.12%)</title><rect x="311.8" y="339.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="314.8" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.12%)</title><rect x="311.8" y="323.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="314.8" y="334.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (4 samples, 0.12%)</title><rect x="311.8" y="307.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="314.8" y="318.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (825 samples, 24.48%)</title><rect x="313.2" y="355.0" width="288.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.2" y="366.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector$1.next (8 samples, 0.24%)</title><rect x="313.9" y="339.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.9" y="350.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector$1.next (8 samples, 0.24%)</title><rect x="313.9" y="323.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.9" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (2 samples, 0.06%)</title><rect x="316.0" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.0" y="318.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (434 samples, 12.88%)</title><rect x="316.7" y="339.0" width="152.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.7" y="350.0">one/nio/net/JavaSel..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (3 samples, 0.09%)</title><rect x="317.4" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 0.03%)</title><rect x="318.1" y="307.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="321.1" y="318.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="318.1" y="291.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.1" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="318.1" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.1" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="318.1" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.1" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="318.1" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (2 samples, 0.06%)</title><rect x="318.5" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (2 samples, 0.06%)</title><rect x="318.5" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.5" y="318.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="319.2" y="323.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="322.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1 samples, 0.03%)</title><rect x="319.5" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (422 samples, 12.52%)</title><rect x="319.9" y="323.0" width="147.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="322.9" y="334.0">sun/nio/ch/Selector..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (422 samples, 12.52%)</title><rect x="319.9" y="307.0" width="147.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="322.9" y="318.0">sun/nio/ch/Selector..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.03%)</title><rect x="320.2" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (420 samples, 12.46%)</title><rect x="320.6" y="291.0" width="147.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.6" y="302.0">sun/nio/ch/KQueueSe..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (393 samples, 11.66%)</title><rect x="320.6" y="275.0" width="137.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.6" y="286.0">sun/nio/ch/KQueue..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (2 samples, 0.06%)</title><rect x="327.9" y="259.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="330.9" y="270.0"></text>
</g>
<g>
<title>kevent (370 samples, 10.98%)</title><rect x="328.6" y="259.0" width="129.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="331.6" y="270.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (16 samples, 0.47%)</title><rect x="458.2" y="275.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.2" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.12%)</title><rect x="458.2" y="259.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.2" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.09%)</title><rect x="458.2" y="243.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.2" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="459.2" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.getFilter (3 samples, 0.09%)</title><rect x="459.6" y="259.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getShort (3 samples, 0.09%)</title><rect x="459.6" y="243.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="462.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (9 samples, 0.27%)</title><rect x="460.6" y="259.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.6" y="270.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.21%)</title><rect x="460.6" y="243.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.6" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.21%)</title><rect x="460.6" y="227.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="463.6" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.21%)</title><rect x="460.6" y="211.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.6" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.03%)</title><rect x="461.7" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.7" y="206.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.09%)</title><rect x="462.0" y="195.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioReadyOps (1 samples, 0.03%)</title><rect x="463.1" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (1 samples, 0.03%)</title><rect x="463.4" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (3 samples, 0.09%)</title><rect x="463.8" y="275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (6 samples, 0.18%)</title><rect x="464.8" y="275.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.8" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (6 samples, 0.18%)</title><rect x="464.8" y="259.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.8" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.18%)</title><rect x="464.8" y="243.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.8" y="254.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.18%)</title><rect x="464.8" y="227.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.8" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.18%)</title><rect x="464.8" y="211.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (1 samples, 0.03%)</title><rect x="466.9" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.9" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.03%)</title><rect x="466.9" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.9" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="466.9" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.9" y="254.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="466.9" y="227.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="469.9" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="466.9" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.03%)</title><rect x="467.3" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="467.3" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.3" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="467.3" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.3" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="467.3" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.3" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="467.3" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (3 samples, 0.09%)</title><rect x="467.6" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.6" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (3 samples, 0.09%)</title><rect x="467.6" y="307.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.6" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (3 samples, 0.09%)</title><rect x="467.6" y="291.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.6" y="302.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.03%)</title><rect x="468.3" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.3" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (381 samples, 11.31%)</title><rect x="468.7" y="339.0" width="133.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.7" y="350.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (381 samples, 11.31%)</title><rect x="468.7" y="323.0" width="133.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.7" y="334.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.03%)</title><rect x="469.0" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.0" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.03%)</title><rect x="469.0" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.03%)</title><rect x="469.0" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.0" y="286.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.close (1 samples, 0.03%)</title><rect x="469.0" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.0" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.03%)</title><rect x="469.0" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.0" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (1 samples, 0.03%)</title><rect x="469.0" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (1 samples, 0.03%)</title><rect x="469.0" y="211.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (1 samples, 0.03%)</title><rect x="469.0" y="195.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="472.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketOptionRegistry.findOption (1 samples, 0.03%)</title><rect x="469.0" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.0" y="190.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="469.0" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.0" y="174.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="469.0" y="147.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.0" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketOptionRegistry$RegistryKey.hashCode (1 samples, 0.03%)</title><rect x="469.0" y="131.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (312 samples, 9.26%)</title><rect x="469.4" y="307.0" width="109.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.4" y="318.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (298 samples, 8.84%)</title><rect x="469.4" y="291.0" width="104.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.4" y="302.0">one/nio/http..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="469.4" y="275.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="472.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (297 samples, 8.81%)</title><rect x="469.7" y="275.0" width="104.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.7" y="286.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (295 samples, 8.75%)</title><rect x="469.7" y="259.0" width="103.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.7" y="270.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (176 samples, 5.22%)</title><rect x="469.7" y="243.0" width="61.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.7" y="254.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (174 samples, 5.16%)</title><rect x="469.7" y="227.0" width="61.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.7" y="238.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.21%)</title><rect x="470.1" y="211.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.1" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.15%)</title><rect x="470.8" y="195.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.8" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.15%)</title><rect x="470.8" y="179.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.8" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.15%)</title><rect x="470.8" y="163.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.15%)</title><rect x="470.8" y="147.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.8" y="158.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (166 samples, 4.93%)</title><rect x="472.5" y="211.0" width="58.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.5" y="222.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (164 samples, 4.87%)</title><rect x="473.2" y="195.0" width="57.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="476.2" y="206.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (163 samples, 4.84%)</title><rect x="473.2" y="179.0" width="57.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.2" y="190.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (163 samples, 4.84%)</title><rect x="473.2" y="163.0" width="57.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.2" y="174.0">one/ni..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.09%)</title><rect x="473.2" y="147.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.2" y="158.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.09%)</title><rect x="473.2" y="131.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="476.2" y="142.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.09%)</title><rect x="473.2" y="115.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="476.2" y="126.0"></text>
</g>
<g>
<title>_res (1 samples, 0.03%)</title><rect x="473.9" y="99.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="476.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (160 samples, 4.75%)</title><rect x="474.3" y="147.0" width="56.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.3" y="158.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (160 samples, 4.75%)</title><rect x="474.3" y="131.0" width="56.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.3" y="142.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (159 samples, 4.72%)</title><rect x="474.6" y="115.0" width="55.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.6" y="126.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (159 samples, 4.72%)</title><rect x="474.6" y="99.0" width="55.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.6" y="110.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (3 samples, 0.09%)</title><rect x="474.6" y="83.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (156 samples, 4.63%)</title><rect x="475.7" y="83.0" width="54.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.7" y="94.0">sun/n..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="478.1" y="67.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="481.1" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (148 samples, 4.39%)</title><rect x="478.5" y="67.0" width="51.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.5" y="78.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.03%)</title><rect x="479.2" y="51.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="482.2" y="62.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="479.2" y="35.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="482.2" y="46.0"></text>
</g>
<g>
<title>write (145 samples, 4.30%)</title><rect x="479.5" y="51.0" width="50.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="482.5" y="62.0">write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.03%)</title><rect x="530.3" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="530.7" y="227.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="531.0" y="211.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="531.0" y="195.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.0" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.03%)</title><rect x="531.0" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.15%)</title><rect x="531.4" y="243.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.09%)</title><rect x="531.4" y="227.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.09%)</title><rect x="531.4" y="211.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.4" y="222.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="532.1" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="532.4" y="227.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="532.4" y="211.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="532.4" y="195.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="532.8" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="532.8" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="532.8" y="195.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="532.8" y="179.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/ServiceImpl.entity (114 samples, 3.38%)</title><rect x="533.1" y="243.0" width="39.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.1" y="254.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="533.1" y="227.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="533.1" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="536.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/ServiceImpl.doGet (113 samples, 3.35%)</title><rect x="533.5" y="227.0" width="39.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="536.5" y="238.0">ru/..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="534.5" y="211.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="537.5" y="222.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="534.9" y="211.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="537.9" y="222.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (18 samples, 0.53%)</title><rect x="535.2" y="211.0" width="6.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="538.2" y="222.0"></text>
</g>
<g>
<title>CodeBlob::is_compiled() const (1 samples, 0.03%)</title><rect x="535.2" y="195.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="538.2" y="206.0"></text>
</g>
<g>
<title>CompiledMethod::handler_for_exception_and_pc(Handle, unsigned char*) (1 samples, 0.03%)</title><rect x="535.6" y="195.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="538.6" y="206.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.06%)</title><rect x="535.9" y="195.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="538.9" y="206.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.03%)</title><rect x="535.9" y="179.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="538.9" y="190.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="536.3" y="179.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="539.3" y="190.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.03%)</title><rect x="536.3" y="163.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="539.3" y="174.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (12 samples, 0.36%)</title><rect x="536.6" y="195.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="539.6" y="206.0"></text>
</g>
<g>
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (1 samples, 0.03%)</title><rect x="538.0" y="179.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="541.0" y="190.0"></text>
</g>
<g>
<title>CompiledMethod::handler_for_exception_and_pc(Handle, unsigned char*) (2 samples, 0.06%)</title><rect x="538.4" y="179.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="541.4" y="190.0"></text>
</g>
<g>
<title>ExceptionCache::match(Handle, unsigned char*) (1 samples, 0.03%)</title><rect x="538.7" y="163.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="541.7" y="174.0"></text>
</g>
<g>
<title>ExceptionCache::match(Handle, unsigned char*) (1 samples, 0.03%)</title><rect x="539.1" y="179.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="542.1" y="190.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (2 samples, 0.06%)</title><rect x="539.4" y="179.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="542.4" y="190.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="539.4" y="163.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="542.4" y="174.0"></text>
</g>
<g>
<title>os::is_MP() (1 samples, 0.03%)</title><rect x="539.4" y="147.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="542.4" y="158.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.03%)</title><rect x="539.8" y="163.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="542.8" y="174.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (2 samples, 0.06%)</title><rect x="540.1" y="179.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="543.1" y="190.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (1 samples, 0.03%)</title><rect x="540.8" y="195.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="543.8" y="206.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="541.2" y="195.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="544.2" y="206.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (1 samples, 0.03%)</title><rect x="541.5" y="211.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="544.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.06%)</title><rect x="541.9" y="211.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.9" y="222.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="542.2" y="195.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="545.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/lorismelik/RocksDAO.get (87 samples, 2.58%)</title><rect x="542.6" y="211.0" width="30.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.6" y="222.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.09%)</title><rect x="542.9" y="195.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/836220863.invoke (3 samples, 0.09%)</title><rect x="542.9" y="179.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.09%)</title><rect x="542.9" y="163.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.9" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixCoder (3 samples, 0.09%)</title><rect x="542.9" y="147.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.09%)</title><rect x="542.9" y="131.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.9" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.09%)</title><rect x="542.9" y="115.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="545.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (7 samples, 0.21%)</title><rect x="544.0" y="195.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (7 samples, 0.21%)</title><rect x="544.0" y="179.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.0" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.18%)</title><rect x="544.3" y="163.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.3" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.15%)</title><rect x="544.7" y="147.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.7" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.15%)</title><rect x="544.7" y="131.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.7" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="546.1" y="115.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="549.1" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (70 samples, 2.08%)</title><rect x="546.4" y="195.0" width="24.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.4" y="206.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (70 samples, 2.08%)</title><rect x="546.4" y="179.0" width="24.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.4" y="190.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (67 samples, 1.99%)</title><rect x="547.5" y="163.0" width="23.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="550.5" y="174.0">J..</text>
</g>
<g>
<title>default_zone_free_definite_size (2 samples, 0.06%)</title><rect x="548.5" y="147.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="551.5" y="158.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="549.2" y="147.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="552.2" y="158.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (1 samples, 0.03%)</title><rect x="549.6" y="147.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="552.6" y="158.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (58 samples, 1.72%)</title><rect x="549.9" y="147.0" width="20.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="552.9" y="158.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.03%)</title><rect x="550.6" y="131.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="553.6" y="142.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.06%)</title><rect x="551.0" y="131.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="554.0" y="142.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.06%)</title><rect x="551.7" y="131.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="554.7" y="142.0"></text>
</g>
<g>
<title>compiler_barrier() (1 samples, 0.03%)</title><rect x="552.4" y="131.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="555.4" y="142.0"></text>
</g>
<g>
<title>free (4 samples, 0.12%)</title><rect x="552.7" y="131.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="555.7" y="142.0"></text>
</g>
<g>
<title>szone_size (1 samples, 0.03%)</title><rect x="552.7" y="115.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="555.7" y="126.0"></text>
</g>
<g>
<title>tiny_size (3 samples, 0.09%)</title><rect x="553.1" y="115.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="556.1" y="126.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.15%)</title><rect x="554.1" y="131.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="557.1" y="142.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.09%)</title><rect x="554.1" y="115.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="557.1" y="126.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.03%)</title><rect x="555.2" y="115.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="558.2" y="126.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.03%)</title><rect x="555.5" y="115.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="558.5" y="126.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.30%)</title><rect x="555.9" y="131.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="558.9" y="142.0"></text>
</g>
<g>
<title>EnableIf&lt;!(AccessInternal::MustConvertCompressedOop&lt;1097844ull, oopDesc*&gt;::value), oopDesc*&gt;::type RawAccessBarrier&lt;1097844ull&gt;::decode_internal&lt;1097844ull, oopDesc*&gt;(oopDesc*) (1 samples, 0.03%)</title><rect x="555.9" y="115.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="558.9" y="126.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="556.2" y="115.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="559.2" y="126.0"></text>
</g>
<g>
<title>os::is_MP() (1 samples, 0.03%)</title><rect x="556.2" y="99.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="559.2" y="110.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.03%)</title><rect x="556.6" y="115.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="559.6" y="126.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (2 samples, 0.06%)</title><rect x="556.9" y="115.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="559.9" y="126.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (2 samples, 0.06%)</title><rect x="556.9" y="99.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="559.9" y="110.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (2 samples, 0.06%)</title><rect x="556.9" y="83.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="559.9" y="94.0"></text>
</g>
<g>
<title>Thread::polling_page_addr() (1 samples, 0.03%)</title><rect x="556.9" y="67.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="559.9" y="78.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.03%)</title><rect x="557.3" y="67.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="560.3" y="78.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.03%)</title><rect x="557.3" y="51.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="560.3" y="62.0"></text>
</g>
<g>
<title>void volatile* Atomic::load&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.03%)</title><rect x="557.3" y="35.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="560.3" y="46.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.06%)</title><rect x="557.6" y="115.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="560.6" y="126.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="558.3" y="115.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="561.3" y="126.0"></text>
</g>
<g>
<title>oopDesc* G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;::oop_load_not_in_heap&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.03%)</title><rect x="558.7" y="115.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="561.7" y="126.0"></text>
</g>
<g>
<title>EnableIf&lt;!(AccessInternal::MustConvertCompressedOop&lt;1097844ull, oopDesc*&gt;::value), oopDesc*&gt;::type RawAccessBarrier&lt;1097844ull&gt;::decode_internal&lt;1097844ull, oopDesc*&gt;(oopDesc*) (1 samples, 0.03%)</title><rect x="558.7" y="99.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="561.7" y="110.0"></text>
</g>
<g>
<title>oopDesc* RawAccessBarrier&lt;1097844ull&gt;::oop_load&lt;oopDesc*&gt;(void*) (1 samples, 0.03%)</title><rect x="559.0" y="115.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="562.0" y="126.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (27 samples, 0.80%)</title><rect x="559.4" y="131.0" width="9.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="562.4" y="142.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.03%)</title><rect x="559.4" y="115.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="562.4" y="126.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (26 samples, 0.77%)</title><rect x="559.7" y="115.0" width="9.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="562.7" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (26 samples, 0.77%)</title><rect x="559.7" y="99.0" width="9.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="562.7" y="110.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (23 samples, 0.68%)</title><rect x="560.1" y="83.0" width="8.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="563.1" y="94.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (5 samples, 0.15%)</title><rect x="561.1" y="67.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="564.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.12%)</title><rect x="562.9" y="67.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="565.9" y="78.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="563.2" y="51.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="566.2" y="62.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.03%)</title><rect x="563.6" y="51.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="566.6" y="62.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.03%)</title><rect x="563.9" y="51.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="566.9" y="62.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.03%)</title><rect x="563.9" y="35.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="566.9" y="46.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="564.3" y="67.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="567.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="564.6" y="67.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="567.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="565.0" y="67.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="568.0" y="78.0"></text>
</g>
<g>
<title>rocksdb::ReactiveVersionSet::ApplyOneVersionEditToBuilder(rocksdb::VersionEdit&amp;, bool*, unsigned long long*, bool*, unsigned long long*, bool*, unsigned long long*, bool*, unsigned long long*, unsigned long long*, unsigned int*) (1 samples, 0.03%)</title><rect x="565.3" y="67.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="568.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*) (6 samples, 0.18%)</title><rect x="565.7" y="67.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="568.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long long*, rocksdb::Env*, unsigned long long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (2 samples, 0.06%)</title><rect x="566.7" y="51.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="569.7" y="62.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (2 samples, 0.06%)</title><rect x="566.7" y="35.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="569.7" y="46.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.03%)</title><rect x="567.4" y="51.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="570.4" y="62.0"></text>
</g>
<g>
<title>thread-local wrapper routine for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="567.8" y="67.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="570.8" y="78.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="568.1" y="83.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="571.1" y="94.0"></text>
</g>
<g>
<title>thread-local wrapper routine for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="568.5" y="83.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="571.5" y="94.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.03%)</title><rect x="568.8" y="131.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="571.8" y="142.0"></text>
</g>
<g>
<title>szone_size (1 samples, 0.03%)</title><rect x="569.2" y="131.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="572.2" y="142.0"></text>
</g>
<g>
<title>vtable for std::__1::time_get_byname&lt;char, std::__1::istreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; &gt; &gt; (2 samples, 0.06%)</title><rect x="569.5" y="131.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="572.5" y="142.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.06%)</title><rect x="569.5" y="115.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="572.5" y="126.0"></text>
</g>
<g>
<title>malloc_zone_malloc (2 samples, 0.06%)</title><rect x="569.5" y="99.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="572.5" y="110.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (2 samples, 0.06%)</title><rect x="569.5" y="83.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="572.5" y="94.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (2 samples, 0.06%)</title><rect x="569.5" y="67.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="572.5" y="78.0"></text>
</g>
<g>
<title>vtable for std::__1::codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; (1 samples, 0.03%)</title><rect x="570.2" y="147.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="573.2" y="158.0"></text>
</g>
<g>
<title>vtable for std::__1::messages&lt;char&gt; (1 samples, 0.03%)</title><rect x="570.6" y="147.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="573.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shiftBytes (5 samples, 0.15%)</title><rect x="570.9" y="195.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.clone (5 samples, 0.15%)</title><rect x="570.9" y="179.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.12%)</title><rect x="570.9" y="163.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="570.9" y="147.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="571.3" y="131.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.3" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="571.6" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="571.6" y="99.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="571.6" y="83.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.6" y="94.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="571.6" y="67.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.6" y="78.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="572.0" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="572.3" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.3" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="572.3" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/lorismelik/NoSuchElementExceptionLite.&lt;init&gt; (1 samples, 0.03%)</title><rect x="572.7" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.7" y="206.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="572.7" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.7" y="190.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="572.7" y="163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.7" y="174.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.03%)</title><rect x="572.7" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.7" y="158.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.03%)</title><rect x="572.7" y="131.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="573.0" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.0" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="573.0" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.0" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="573.0" y="227.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="573.0" y="211.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="573.4" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="573.4" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="573.4" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="573.4" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.12%)</title><rect x="573.7" y="291.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="574.1" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.1" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="574.1" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.1" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="574.8" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="575.1" y="291.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="575.1" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.21%)</title><rect x="575.5" y="291.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.21%)</title><rect x="575.5" y="275.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="575.8" y="259.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.06%)</title><rect x="576.2" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.09%)</title><rect x="576.9" y="259.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.9" y="270.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.09%)</title><rect x="576.9" y="243.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.9" y="254.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.09%)</title><rect x="576.9" y="227.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="579.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.03%)</title><rect x="576.9" y="211.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="579.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.06%)</title><rect x="577.2" y="211.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.2" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="577.9" y="291.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.9" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="577.9" y="275.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.9" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (67 samples, 1.99%)</title><rect x="578.6" y="307.0" width="23.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="581.6" y="318.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (67 samples, 1.99%)</title><rect x="578.6" y="291.0" width="23.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.6" y="302.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (67 samples, 1.99%)</title><rect x="578.6" y="275.0" width="23.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.6" y="286.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (67 samples, 1.99%)</title><rect x="578.6" y="259.0" width="23.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="581.6" y="270.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (67 samples, 1.99%)</title><rect x="578.6" y="243.0" width="23.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.6" y="254.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (66 samples, 1.96%)</title><rect x="578.6" y="227.0" width="23.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="581.6" y="238.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (66 samples, 1.96%)</title><rect x="578.6" y="211.0" width="23.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.6" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (63 samples, 1.87%)</title><rect x="579.7" y="195.0" width="22.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="582.7" y="206.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (5 samples, 0.15%)</title><rect x="581.1" y="179.0" width="1.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="584.1" y="190.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.09%)</title><rect x="581.8" y="163.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="584.8" y="174.0"></text>
</g>
<g>
<title>read (54 samples, 1.60%)</title><rect x="582.8" y="179.0" width="19.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="585.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="601.8" y="227.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="604.8" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="601.8" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.8" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="601.8" y="195.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="604.8" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25091] (881 samples, 26.14%)</title><rect x="602.1" y="371.0" width="308.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="605.1" y="382.0">[NIO Selector #2 tid=25091]</text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (1 samples, 0.03%)</title><rect x="602.1" y="355.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="605.1" y="366.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.06%)</title><rect x="602.5" y="355.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="605.5" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (2 samples, 0.06%)</title><rect x="602.5" y="339.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="605.5" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="602.8" y="323.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="605.8" y="334.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.03%)</title><rect x="602.8" y="307.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="605.8" y="318.0"></text>
</g>
<g>
<title>[unknown_Java] (9 samples, 0.27%)</title><rect x="603.2" y="355.0" width="3.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="606.2" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (3 samples, 0.09%)</title><rect x="604.2" y="339.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="607.2" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.09%)</title><rect x="604.2" y="323.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="607.2" y="334.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (2 samples, 0.06%)</title><rect x="604.2" y="307.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="607.2" y="318.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="604.9" y="307.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="607.9" y="318.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.03%)</title><rect x="604.9" y="291.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="607.9" y="302.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.09%)</title><rect x="605.3" y="339.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="608.3" y="350.0"></text>
</g>
<g>
<title>_res (3 samples, 0.09%)</title><rect x="605.3" y="323.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="608.3" y="334.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (869 samples, 25.79%)</title><rect x="606.3" y="355.0" width="304.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.3" y="366.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="608.4" y="339.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="611.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="608.8" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (471 samples, 13.98%)</title><rect x="609.1" y="339.0" width="164.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.1" y="350.0">one/nio/net/JavaSelec..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (5 samples, 0.15%)</title><rect x="609.5" y="323.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 0.03%)</title><rect x="610.9" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.9" y="318.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="610.9" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.9" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="610.9" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.9" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="610.9" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.9" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="610.9" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="613.9" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (3 samples, 0.09%)</title><rect x="611.2" y="323.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (3 samples, 0.09%)</title><rect x="611.2" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="614.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (461 samples, 13.68%)</title><rect x="612.3" y="323.0" width="161.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.3" y="334.0">sun/nio/ch/SelectorIm..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (461 samples, 13.68%)</title><rect x="612.3" y="307.0" width="161.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.3" y="318.0">sun/nio/ch/SelectorIm..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (461 samples, 13.68%)</title><rect x="612.3" y="291.0" width="161.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.3" y="302.0">sun/nio/ch/KQueueSele..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (434 samples, 12.88%)</title><rect x="612.3" y="275.0" width="151.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.3" y="286.0">sun/nio/ch/KQueue.p..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (5 samples, 0.15%)</title><rect x="617.9" y="259.0" width="1.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="620.9" y="270.0"></text>
</g>
<g>
<title>kevent (413 samples, 12.26%)</title><rect x="619.6" y="259.0" width="144.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="622.6" y="270.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (14 samples, 0.42%)</title><rect x="764.2" y="275.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.2" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="764.6" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.6" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="764.6" y="243.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.6" y="254.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (1 samples, 0.03%)</title><rect x="764.6" y="227.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="767.6" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.09%)</title><rect x="764.9" y="259.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="767.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (9 samples, 0.27%)</title><rect x="766.0" y="259.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.0" y="270.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.24%)</title><rect x="766.0" y="243.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.0" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.24%)</title><rect x="766.0" y="227.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.0" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (8 samples, 0.24%)</title><rect x="766.0" y="211.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.0" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.12%)</title><rect x="766.0" y="195.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.0" y="206.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.12%)</title><rect x="767.4" y="195.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="770.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioReadyOps (1 samples, 0.03%)</title><rect x="768.8" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.03%)</title><rect x="769.1" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (10 samples, 0.30%)</title><rect x="769.5" y="275.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.5" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (10 samples, 0.30%)</title><rect x="769.5" y="259.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="772.5" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="769.5" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.5" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (8 samples, 0.24%)</title><rect x="769.8" y="243.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.8" y="254.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (8 samples, 0.24%)</title><rect x="769.8" y="227.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="772.8" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (8 samples, 0.24%)</title><rect x="769.8" y="211.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="772.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.03%)</title><rect x="772.6" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (1 samples, 0.03%)</title><rect x="773.0" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.0" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.03%)</title><rect x="773.0" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.0" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="773.0" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.0" y="254.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="773.0" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.0" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="773.0" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="776.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.03%)</title><rect x="773.3" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="773.3" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.3" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="773.3" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.03%)</title><rect x="773.7" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.7" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.03%)</title><rect x="773.7" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.7" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (1 samples, 0.03%)</title><rect x="773.7" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.7" y="302.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.03%)</title><rect x="773.7" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.7" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (387 samples, 11.48%)</title><rect x="774.0" y="339.0" width="135.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="777.0" y="350.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (387 samples, 11.48%)</title><rect x="774.0" y="323.0" width="135.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.0" y="334.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.03%)</title><rect x="774.0" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.0" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.03%)</title><rect x="774.0" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.03%)</title><rect x="774.0" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.0" y="286.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.close (1 samples, 0.03%)</title><rect x="774.0" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.0" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.03%)</title><rect x="774.0" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.0" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (1 samples, 0.03%)</title><rect x="774.0" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.0" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (1 samples, 0.03%)</title><rect x="774.0" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (1 samples, 0.03%)</title><rect x="774.0" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.0" y="206.0"></text>
</g>
<g>
<title>sun/net/ext/ExtendedSocketOptions.isOptionSupported (1 samples, 0.03%)</title><rect x="774.0" y="179.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.0" y="190.0"></text>
</g>
<g>
<title>sun/net/ext/ExtendedSocketOptions.options (1 samples, 0.03%)</title><rect x="774.0" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (310 samples, 9.20%)</title><rect x="774.4" y="307.0" width="108.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.4" y="318.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (294 samples, 8.72%)</title><rect x="774.7" y="291.0" width="103.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.7" y="302.0">one/nio/http..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="774.7" y="275.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="777.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (293 samples, 8.69%)</title><rect x="775.1" y="275.0" width="102.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="778.1" y="286.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (292 samples, 8.66%)</title><rect x="775.1" y="259.0" width="102.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.1" y="270.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (189 samples, 5.61%)</title><rect x="775.1" y="243.0" width="66.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.1" y="254.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (187 samples, 5.55%)</title><rect x="775.1" y="227.0" width="65.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.1" y="238.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.30%)</title><rect x="775.1" y="211.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.1" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.12%)</title><rect x="777.2" y="195.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.2" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.12%)</title><rect x="777.2" y="179.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.2" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.12%)</title><rect x="777.2" y="163.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.12%)</title><rect x="777.2" y="147.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.2" y="158.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (177 samples, 5.25%)</title><rect x="778.6" y="211.0" width="62.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.6" y="222.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (177 samples, 5.25%)</title><rect x="778.6" y="195.0" width="62.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.6" y="206.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (176 samples, 5.22%)</title><rect x="778.9" y="179.0" width="61.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.9" y="190.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (176 samples, 5.22%)</title><rect x="778.9" y="163.0" width="61.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.9" y="174.0">one/ni..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.24%)</title><rect x="778.9" y="147.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.9" y="158.0"></text>
</g>
<g>
<title>__cxx_global_var_init.4 (1 samples, 0.03%)</title><rect x="779.3" y="131.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="782.3" y="142.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.06%)</title><rect x="779.6" y="131.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="782.6" y="142.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.12%)</title><rect x="780.3" y="131.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="783.3" y="142.0"></text>
</g>
<g>
<title>__vsnprintf_chk (1 samples, 0.03%)</title><rect x="780.3" y="115.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="783.3" y="126.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="780.7" y="115.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="783.7" y="126.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.03%)</title><rect x="780.7" y="99.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="783.7" y="110.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 0.06%)</title><rect x="781.0" y="115.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="784.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (168 samples, 4.99%)</title><rect x="781.7" y="147.0" width="58.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="784.7" y="158.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (168 samples, 4.99%)</title><rect x="781.7" y="131.0" width="58.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="784.7" y="142.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (167 samples, 4.96%)</title><rect x="782.1" y="115.0" width="58.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.1" y="126.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (167 samples, 4.96%)</title><rect x="782.1" y="99.0" width="58.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.1" y="110.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (5 samples, 0.15%)</title><rect x="782.1" y="83.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="785.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (162 samples, 4.81%)</title><rect x="783.8" y="83.0" width="56.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.8" y="94.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (160 samples, 4.75%)</title><rect x="784.5" y="67.0" width="56.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="787.5" y="78.0">sun/ni..</text>
</g>
<g>
<title>write (151 samples, 4.48%)</title><rect x="787.7" y="51.0" width="52.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="790.7" y="62.0">write</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="840.6" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="840.9" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="840.9" y="195.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.9" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.03%)</title><rect x="840.9" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.06%)</title><rect x="841.3" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="844.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="841.3" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="841.3" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="841.6" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="841.6" y="211.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/ServiceImpl.entity (101 samples, 3.00%)</title><rect x="842.0" y="243.0" width="35.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="845.0" y="254.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="842.0" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="842.0" y="211.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="842.0" y="195.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.0" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="842.0" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/ServiceImpl.doGet (100 samples, 2.97%)</title><rect x="842.3" y="227.0" width="35.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.3" y="238.0">ru/..</text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (20 samples, 0.59%)</title><rect x="843.4" y="211.0" width="7.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="846.4" y="222.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.06%)</title><rect x="843.7" y="195.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="846.7" y="206.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.12%)</title><rect x="844.4" y="195.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="847.4" y="206.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.03%)</title><rect x="844.4" y="179.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="847.4" y="190.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.09%)</title><rect x="844.8" y="179.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="847.8" y="190.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.03%)</title><rect x="844.8" y="163.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="847.8" y="174.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.06%)</title><rect x="845.1" y="163.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="848.1" y="174.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.03%)</title><rect x="845.5" y="147.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="848.5" y="158.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (12 samples, 0.36%)</title><rect x="845.8" y="195.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="848.8" y="206.0"></text>
</g>
<g>
<title>Arena::Amalloc_4(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="847.9" y="179.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="850.9" y="190.0"></text>
</g>
<g>
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (1 samples, 0.03%)</title><rect x="847.9" y="163.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="850.9" y="174.0"></text>
</g>
<g>
<title>CompiledMethod::handler_for_exception_and_pc(Handle, unsigned char*) (1 samples, 0.03%)</title><rect x="848.3" y="179.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="851.3" y="190.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="848.6" y="179.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="851.6" y="190.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (2 samples, 0.06%)</title><rect x="849.0" y="179.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="852.0" y="190.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="849.0" y="163.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="852.0" y="174.0"></text>
</g>
<g>
<title>os::is_MP() (1 samples, 0.03%)</title><rect x="849.0" y="147.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="852.0" y="158.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.03%)</title><rect x="849.3" y="163.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="852.3" y="174.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.03%)</title><rect x="849.7" y="179.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="852.7" y="190.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (1 samples, 0.03%)</title><rect x="850.0" y="195.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="853.0" y="206.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (1 samples, 0.03%)</title><rect x="850.4" y="211.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="853.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.09%)</title><rect x="850.7" y="211.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.7" y="222.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="851.4" y="195.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="854.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/lorismelik/RocksDAO.get (73 samples, 2.17%)</title><rect x="851.8" y="211.0" width="25.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.8" y="222.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.18%)</title><rect x="851.8" y="195.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/836220863.invoke (6 samples, 0.18%)</title><rect x="851.8" y="179.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="854.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.18%)</title><rect x="851.8" y="163.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixCoder (4 samples, 0.12%)</title><rect x="852.1" y="147.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.12%)</title><rect x="852.1" y="131.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.1" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="852.1" y="115.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="855.1" y="126.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="852.8" y="115.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="855.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.03%)</title><rect x="853.5" y="147.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.5" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="853.5" y="131.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="856.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (9 samples, 0.27%)</title><rect x="853.9" y="195.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.9" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.06%)</title><rect x="854.6" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (5 samples, 0.15%)</title><rect x="855.3" y="179.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="858.3" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.09%)</title><rect x="856.0" y="163.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="859.0" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="856.3" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.3" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="856.3" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.3" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.03%)</title><rect x="856.7" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="856.7" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="859.7" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (54 samples, 1.60%)</title><rect x="857.0" y="195.0" width="18.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.0" y="206.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (54 samples, 1.60%)</title><rect x="857.0" y="179.0" width="18.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.0" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (53 samples, 1.57%)</title><rect x="857.4" y="163.0" width="18.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="860.4" y="174.0"></text>
</g>
<g>
<title>ZBUFFv07_recommendedDOutSize (1 samples, 0.03%)</title><rect x="858.4" y="147.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="861.4" y="158.0"></text>
</g>
<g>
<title>free (1 samples, 0.03%)</title><rect x="858.8" y="147.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="861.8" y="158.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (45 samples, 1.34%)</title><rect x="859.1" y="147.0" width="15.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="862.1" y="158.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ull&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="859.8" y="131.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="862.8" y="142.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="860.2" y="131.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="863.2" y="142.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.03%)</title><rect x="860.5" y="131.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="863.5" y="142.0"></text>
</g>
<g>
<title>_setcontext (1 samples, 0.03%)</title><rect x="860.9" y="131.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="863.9" y="142.0"></text>
</g>
<g>
<title>default_zone_free_definite_size (1 samples, 0.03%)</title><rect x="861.2" y="131.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="864.2" y="142.0"></text>
</g>
<g>
<title>free (3 samples, 0.09%)</title><rect x="861.6" y="131.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="864.6" y="142.0"></text>
</g>
<g>
<title>tiny_size (2 samples, 0.06%)</title><rect x="861.9" y="115.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="864.9" y="126.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="862.6" y="131.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="865.6" y="142.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.03%)</title><rect x="862.6" y="115.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="865.6" y="126.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.30%)</title><rect x="863.0" y="131.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="866.0" y="142.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="863.7" y="115.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="866.7" y="126.0"></text>
</g>
<g>
<title>os::is_MP() (1 samples, 0.03%)</title><rect x="863.7" y="99.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="866.7" y="110.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.03%)</title><rect x="864.0" y="115.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="867.0" y="126.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (3 samples, 0.09%)</title><rect x="864.4" y="115.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="867.4" y="126.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (2 samples, 0.06%)</title><rect x="864.4" y="99.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="867.4" y="110.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (2 samples, 0.06%)</title><rect x="864.4" y="83.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="867.4" y="94.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (2 samples, 0.06%)</title><rect x="864.4" y="67.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="867.4" y="78.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (2 samples, 0.06%)</title><rect x="864.4" y="51.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="867.4" y="62.0"></text>
</g>
<g>
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::~ScopedFence() (2 samples, 0.06%)</title><rect x="864.4" y="35.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="867.4" y="46.0"></text>
</g>
<g>
<title>mask_bits_are_true(long, long) (1 samples, 0.03%)</title><rect x="865.1" y="99.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="868.1" y="110.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="865.4" y="115.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="868.4" y="126.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.06%)</title><rect x="865.8" y="115.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="868.8" y="126.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.06%)</title><rect x="865.8" y="99.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="868.8" y="110.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.06%)</title><rect x="866.5" y="131.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="869.5" y="142.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (18 samples, 0.53%)</title><rect x="867.2" y="131.0" width="6.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="870.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (18 samples, 0.53%)</title><rect x="867.2" y="115.0" width="6.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="870.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (17 samples, 0.50%)</title><rect x="867.5" y="99.0" width="6.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="870.5" y="110.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (17 samples, 0.50%)</title><rect x="867.5" y="83.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="870.5" y="94.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (1 samples, 0.03%)</title><rect x="868.6" y="67.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="871.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.12%)</title><rect x="868.9" y="67.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="871.9" y="78.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (3 samples, 0.09%)</title><rect x="869.3" y="51.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="872.3" y="62.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="870.3" y="67.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="873.3" y="78.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.03%)</title><rect x="870.3" y="51.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="873.3" y="62.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.03%)</title><rect x="870.3" y="35.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="873.3" y="46.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long long*, rocksdb::Env*, unsigned long long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="870.7" y="67.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="873.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, unsigned long long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="871.0" y="67.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="874.0" y="78.0"></text>
</g>
<g>
<title>rocksdb::ReactiveVersionSet::ApplyOneVersionEditToBuilder(rocksdb::VersionEdit&amp;, bool*, unsigned long long*, bool*, unsigned long long*, bool*, unsigned long long*, bool*, unsigned long long*, unsigned long long*, unsigned int*) (1 samples, 0.03%)</title><rect x="871.4" y="67.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="874.4" y="78.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*) (4 samples, 0.12%)</title><rect x="871.7" y="67.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="874.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long long*, rocksdb::Env*, unsigned long long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="872.8" y="51.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="875.8" y="62.0"></text>
</g>
<g>
<title>thread-local wrapper routine for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="873.1" y="67.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="876.1" y="78.0"></text>
</g>
<g>
<title>vtable for std::__1::time_get_byname&lt;char, std::__1::istreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; &gt; &gt; (4 samples, 0.12%)</title><rect x="873.5" y="131.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="876.5" y="142.0"></text>
</g>
<g>
<title>malloc (4 samples, 0.12%)</title><rect x="873.5" y="115.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="876.5" y="126.0"></text>
</g>
<g>
<title>malloc_zone_malloc (4 samples, 0.12%)</title><rect x="873.5" y="99.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="876.5" y="110.0"></text>
</g>
<g>
<title>default_zone_malloc (1 samples, 0.03%)</title><rect x="873.5" y="83.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="876.5" y="94.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (3 samples, 0.09%)</title><rect x="873.8" y="83.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="876.8" y="94.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (2 samples, 0.06%)</title><rect x="874.2" y="67.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="877.2" y="78.0"></text>
</g>
<g>
<title>vtable for std::__1::codecvt_byname&lt;wchar_t, char, __mbstate_t&gt; (2 samples, 0.06%)</title><rect x="874.9" y="147.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="877.9" y="158.0"></text>
</g>
<g>
<title>vtable for std::__1::time_get_byname&lt;char, std::__1::istreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="875.6" y="147.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="878.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shiftBytes (4 samples, 0.12%)</title><rect x="875.9" y="195.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.clone (4 samples, 0.12%)</title><rect x="875.9" y="179.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.12%)</title><rect x="875.9" y="163.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="878.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="875.9" y="147.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="875.9" y="131.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.9" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="876.6" y="115.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="879.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="876.6" y="99.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="879.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="876.6" y="83.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="879.6" y="94.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="877.0" y="147.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="880.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="877.3" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="880.3" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="877.3" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="880.3" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="877.3" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="877.3" y="211.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="880.3" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.21%)</title><rect x="877.7" y="291.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="878.4" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="881.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="878.4" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="881.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="878.4" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="878.4" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.4" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.09%)</title><rect x="878.7" y="275.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.7" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.09%)</title><rect x="878.7" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="881.7" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="879.8" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="882.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="880.1" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="883.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.18%)</title><rect x="880.5" y="291.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.18%)</title><rect x="880.5" y="275.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.09%)</title><rect x="881.2" y="259.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="884.2" y="270.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="881.9" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="884.9" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="882.2" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.2" y="270.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="882.2" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="885.2" y="254.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="882.2" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.2" y="238.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="882.2" y="211.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.2" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="882.6" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.6" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="882.6" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.6" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (76 samples, 2.26%)</title><rect x="882.9" y="307.0" width="26.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.9" y="318.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (1 samples, 0.03%)</title><rect x="884.0" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (71 samples, 2.11%)</title><rect x="884.3" y="291.0" width="24.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.3" y="302.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (71 samples, 2.11%)</title><rect x="884.3" y="275.0" width="24.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.3" y="286.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (71 samples, 2.11%)</title><rect x="884.3" y="259.0" width="24.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.3" y="270.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (71 samples, 2.11%)</title><rect x="884.3" y="243.0" width="24.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.3" y="254.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (64 samples, 1.90%)</title><rect x="884.3" y="227.0" width="22.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="887.3" y="238.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (64 samples, 1.90%)</title><rect x="884.3" y="211.0" width="22.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.3" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (56 samples, 1.66%)</title><rect x="887.1" y="195.0" width="19.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.1" y="206.0"></text>
</g>
<g>
<title>JNI_OnLoad (1 samples, 0.03%)</title><rect x="888.2" y="179.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="891.2" y="190.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (3 samples, 0.09%)</title><rect x="888.5" y="179.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="891.5" y="190.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.06%)</title><rect x="888.9" y="163.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="891.9" y="174.0"></text>
</g>
<g>
<title>read (49 samples, 1.45%)</title><rect x="889.6" y="179.0" width="17.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="892.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.21%)</title><rect x="906.7" y="227.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="909.7" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.21%)</title><rect x="906.7" y="211.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.7" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.21%)</title><rect x="906.7" y="195.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.7" y="206.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.03%)</title><rect x="908.5" y="179.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="911.5" y="190.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="908.8" y="179.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="911.8" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.03%)</title><rect x="909.2" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="912.2" y="302.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1 samples, 0.03%)</title><rect x="909.2" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="912.2" y="286.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.09%)</title><rect x="909.5" y="339.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="912.5" y="350.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.06%)</title><rect x="909.5" y="323.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="912.5" y="334.0"></text>
</g>
<g>
<title>_res (1 samples, 0.03%)</title><rect x="909.5" y="307.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="912.5" y="318.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.03%)</title><rect x="909.9" y="307.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="912.9" y="318.0"></text>
</g>
<g>
<title>_res (1 samples, 0.03%)</title><rect x="909.9" y="291.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="912.9" y="302.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.03%)</title><rect x="910.2" y="323.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="913.2" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=39939] (784 samples, 23.26%)</title><rect x="910.6" y="371.0" width="274.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="913.6" y="382.0">[NIO Selector #3 tid=39939]</text>
</g>
<g>
<title>OptoRuntime::rethrow_C(oopDesc*, JavaThread*, unsigned char*) (1 samples, 0.03%)</title><rect x="910.6" y="355.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="913.6" y="366.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.03%)</title><rect x="910.9" y="355.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="913.9" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (1 samples, 0.03%)</title><rect x="910.9" y="339.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="913.9" y="350.0"></text>
</g>
<g>
<title>[unknown_Java] (7 samples, 0.21%)</title><rect x="911.3" y="355.0" width="2.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="914.3" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (4 samples, 0.12%)</title><rect x="911.6" y="339.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="914.6" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.12%)</title><rect x="911.6" y="323.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="914.6" y="334.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (3 samples, 0.09%)</title><rect x="911.6" y="307.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="914.6" y="318.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="912.7" y="307.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="915.7" y="318.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.03%)</title><rect x="912.7" y="291.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="915.7" y="302.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.06%)</title><rect x="913.0" y="339.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="916.0" y="350.0"></text>
</g>
<g>
<title>_res (2 samples, 0.06%)</title><rect x="913.0" y="323.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="916.0" y="334.0"></text>
</g>
<g>
<title>nmethod::exception_begin() const (2 samples, 0.06%)</title><rect x="913.7" y="355.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="916.7" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (772 samples, 22.91%)</title><rect x="914.4" y="355.0" width="270.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.4" y="366.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="915.5" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.5" y="350.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (407 samples, 12.08%)</title><rect x="915.8" y="339.0" width="142.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.8" y="350.0">one/nio/net/JavaSe..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (2 samples, 0.06%)</title><rect x="916.5" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 0.03%)</title><rect x="916.9" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="919.9" y="318.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="916.9" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.9" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="916.9" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="919.9" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="916.9" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.9" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="916.9" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="919.9" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (2 samples, 0.06%)</title><rect x="917.2" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (2 samples, 0.06%)</title><rect x="917.2" y="307.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (401 samples, 11.90%)</title><rect x="917.9" y="323.0" width="140.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.9" y="334.0">sun/nio/ch/Selecto..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (401 samples, 11.90%)</title><rect x="917.9" y="307.0" width="140.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.9" y="318.0">sun/nio/ch/Selecto..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (400 samples, 11.87%)</title><rect x="918.3" y="291.0" width="140.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.3" y="302.0">sun/nio/ch/KQueueS..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (380 samples, 11.28%)</title><rect x="918.6" y="275.0" width="133.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.6" y="286.0">sun/nio/ch/KQueue..</text>
</g>
<g>
<title>kevent (366 samples, 10.86%)</title><rect x="923.5" y="259.0" width="128.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="926.5" y="270.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (13 samples, 0.39%)</title><rect x="1051.7" y="275.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1054.7" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="1052.4" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.4" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.06%)</title><rect x="1052.4" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.4" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (9 samples, 0.27%)</title><rect x="1053.1" y="259.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1056.1" y="270.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.21%)</title><rect x="1053.1" y="243.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1056.1" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.21%)</title><rect x="1053.1" y="227.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1056.1" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.21%)</title><rect x="1053.1" y="211.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1056.1" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 0.15%)</title><rect x="1053.4" y="195.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.4" y="206.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="1055.2" y="195.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1058.2" y="206.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.03%)</title><rect x="1055.5" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.5" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.03%)</title><rect x="1055.5" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1058.5" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="1055.5" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioReadyOps (1 samples, 0.03%)</title><rect x="1055.9" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.03%)</title><rect x="1056.2" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1059.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.06%)</title><rect x="1056.6" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.6" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.06%)</title><rect x="1056.6" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1059.6" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="1056.6" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1059.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.03%)</title><rect x="1056.6" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.6" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="1056.9" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.9" y="254.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="1056.9" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.9" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="1056.9" y="211.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1059.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.09%)</title><rect x="1057.3" y="275.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.06%)</title><rect x="1057.6" y="259.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.6" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.06%)</title><rect x="1057.6" y="243.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1060.6" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1057.6" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.6" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1057.6" y="211.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1060.6" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (359 samples, 10.65%)</title><rect x="1058.3" y="339.0" width="125.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1061.3" y="350.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (359 samples, 10.65%)</title><rect x="1058.3" y="323.0" width="125.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1061.3" y="334.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.03%)</title><rect x="1058.7" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.7" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.03%)</title><rect x="1058.7" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.7" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.03%)</title><rect x="1058.7" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.7" y="286.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.close (1 samples, 0.03%)</title><rect x="1058.7" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.7" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.03%)</title><rect x="1058.7" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.7" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (1 samples, 0.03%)</title><rect x="1058.7" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (1 samples, 0.03%)</title><rect x="1058.7" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1061.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (1 samples, 0.03%)</title><rect x="1058.7" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (284 samples, 8.43%)</title><rect x="1059.0" y="307.0" width="99.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1062.0" y="318.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (266 samples, 7.89%)</title><rect x="1060.8" y="291.0" width="93.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.8" y="302.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (266 samples, 7.89%)</title><rect x="1060.8" y="275.0" width="93.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.8" y="286.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (264 samples, 7.83%)</title><rect x="1060.8" y="259.0" width="92.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1063.8" y="270.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (162 samples, 4.81%)</title><rect x="1061.1" y="243.0" width="56.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1064.1" y="254.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (161 samples, 4.78%)</title><rect x="1061.1" y="227.0" width="56.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.1" y="238.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.36%)</title><rect x="1061.1" y="211.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.1" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.21%)</title><rect x="1062.9" y="195.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.21%)</title><rect x="1062.9" y="179.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1065.9" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.21%)</title><rect x="1062.9" y="163.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1065.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.21%)</title><rect x="1062.9" y="147.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.9" y="158.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (149 samples, 4.42%)</title><rect x="1065.3" y="211.0" width="52.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1068.3" y="222.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (148 samples, 4.39%)</title><rect x="1065.7" y="195.0" width="51.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1068.7" y="206.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (146 samples, 4.33%)</title><rect x="1066.4" y="179.0" width="51.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.4" y="190.0">one/n..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (146 samples, 4.33%)</title><rect x="1066.4" y="163.0" width="51.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.4" y="174.0">one/n..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="1066.4" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1069.4" y="158.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="1066.4" y="131.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1069.4" y="142.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.03%)</title><rect x="1066.4" y="115.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1069.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (145 samples, 4.30%)</title><rect x="1066.7" y="147.0" width="50.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.7" y="158.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (145 samples, 4.30%)</title><rect x="1066.7" y="131.0" width="50.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.7" y="142.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (144 samples, 4.27%)</title><rect x="1067.1" y="115.0" width="50.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1070.1" y="126.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (144 samples, 4.27%)</title><rect x="1067.1" y="99.0" width="50.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.1" y="110.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (3 samples, 0.09%)</title><rect x="1067.1" y="83.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.03%)</title><rect x="1067.8" y="67.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.8" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (141 samples, 4.18%)</title><rect x="1068.1" y="83.0" width="49.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1071.1" y="94.0">sun/n..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1069.9" y="67.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1072.9" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (135 samples, 4.01%)</title><rect x="1070.2" y="67.0" width="47.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1073.2" y="78.0">sun/..</text>
</g>
<g>
<title>write (129 samples, 3.83%)</title><rect x="1072.4" y="51.0" width="45.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1075.4" y="62.0">write</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="1117.5" y="227.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.12%)</title><rect x="1117.9" y="243.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1120.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1117.9" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1117.9" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="1118.2" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.2" y="238.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.06%)</title><rect x="1118.6" y="227.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1121.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="1118.6" y="211.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="1118.6" y="195.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.06%)</title><rect x="1118.6" y="179.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="1119.3" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.3" y="254.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="1119.3" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.3" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="1119.3" y="211.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.3" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="1119.3" y="195.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.3" y="206.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="1119.3" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/ServiceImpl.entity (96 samples, 2.85%)</title><rect x="1119.6" y="243.0" width="33.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.6" y="254.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="1119.6" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="1119.6" y="211.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="1119.6" y="195.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/ServiceImpl.doGet (95 samples, 2.82%)</title><rect x="1120.0" y="227.0" width="33.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.0" y="238.0">ru..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.09%)</title><rect x="1120.0" y="211.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1123.0" y="222.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (18 samples, 0.53%)</title><rect x="1121.0" y="211.0" width="6.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.0" y="222.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.15%)</title><rect x="1121.0" y="195.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1124.0" y="206.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.03%)</title><rect x="1121.0" y="179.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1124.0" y="190.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.12%)</title><rect x="1121.4" y="179.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1124.4" y="190.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (2 samples, 0.06%)</title><rect x="1121.4" y="163.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1124.4" y="174.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.06%)</title><rect x="1122.1" y="163.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1125.1" y="174.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (2 samples, 0.06%)</title><rect x="1122.1" y="147.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1125.1" y="158.0"></text>
</g>
<g>
<title>JavaThread::reguard_stack() (1 samples, 0.03%)</title><rect x="1122.8" y="195.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1125.8" y="206.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (10 samples, 0.30%)</title><rect x="1123.1" y="195.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1126.1" y="206.0"></text>
</g>
<g>
<title>CompiledMethod::handler_for_exception_and_pc(Handle, unsigned char*) (2 samples, 0.06%)</title><rect x="1125.2" y="179.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1128.2" y="190.0"></text>
</g>
<g>
<title>ExceptionCache::match(Handle, unsigned char*) (2 samples, 0.06%)</title><rect x="1125.2" y="163.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1128.2" y="174.0"></text>
</g>
<g>
<title>ExceptionCache::match(Handle, unsigned char*) (1 samples, 0.03%)</title><rect x="1125.9" y="179.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1128.9" y="190.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.03%)</title><rect x="1126.3" y="179.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.3" y="190.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (1 samples, 0.03%)</title><rect x="1126.6" y="195.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1129.6" y="206.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="1127.0" y="195.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.0" y="206.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.03%)</title><rect x="1127.0" y="179.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1130.0" y="190.0"></text>
</g>
<g>
<title>_rethrow_Java (1 samples, 0.03%)</title><rect x="1127.3" y="211.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1130.3" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1127.7" y="211.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.7" y="222.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1128.0" y="195.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1131.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/lorismelik/RocksDAO.get (71 samples, 2.11%)</title><rect x="1128.4" y="211.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.4" y="222.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.09%)</title><rect x="1128.7" y="195.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/836220863.invoke (3 samples, 0.09%)</title><rect x="1128.7" y="179.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.09%)</title><rect x="1128.7" y="163.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1131.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixCoder (1 samples, 0.03%)</title><rect x="1129.4" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="1129.4" y="131.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1132.4" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1129.4" y="115.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1132.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (4 samples, 0.12%)</title><rect x="1129.8" y="195.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (4 samples, 0.12%)</title><rect x="1129.8" y="179.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1132.8" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.12%)</title><rect x="1129.8" y="163.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1132.8" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.09%)</title><rect x="1129.8" y="147.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.06%)</title><rect x="1129.8" y="131.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1132.8" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1130.5" y="131.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1133.5" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.03%)</title><rect x="1130.8" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="1130.8" y="131.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.8" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="1131.2" y="195.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1134.2" y="206.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (52 samples, 1.54%)</title><rect x="1131.9" y="195.0" width="18.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1134.9" y="206.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (52 samples, 1.54%)</title><rect x="1131.9" y="179.0" width="18.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.9" y="190.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (50 samples, 1.48%)</title><rect x="1132.6" y="163.0" width="17.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1135.6" y="174.0"></text>
</g>
<g>
<title>free_tiny (1 samples, 0.03%)</title><rect x="1134.0" y="147.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1137.0" y="158.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (42 samples, 1.25%)</title><rect x="1134.3" y="147.0" width="14.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1137.3" y="158.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.03%)</title><rect x="1135.4" y="131.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1138.4" y="142.0"></text>
</g>
<g>
<title>free (2 samples, 0.06%)</title><rect x="1135.7" y="131.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1138.7" y="142.0"></text>
</g>
<g>
<title>tiny_size (2 samples, 0.06%)</title><rect x="1135.7" y="115.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1138.7" y="126.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="1136.4" y="131.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1139.4" y="142.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.21%)</title><rect x="1136.8" y="131.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1139.8" y="142.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.03%)</title><rect x="1137.1" y="115.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.1" y="126.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.03%)</title><rect x="1137.1" y="99.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1140.1" y="110.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.03%)</title><rect x="1137.1" y="83.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.1" y="94.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.03%)</title><rect x="1137.1" y="67.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1140.1" y="78.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.03%)</title><rect x="1137.1" y="51.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1140.1" y="62.0"></text>
</g>
<g>
<title>void volatile* Atomic::load&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.03%)</title><rect x="1137.1" y="35.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.1" y="46.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.12%)</title><rect x="1137.5" y="115.0" width="1.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1140.5" y="126.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.06%)</title><rect x="1138.2" y="99.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1141.2" y="110.0"></text>
</g>
<g>
<title>os::is_MP() (1 samples, 0.03%)</title><rect x="1138.9" y="115.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.9" y="126.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (20 samples, 0.59%)</title><rect x="1139.2" y="131.0" width="7.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1142.2" y="142.0"></text>
</g>
<g>
<title>rocksdb::CompactedDBImpl::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::DB**) (20 samples, 0.59%)</title><rect x="1139.2" y="115.0" width="7.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.2" y="126.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (20 samples, 0.59%)</title><rect x="1139.2" y="99.0" width="7.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1142.2" y="110.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (19 samples, 0.56%)</title><rect x="1139.2" y="83.0" width="6.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1142.2" y="94.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (3 samples, 0.09%)</title><rect x="1140.6" y="67.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1143.6" y="78.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.03%)</title><rect x="1141.7" y="67.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.7" y="78.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.12%)</title><rect x="1142.0" y="67.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1145.0" y="78.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.06%)</title><rect x="1142.4" y="51.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1145.4" y="62.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.03%)</title><rect x="1143.1" y="51.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.1" y="62.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.03%)</title><rect x="1143.1" y="35.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.1" y="46.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long long) (1 samples, 0.03%)</title><rect x="1143.4" y="67.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.4" y="78.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="1143.4" y="51.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1146.4" y="62.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.03%)</title><rect x="1143.8" y="67.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1146.8" y="78.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*) (4 samples, 0.12%)</title><rect x="1144.1" y="67.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1147.1" y="78.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long long*, rocksdb::Env*, unsigned long long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="1144.5" y="51.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1147.5" y="62.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (1 samples, 0.03%)</title><rect x="1144.5" y="35.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1147.5" y="46.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.03%)</title><rect x="1144.8" y="51.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1147.8" y="62.0"></text>
</g>
<g>
<title>rocksdb::ReactiveVersionSet::ApplyOneVersionEditToBuilder(rocksdb::VersionEdit&amp;, bool*, unsigned long long*, bool*, unsigned long long*, bool*, unsigned long long*, bool*, unsigned long long*, unsigned long long*, unsigned int*) (1 samples, 0.03%)</title><rect x="1145.2" y="51.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1148.2" y="62.0"></text>
</g>
<g>
<title>thread-local wrapper routine for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="1145.5" y="67.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.5" y="78.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long long*, bool*, bool*, unsigned long long*, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="1145.9" y="83.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.9" y="94.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.03%)</title><rect x="1146.2" y="131.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1149.2" y="142.0"></text>
</g>
<g>
<title>vtable for std::__1::time_get_byname&lt;char, std::__1::istreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.21%)</title><rect x="1146.6" y="131.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.6" y="142.0"></text>
</g>
<g>
<title>malloc (6 samples, 0.18%)</title><rect x="1146.9" y="115.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1149.9" y="126.0"></text>
</g>
<g>
<title>malloc_zone_malloc (5 samples, 0.15%)</title><rect x="1146.9" y="99.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1149.9" y="110.0"></text>
</g>
<g>
<title>default_zone_malloc (1 samples, 0.03%)</title><rect x="1147.6" y="83.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1150.6" y="94.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (2 samples, 0.06%)</title><rect x="1148.0" y="83.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1151.0" y="94.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="1148.3" y="67.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1151.3" y="78.0"></text>
</g>
<g>
<title>szone_malloc (1 samples, 0.03%)</title><rect x="1148.7" y="99.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1151.7" y="110.0"></text>
</g>
<g>
<title>vtable for std::__1::messages&lt;char&gt; (2 samples, 0.06%)</title><rect x="1149.0" y="147.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.0" y="158.0"></text>
</g>
<g>
<title>vtable for std::__1::time_get_byname&lt;char, std::__1::istreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="1149.7" y="147.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shiftBytes (7 samples, 0.21%)</title><rect x="1150.1" y="195.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1153.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.clone (7 samples, 0.21%)</title><rect x="1150.1" y="179.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.15%)</title><rect x="1150.1" y="163.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.1" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="1150.1" y="147.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1153.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="1150.1" y="131.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.1" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1150.4" y="115.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1153.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="1150.4" y="99.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="1150.4" y="83.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.4" y="94.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.06%)</title><rect x="1150.4" y="67.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1153.4" y="78.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1151.1" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1154.1" y="158.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1151.5" y="147.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1154.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.06%)</title><rect x="1151.8" y="163.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1154.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="1151.8" y="147.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.8" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="1152.2" y="131.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1155.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/lorismelik/NoSuchElementExceptionLite.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1152.5" y="195.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1155.5" y="206.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1152.5" y="179.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.5" y="190.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1152.5" y="163.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.5" y="174.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1152.5" y="147.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.5" y="158.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1152.5" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1155.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="1153.2" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.2" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="1153.2" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.2" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="1153.2" y="227.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="1153.6" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1156.6" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="1153.6" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1156.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="1153.6" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1156.6" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="1153.6" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.18%)</title><rect x="1153.9" y="291.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.9" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.09%)</title><rect x="1154.3" y="275.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.09%)</title><rect x="1154.3" y="259.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.06%)</title><rect x="1155.3" y="275.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1158.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="1155.7" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1158.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (4 samples, 0.12%)</title><rect x="1156.0" y="291.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.06%)</title><rect x="1156.7" y="275.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1159.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="1157.4" y="291.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.4" y="302.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="1157.4" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1160.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.06%)</title><rect x="1157.4" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.4" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="1158.1" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="1158.1" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.1" y="286.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1 samples, 0.03%)</title><rect x="1158.5" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.5" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (72 samples, 2.14%)</title><rect x="1158.8" y="307.0" width="25.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.8" y="318.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (72 samples, 2.14%)</title><rect x="1158.8" y="291.0" width="25.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.8" y="302.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (72 samples, 2.14%)</title><rect x="1158.8" y="275.0" width="25.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.8" y="286.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (72 samples, 2.14%)</title><rect x="1158.8" y="259.0" width="25.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.8" y="270.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (72 samples, 2.14%)</title><rect x="1158.8" y="243.0" width="25.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1161.8" y="254.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (68 samples, 2.02%)</title><rect x="1158.8" y="227.0" width="23.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1161.8" y="238.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (68 samples, 2.02%)</title><rect x="1158.8" y="211.0" width="23.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1161.8" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (62 samples, 1.84%)</title><rect x="1160.9" y="195.0" width="21.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1163.9" y="206.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (2 samples, 0.06%)</title><rect x="1161.6" y="179.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1164.6" y="190.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="1162.0" y="163.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1165.0" y="174.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="1162.3" y="179.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1165.3" y="190.0"></text>
</g>
<g>
<title>read (57 samples, 1.69%)</title><rect x="1162.7" y="179.0" width="19.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1165.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.12%)</title><rect x="1182.6" y="227.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1185.6" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.12%)</title><rect x="1182.6" y="211.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.6" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.12%)</title><rect x="1182.6" y="195.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1185.6" y="206.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1183.7" y="179.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1186.7" y="190.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.06%)</title><rect x="1184.0" y="339.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.0" y="350.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.06%)</title><rect x="1184.0" y="323.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1187.0" y="334.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.03%)</title><rect x="1184.4" y="307.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1187.4" y="318.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="1184.7" y="355.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.7" y="366.0"></text>
</g>
<g>
<title>[tid=13571] (6 samples, 0.18%)</title><rect x="1185.1" y="371.0" width="2.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1188.1" y="382.0"></text>
</g>
<g>
<title>thread_start (6 samples, 0.18%)</title><rect x="1185.1" y="355.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1188.1" y="366.0"></text>
</g>
<g>
<title>_pthread_start (6 samples, 0.18%)</title><rect x="1185.1" y="339.0" width="2.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1188.1" y="350.0"></text>
</g>
<g>
<title>_pthread_body (6 samples, 0.18%)</title><rect x="1185.1" y="323.0" width="2.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1188.1" y="334.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.18%)</title><rect x="1185.1" y="307.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1188.1" y="318.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.18%)</title><rect x="1185.1" y="291.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.1" y="302.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (6 samples, 0.18%)</title><rect x="1185.1" y="275.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.1" y="286.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (6 samples, 0.18%)</title><rect x="1185.1" y="259.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.1" y="270.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sample_young_list_rs_lengths() (1 samples, 0.03%)</title><rect x="1185.1" y="243.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.1" y="254.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.03%)</title><rect x="1185.1" y="227.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.1" y="238.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="1185.1" y="211.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.1" y="222.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="1185.1" y="195.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.1" y="206.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="1185.1" y="179.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.1" y="190.0"></text>
</g>
<g>
<title>G1Analytics::predict_young_other_time_ms(unsigned long) const (1 samples, 0.03%)</title><rect x="1185.1" y="163.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.1" y="174.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sleep_before_next_cycle() (4 samples, 0.12%)</title><rect x="1185.4" y="243.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.4" y="254.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.12%)</title><rect x="1185.4" y="227.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.4" y="238.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (4 samples, 0.12%)</title><rect x="1185.4" y="211.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.4" y="222.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (3 samples, 0.09%)</title><rect x="1185.4" y="195.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.4" y="206.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.09%)</title><rect x="1185.4" y="179.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1188.4" y="190.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="1186.5" y="195.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1189.5" y="206.0"></text>
</g>
<g>
<title>SuspendibleThreadSet::join() (1 samples, 0.03%)</title><rect x="1186.8" y="243.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.8" y="254.0"></text>
</g>
<g>
<title>[tid=22787] (8 samples, 0.24%)</title><rect x="1187.2" y="371.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1190.2" y="382.0"></text>
</g>
<g>
<title>thread_start (8 samples, 0.24%)</title><rect x="1187.2" y="355.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1190.2" y="366.0"></text>
</g>
<g>
<title>_pthread_start (8 samples, 0.24%)</title><rect x="1187.2" y="339.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1190.2" y="350.0"></text>
</g>
<g>
<title>_pthread_body (8 samples, 0.24%)</title><rect x="1187.2" y="323.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1190.2" y="334.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (8 samples, 0.24%)</title><rect x="1187.2" y="307.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1190.2" y="318.0"></text>
</g>
<g>
<title>Thread::call_run() (8 samples, 0.24%)</title><rect x="1187.2" y="291.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.2" y="302.0"></text>
</g>
<g>
<title>WatcherThread::run() (8 samples, 0.24%)</title><rect x="1187.2" y="275.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.2" y="286.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (8 samples, 0.24%)</title><rect x="1187.2" y="259.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.2" y="270.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (8 samples, 0.24%)</title><rect x="1187.2" y="243.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.2" y="254.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (7 samples, 0.21%)</title><rect x="1187.2" y="227.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.2" y="238.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (7 samples, 0.21%)</title><rect x="1187.2" y="211.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.2" y="222.0"></text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.03%)</title><rect x="1187.2" y="195.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1190.2" y="206.0"></text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 0.15%)</title><rect x="1187.5" y="195.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1190.5" y="206.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="1189.3" y="195.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1192.3" y="206.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.03%)</title><rect x="1189.6" y="227.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.6" y="238.0"></text>
</g>
</g>
</svg>
