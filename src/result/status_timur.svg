<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (1,879 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=24579] (527 samples, 28.05%)</title><rect x="10.0" y="803.0" width="331.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="814.0">[NIO Selector #0 tid=24579]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.05%)</title><rect x="10.0" y="787.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (526 samples, 27.99%)</title><rect x="10.6" y="787.0" width="330.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.6" y="798.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.05%)</title><rect x="10.6" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (299 samples, 15.91%)</title><rect x="11.3" y="771.0" width="187.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.3" y="782.0">one/nio/net/JavaSelector..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.05%)</title><rect x="11.3" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.3" y="766.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.11%)</title><rect x="11.9" y="755.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (296 samples, 15.75%)</title><rect x="13.1" y="755.0" width="185.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.1" y="766.0">sun/nio/ch/SelectorImpl...</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (296 samples, 15.75%)</title><rect x="13.1" y="739.0" width="185.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.1" y="750.0">sun/nio/ch/SelectorImpl...</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (296 samples, 15.75%)</title><rect x="13.1" y="723.0" width="185.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.1" y="734.0">sun/nio/ch/KQueueSelecto..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (285 samples, 15.17%)</title><rect x="13.1" y="707.0" width="179.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.1" y="718.0">sun/nio/ch/KQueue.poll</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (2 samples, 0.11%)</title><rect x="16.3" y="691.0" width="1.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="19.3" y="702.0"></text>
</g>
<g>
<title>kevent (278 samples, 14.80%)</title><rect x="17.5" y="691.0" width="174.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="20.5" y="702.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (6 samples, 0.32%)</title><rect x="192.1" y="707.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.27%)</title><rect x="192.7" y="691.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.27%)</title><rect x="192.7" y="675.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.27%)</title><rect x="192.7" y="659.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.7" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.27%)</title><rect x="192.7" y="643.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.11%)</title><rect x="193.4" y="627.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.4" y="638.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.11%)</title><rect x="194.6" y="627.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="197.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.05%)</title><rect x="195.9" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.05%)</title><rect x="196.5" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.5" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.05%)</title><rect x="196.5" y="691.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.05%)</title><rect x="196.5" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.11%)</title><rect x="197.1" y="707.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.1" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.11%)</title><rect x="197.1" y="691.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.1" y="702.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.11%)</title><rect x="197.1" y="675.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.1" y="686.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.11%)</title><rect x="197.1" y="659.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.11%)</title><rect x="197.1" y="643.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.05%)</title><rect x="198.4" y="707.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (224 samples, 11.92%)</title><rect x="199.0" y="771.0" width="140.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.0" y="782.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (224 samples, 11.92%)</title><rect x="199.0" y="755.0" width="140.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.0" y="766.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (176 samples, 9.37%)</title><rect x="199.0" y="739.0" width="110.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="202.0" y="750.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (165 samples, 8.78%)</title><rect x="200.3" y="723.0" width="103.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="203.3" y="734.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (165 samples, 8.78%)</title><rect x="200.3" y="707.0" width="103.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="203.3" y="718.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (161 samples, 8.57%)</title><rect x="200.3" y="691.0" width="101.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.3" y="702.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (159 samples, 8.46%)</title><rect x="201.5" y="675.0" width="99.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.5" y="686.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (155 samples, 8.25%)</title><rect x="201.5" y="659.0" width="97.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.5" y="670.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.48%)</title><rect x="202.2" y="643.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.2" y="654.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.32%)</title><rect x="204.1" y="627.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.1" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.32%)</title><rect x="204.1" y="611.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.32%)</title><rect x="204.1" y="595.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.32%)</title><rect x="204.1" y="579.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.1" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.11%)</title><rect x="206.6" y="563.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="209.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (145 samples, 7.72%)</title><rect x="207.8" y="643.0" width="91.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.8" y="654.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session.write (144 samples, 7.66%)</title><rect x="208.4" y="627.0" width="90.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.4" y="638.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (143 samples, 7.61%)</title><rect x="209.1" y="611.0" width="89.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.1" y="622.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (143 samples, 7.61%)</title><rect x="209.1" y="595.0" width="89.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.1" y="606.0">one/nio/ne..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.32%)</title><rect x="209.1" y="579.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.1" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.32%)</title><rect x="209.1" y="563.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="212.1" y="574.0"></text>
</g>
<g>
<title>__vsnprintf_chk (1 samples, 0.05%)</title><rect x="209.1" y="547.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="212.1" y="558.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.11%)</title><rect x="209.7" y="547.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="212.7" y="558.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.05%)</title><rect x="210.3" y="531.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="213.3" y="542.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (3 samples, 0.16%)</title><rect x="211.0" y="547.0" width="1.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="214.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (137 samples, 7.29%)</title><rect x="212.8" y="579.0" width="86.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.8" y="590.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (137 samples, 7.29%)</title><rect x="212.8" y="563.0" width="86.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.8" y="574.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (137 samples, 7.29%)</title><rect x="212.8" y="547.0" width="86.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="215.8" y="558.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (137 samples, 7.29%)</title><rect x="212.8" y="531.0" width="86.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.8" y="542.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (2 samples, 0.11%)</title><rect x="212.8" y="515.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.05%)</title><rect x="213.5" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (135 samples, 7.18%)</title><rect x="214.1" y="515.0" width="84.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.1" y="526.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (131 samples, 6.97%)</title><rect x="216.6" y="499.0" width="82.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="219.6" y="510.0">sun/nio/c..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.05%)</title><rect x="217.2" y="483.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="220.2" y="494.0"></text>
</g>
<g>
<title>write (129 samples, 6.87%)</title><rect x="217.9" y="483.0" width="81.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="220.9" y="494.0">write</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.21%)</title><rect x="298.9" y="659.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="301.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.16%)</title><rect x="299.5" y="643.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.16%)</title><rect x="299.5" y="627.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.21%)</title><rect x="301.4" y="691.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.21%)</title><rect x="301.4" y="675.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.11%)</title><rect x="301.4" y="659.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.11%)</title><rect x="302.6" y="659.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.11%)</title><rect x="302.6" y="643.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.11%)</title><rect x="302.6" y="627.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.32%)</title><rect x="303.9" y="723.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.05%)</title><rect x="303.9" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="303.9" y="691.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="303.9" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="303.9" y="659.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.9" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="303.9" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.9" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.16%)</title><rect x="304.5" y="707.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="307.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.16%)</title><rect x="304.5" y="691.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.11%)</title><rect x="306.4" y="707.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.11%)</title><rect x="307.7" y="723.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.11%)</title><rect x="307.7" y="707.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="310.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.11%)</title><rect x="307.7" y="691.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="308.9" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1 samples, 0.05%)</title><rect x="309.6" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="312.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (47 samples, 2.50%)</title><rect x="310.2" y="739.0" width="29.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.2" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (45 samples, 2.39%)</title><rect x="311.4" y="723.0" width="28.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="314.4" y="734.0">on..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (45 samples, 2.39%)</title><rect x="311.4" y="707.0" width="28.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.4" y="718.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (45 samples, 2.39%)</title><rect x="311.4" y="691.0" width="28.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.4" y="702.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (45 samples, 2.39%)</title><rect x="311.4" y="675.0" width="28.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="314.4" y="686.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (44 samples, 2.34%)</title><rect x="311.4" y="659.0" width="27.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.4" y="670.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (44 samples, 2.34%)</title><rect x="311.4" y="643.0" width="27.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.4" y="654.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (41 samples, 2.18%)</title><rect x="313.3" y="627.0" width="25.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.3" y="638.0">s..</text>
</g>
<g>
<title>read (40 samples, 2.13%)</title><rect x="313.9" y="611.0" width="25.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="316.9" y="622.0">r..</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="339.1" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.1" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="339.1" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.1" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="339.1" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="342.1" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.11%)</title><rect x="339.7" y="771.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="342.7" y="782.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.11%)</title><rect x="339.7" y="755.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="342.7" y="766.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 0.11%)</title><rect x="339.7" y="739.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="342.7" y="750.0"></text>
</g>
<g>
<title>_res (2 samples, 0.11%)</title><rect x="339.7" y="723.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="342.7" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24835] (657 samples, 34.97%)</title><rect x="341.0" y="803.0" width="412.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="344.0" y="814.0">[NIO Selector #1 tid=24835]</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="341.0" y="787.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="344.0" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="341.0" y="771.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="344.0" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="341.0" y="755.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="344.0" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="341.0" y="739.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="344.0" y="750.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="341.0" y="723.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="344.0" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="341.0" y="707.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="344.0" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="341.0" y="691.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="344.0" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.05%)</title><rect x="341.0" y="675.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="344.0" y="686.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.05%)</title><rect x="341.0" y="659.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="344.0" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.05%)</title><rect x="341.0" y="643.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="344.0" y="654.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.05%)</title><rect x="341.0" y="627.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="344.0" y="638.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.16%)</title><rect x="341.6" y="787.0" width="1.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="344.6" y="798.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.05%)</title><rect x="342.8" y="771.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="345.8" y="782.0"></text>
</g>
<g>
<title>_res (1 samples, 0.05%)</title><rect x="342.8" y="755.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="345.8" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (652 samples, 34.70%)</title><rect x="343.5" y="787.0" width="409.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.5" y="798.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector$1.next (2 samples, 0.11%)</title><rect x="345.3" y="771.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector$1.next (2 samples, 0.11%)</title><rect x="345.3" y="755.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.3" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (365 samples, 19.43%)</title><rect x="346.6" y="771.0" width="229.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.6" y="782.0">one/nio/net/JavaSelector.select</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (3 samples, 0.16%)</title><rect x="347.2" y="755.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.05%)</title><rect x="349.1" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="352.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (1 samples, 0.05%)</title><rect x="349.1" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="352.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (359 samples, 19.11%)</title><rect x="349.7" y="755.0" width="225.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.7" y="766.0">sun/nio/ch/SelectorImpl.select</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (359 samples, 19.11%)</title><rect x="349.7" y="739.0" width="225.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.7" y="750.0">sun/nio/ch/SelectorImpl.lockAn..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (359 samples, 19.11%)</title><rect x="349.7" y="723.0" width="225.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.7" y="734.0">sun/nio/ch/KQueueSelectorImpl...</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (354 samples, 18.84%)</title><rect x="350.4" y="707.0" width="222.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.4" y="718.0">sun/nio/ch/KQueue.poll</text>
</g>
<g>
<title>kevent (348 samples, 18.52%)</title><rect x="354.1" y="691.0" width="218.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="357.1" y="702.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.16%)</title><rect x="572.7" y="707.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="573.3" y="691.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="573.3" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.05%)</title><rect x="573.9" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="573.9" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="573.9" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="573.9" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.05%)</title><rect x="573.9" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (1 samples, 0.05%)</title><rect x="574.6" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.6" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.05%)</title><rect x="574.6" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.6" y="702.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.05%)</title><rect x="574.6" y="675.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.6" y="686.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.05%)</title><rect x="574.6" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.05%)</title><rect x="574.6" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.05%)</title><rect x="575.2" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.05%)</title><rect x="575.2" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (1 samples, 0.05%)</title><rect x="575.2" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="578.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (282 samples, 15.01%)</title><rect x="575.8" y="771.0" width="177.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.8" y="782.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (282 samples, 15.01%)</title><rect x="575.8" y="755.0" width="177.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.8" y="766.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (213 samples, 11.34%)</title><rect x="575.8" y="739.0" width="133.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.8" y="750.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (197 samples, 10.48%)</title><rect x="576.5" y="723.0" width="123.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="579.5" y="734.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (197 samples, 10.48%)</title><rect x="576.5" y="707.0" width="123.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.5" y="718.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (194 samples, 10.32%)</title><rect x="576.5" y="691.0" width="121.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="579.5" y="702.0">RequestHandler0..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (192 samples, 10.22%)</title><rect x="577.7" y="675.0" width="120.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="580.7" y="686.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (184 samples, 9.79%)</title><rect x="577.7" y="659.0" width="115.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.7" y="670.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 1.01%)</title><rect x="577.7" y="643.0" width="11.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.7" y="654.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (12 samples, 0.64%)</title><rect x="582.1" y="627.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.1" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.64%)</title><rect x="582.1" y="611.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.64%)</title><rect x="582.1" y="595.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.charAt (12 samples, 0.64%)</title><rect x="582.1" y="579.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.1" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="589.0" y="563.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="592.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (165 samples, 8.78%)</title><rect x="589.6" y="643.0" width="103.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.6" y="654.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session.write (165 samples, 8.78%)</title><rect x="589.6" y="627.0" width="103.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.6" y="638.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (165 samples, 8.78%)</title><rect x="589.6" y="611.0" width="103.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.6" y="622.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (165 samples, 8.78%)</title><rect x="589.6" y="595.0" width="103.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.6" y="606.0">one/nio/net/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (165 samples, 8.78%)</title><rect x="589.6" y="579.0" width="103.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.6" y="590.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (165 samples, 8.78%)</title><rect x="589.6" y="563.0" width="103.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.6" y="574.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (164 samples, 8.73%)</title><rect x="590.3" y="547.0" width="103.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.3" y="558.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (164 samples, 8.73%)</title><rect x="590.3" y="531.0" width="103.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.3" y="542.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (3 samples, 0.16%)</title><rect x="590.3" y="515.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.05%)</title><rect x="591.5" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="594.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (161 samples, 8.57%)</title><rect x="592.2" y="515.0" width="101.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.2" y="526.0">sun/nio/ch/S..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="593.4" y="499.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="596.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (158 samples, 8.41%)</title><rect x="594.0" y="499.0" width="99.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.0" y="510.0">sun/nio/ch/F..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.05%)</title><rect x="595.3" y="483.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="598.3" y="494.0"></text>
</g>
<g>
<title>write (155 samples, 8.25%)</title><rect x="595.9" y="483.0" width="97.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="598.9" y="494.0">write</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.43%)</title><rect x="693.3" y="659.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.16%)</title><rect x="696.4" y="643.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.16%)</title><rect x="696.4" y="627.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.16%)</title><rect x="698.3" y="691.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.16%)</title><rect x="698.3" y="675.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.3" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="698.3" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.11%)</title><rect x="698.9" y="659.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.11%)</title><rect x="698.9" y="643.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="701.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.11%)</title><rect x="698.9" y="627.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.53%)</title><rect x="700.2" y="723.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.05%)</title><rect x="700.2" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="700.2" y="691.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="703.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="700.2" y="675.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="700.2" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.2" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="700.2" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.2" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.21%)</title><rect x="700.8" y="707.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.21%)</title><rect x="700.8" y="691.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.8" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.27%)</title><rect x="703.3" y="707.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.16%)</title><rect x="706.4" y="723.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="707.7" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="707.7" y="691.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.11%)</title><rect x="708.3" y="723.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="709.0" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (69 samples, 3.67%)</title><rect x="709.6" y="739.0" width="43.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.6" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (69 samples, 3.67%)</title><rect x="709.6" y="723.0" width="43.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.6" y="734.0">one/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (69 samples, 3.67%)</title><rect x="709.6" y="707.0" width="43.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="712.6" y="718.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (69 samples, 3.67%)</title><rect x="709.6" y="691.0" width="43.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.6" y="702.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (69 samples, 3.67%)</title><rect x="709.6" y="675.0" width="43.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.6" y="686.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (67 samples, 3.57%)</title><rect x="709.6" y="659.0" width="42.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.6" y="670.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (67 samples, 3.57%)</title><rect x="709.6" y="643.0" width="42.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.6" y="654.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (65 samples, 3.46%)</title><rect x="710.8" y="627.0" width="40.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.8" y="638.0">sun..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (3 samples, 0.16%)</title><rect x="712.7" y="611.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="715.7" y="622.0"></text>
</g>
<g>
<title>read (59 samples, 3.14%)</title><rect x="714.6" y="611.0" width="37.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="717.6" y="622.0">read</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.11%)</title><rect x="751.7" y="659.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.7" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.11%)</title><rect x="751.7" y="643.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.7" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.11%)</title><rect x="751.7" y="627.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.7" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="752.3" y="611.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="755.3" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="752.9" y="787.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="755.9" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25091] (255 samples, 13.57%)</title><rect x="753.5" y="803.0" width="160.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="756.5" y="814.0">[NIO Selector #2 tid..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.11%)</title><rect x="753.5" y="787.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="756.5" y="798.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.05%)</title><rect x="754.2" y="771.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="757.2" y="782.0"></text>
</g>
<g>
<title>_res (1 samples, 0.05%)</title><rect x="754.2" y="755.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="757.2" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (253 samples, 13.46%)</title><rect x="754.8" y="787.0" width="158.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.8" y="798.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.05%)</title><rect x="754.8" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (164 samples, 8.73%)</title><rect x="755.4" y="771.0" width="103.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.4" y="782.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.05%)</title><rect x="755.4" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (1 samples, 0.05%)</title><rect x="755.4" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="758.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (161 samples, 8.57%)</title><rect x="756.1" y="755.0" width="101.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.1" y="766.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (161 samples, 8.57%)</title><rect x="756.1" y="739.0" width="101.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.1" y="750.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (161 samples, 8.57%)</title><rect x="756.1" y="723.0" width="101.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.1" y="734.0">sun/nio/ch/K..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (153 samples, 8.14%)</title><rect x="756.1" y="707.0" width="96.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.1" y="718.0">sun/nio/ch/..</text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (1 samples, 0.05%)</title><rect x="758.6" y="691.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="761.6" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.05%)</title><rect x="758.6" y="675.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="761.6" y="686.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.05%)</title><rect x="758.6" y="659.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="761.6" y="670.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="758.6" y="643.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="761.6" y="654.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.05%)</title><rect x="758.6" y="627.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="761.6" y="638.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.05%)</title><rect x="758.6" y="611.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="761.6" y="622.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="758.6" y="595.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="761.6" y="606.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (1 samples, 0.05%)</title><rect x="759.2" y="691.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="762.2" y="702.0"></text>
</g>
<g>
<title>kevent (147 samples, 7.82%)</title><rect x="759.8" y="691.0" width="92.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="762.8" y="702.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (5 samples, 0.27%)</title><rect x="852.1" y="707.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.1" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.11%)</title><rect x="852.8" y="691.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.11%)</title><rect x="852.8" y="675.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.11%)</title><rect x="854.0" y="691.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="857.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="854.0" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="854.0" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="854.0" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioReadyOps (1 samples, 0.05%)</title><rect x="854.7" y="675.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.11%)</title><rect x="855.3" y="707.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.3" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.11%)</title><rect x="855.3" y="691.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.3" y="702.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.11%)</title><rect x="855.3" y="675.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="858.3" y="686.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.11%)</title><rect x="855.3" y="659.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="858.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.11%)</title><rect x="855.3" y="643.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="858.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.05%)</title><rect x="856.5" y="707.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="859.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (2 samples, 0.11%)</title><rect x="857.2" y="755.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (2 samples, 0.11%)</title><rect x="857.2" y="739.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (2 samples, 0.11%)</title><rect x="857.2" y="723.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (88 samples, 4.68%)</title><rect x="858.4" y="771.0" width="55.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.4" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (88 samples, 4.68%)</title><rect x="858.4" y="755.0" width="55.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.4" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (63 samples, 3.35%)</title><rect x="858.4" y="739.0" width="39.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.4" y="750.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (58 samples, 3.09%)</title><rect x="858.4" y="723.0" width="36.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="861.4" y="734.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (58 samples, 3.09%)</title><rect x="858.4" y="707.0" width="36.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="861.4" y="718.0">one..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (56 samples, 2.98%)</title><rect x="859.0" y="691.0" width="35.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="862.0" y="702.0">Req..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (56 samples, 2.98%)</title><rect x="859.0" y="675.0" width="35.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="862.0" y="686.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (56 samples, 2.98%)</title><rect x="859.0" y="659.0" width="35.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="862.0" y="670.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.21%)</title><rect x="859.0" y="643.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="862.0" y="654.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.05%)</title><rect x="860.9" y="627.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.9" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="860.9" y="611.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.9" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="860.9" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="860.9" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (52 samples, 2.77%)</title><rect x="861.6" y="643.0" width="32.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="864.6" y="654.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (52 samples, 2.77%)</title><rect x="861.6" y="627.0" width="32.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="864.6" y="638.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (51 samples, 2.71%)</title><rect x="861.6" y="611.0" width="32.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.6" y="622.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (51 samples, 2.71%)</title><rect x="861.6" y="595.0" width="32.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="864.6" y="606.0">on..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="861.6" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="864.6" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="861.6" y="563.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="864.6" y="574.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.05%)</title><rect x="861.6" y="547.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="864.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (50 samples, 2.66%)</title><rect x="862.2" y="579.0" width="31.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.2" y="590.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (50 samples, 2.66%)</title><rect x="862.2" y="563.0" width="31.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="865.2" y="574.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (49 samples, 2.61%)</title><rect x="862.8" y="547.0" width="30.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.8" y="558.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (49 samples, 2.61%)</title><rect x="862.8" y="531.0" width="30.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.8" y="542.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (49 samples, 2.61%)</title><rect x="862.8" y="515.0" width="30.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.8" y="526.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (48 samples, 2.55%)</title><rect x="863.4" y="499.0" width="30.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.4" y="510.0">su..</text>
</g>
<g>
<title>write (46 samples, 2.45%)</title><rect x="864.7" y="483.0" width="28.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="867.7" y="494.0">wr..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.05%)</title><rect x="893.6" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.05%)</title><rect x="894.2" y="691.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="894.2" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="897.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="894.2" y="659.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="897.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="894.2" y="643.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="897.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="894.2" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.05%)</title><rect x="894.8" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="897.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.05%)</title><rect x="894.8" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.05%)</title><rect x="895.5" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="895.5" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="895.5" y="691.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="895.5" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.16%)</title><rect x="896.1" y="723.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (25 samples, 1.33%)</title><rect x="898.0" y="739.0" width="15.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (23 samples, 1.22%)</title><rect x="899.2" y="723.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (23 samples, 1.22%)</title><rect x="899.2" y="707.0" width="14.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (23 samples, 1.22%)</title><rect x="899.2" y="691.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (23 samples, 1.22%)</title><rect x="899.2" y="675.0" width="14.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (22 samples, 1.17%)</title><rect x="899.2" y="659.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (22 samples, 1.17%)</title><rect x="899.2" y="643.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (22 samples, 1.17%)</title><rect x="899.2" y="627.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.2" y="638.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.05%)</title><rect x="900.5" y="611.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="903.5" y="622.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="900.5" y="595.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="903.5" y="606.0"></text>
</g>
<g>
<title>read (19 samples, 1.01%)</title><rect x="901.1" y="611.0" width="12.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="904.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="913.1" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.1" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="913.1" y="643.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="916.1" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.05%)</title><rect x="913.1" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="916.1" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="913.1" y="611.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="916.1" y="622.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=39939] (422 samples, 22.46%)</title><rect x="913.7" y="803.0" width="265.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="916.7" y="814.0">[NIO Selector #3 tid=39939]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (422 samples, 22.46%)</title><rect x="913.7" y="787.0" width="265.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.7" y="798.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (255 samples, 13.57%)</title><rect x="914.9" y="771.0" width="160.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="917.9" y="782.0">one/nio/net/JavaSele..</text>
</g>
<g>
<title>_res (1 samples, 0.05%)</title><rect x="915.6" y="755.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="918.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.05%)</title><rect x="916.2" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (252 samples, 13.41%)</title><rect x="916.8" y="755.0" width="158.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="919.8" y="766.0">sun/nio/ch/SelectorI..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (252 samples, 13.41%)</title><rect x="916.8" y="739.0" width="158.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="919.8" y="750.0">sun/nio/ch/SelectorI..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (252 samples, 13.41%)</title><rect x="916.8" y="723.0" width="158.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="919.8" y="734.0">sun/nio/ch/KQueueSel..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (243 samples, 12.93%)</title><rect x="916.8" y="707.0" width="152.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.8" y="718.0">sun/nio/ch/KQueue.p..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (1 samples, 0.05%)</title><rect x="925.6" y="691.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="928.6" y="702.0"></text>
</g>
<g>
<title>kevent (228 samples, 12.13%)</title><rect x="926.2" y="691.0" width="143.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="929.2" y="702.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (7 samples, 0.37%)</title><rect x="1069.4" y="707.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1072.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="1069.4" y="691.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="1069.4" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1072.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (1 samples, 0.05%)</title><rect x="1069.4" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.getFilter (1 samples, 0.05%)</title><rect x="1070.1" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1073.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getShort (1 samples, 0.05%)</title><rect x="1070.1" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.27%)</title><rect x="1070.7" y="691.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.27%)</title><rect x="1070.7" y="675.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1073.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.27%)</title><rect x="1070.7" y="659.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1073.7" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.27%)</title><rect x="1070.7" y="643.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.21%)</title><rect x="1071.3" y="627.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1074.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.05%)</title><rect x="1073.8" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1076.8" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.05%)</title><rect x="1073.8" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.8" y="702.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.05%)</title><rect x="1073.8" y="675.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.8" y="686.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.05%)</title><rect x="1073.8" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.8" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.05%)</title><rect x="1073.8" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.05%)</title><rect x="1074.4" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="1074.4" y="691.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1077.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="1074.4" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1074.4" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1074.4" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1077.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (165 samples, 8.78%)</title><rect x="1075.1" y="771.0" width="103.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1078.1" y="782.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (165 samples, 8.78%)</title><rect x="1075.1" y="755.0" width="103.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1078.1" y="766.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (126 samples, 6.71%)</title><rect x="1075.1" y="739.0" width="79.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1078.1" y="750.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (116 samples, 6.17%)</title><rect x="1075.1" y="723.0" width="72.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1078.1" y="734.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (116 samples, 6.17%)</title><rect x="1075.1" y="707.0" width="72.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1078.1" y="718.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (116 samples, 6.17%)</title><rect x="1075.1" y="691.0" width="72.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1078.1" y="702.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (113 samples, 6.01%)</title><rect x="1076.3" y="675.0" width="71.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1079.3" y="686.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (112 samples, 5.96%)</title><rect x="1076.3" y="659.0" width="70.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.3" y="670.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.37%)</title><rect x="1076.3" y="643.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.3" y="654.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.21%)</title><rect x="1078.2" y="627.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.2" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.21%)</title><rect x="1078.2" y="611.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.21%)</title><rect x="1078.2" y="595.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1081.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.21%)</title><rect x="1078.2" y="579.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1081.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (105 samples, 5.59%)</title><rect x="1080.7" y="643.0" width="66.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1083.7" y="654.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (103 samples, 5.48%)</title><rect x="1082.0" y="627.0" width="64.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1085.0" y="638.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (100 samples, 5.32%)</title><rect x="1083.2" y="611.0" width="62.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.2" y="622.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (100 samples, 5.32%)</title><rect x="1083.2" y="595.0" width="62.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1086.2" y="606.0">one/ni..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.11%)</title><rect x="1083.2" y="579.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.2" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.11%)</title><rect x="1083.2" y="563.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1086.2" y="574.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.11%)</title><rect x="1083.2" y="547.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1086.2" y="558.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 0.11%)</title><rect x="1083.2" y="531.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1086.2" y="542.0"></text>
</g>
<g>
<title>_res (1 samples, 0.05%)</title><rect x="1083.9" y="515.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1086.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (98 samples, 5.22%)</title><rect x="1084.5" y="579.0" width="61.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1087.5" y="590.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (98 samples, 5.22%)</title><rect x="1084.5" y="563.0" width="61.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.5" y="574.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (97 samples, 5.16%)</title><rect x="1085.1" y="547.0" width="60.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1088.1" y="558.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (97 samples, 5.16%)</title><rect x="1085.1" y="531.0" width="60.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1088.1" y="542.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (3 samples, 0.16%)</title><rect x="1085.1" y="515.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1088.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.05%)</title><rect x="1086.4" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (94 samples, 5.00%)</title><rect x="1087.0" y="515.0" width="59.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.0" y="526.0">sun/ni..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1087.0" y="499.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1090.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (93 samples, 4.95%)</title><rect x="1087.6" y="499.0" width="58.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.6" y="510.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.05%)</title><rect x="1087.6" y="483.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1090.6" y="494.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="1087.6" y="467.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1090.6" y="478.0"></text>
</g>
<g>
<title>write (92 samples, 4.90%)</title><rect x="1088.3" y="483.0" width="57.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1091.3" y="494.0">write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.05%)</title><rect x="1146.0" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.05%)</title><rect x="1146.7" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/lorismelik/ServiceImpl.status (1 samples, 0.05%)</title><rect x="1147.3" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.05%)</title><rect x="1147.3" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1150.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.27%)</title><rect x="1147.9" y="723.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1150.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1147.9" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="1147.9" y="691.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1150.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="1147.9" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1150.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="1147.9" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.9" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="1148.6" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1151.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="1148.6" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.16%)</title><rect x="1149.2" y="707.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1152.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.16%)</title><rect x="1151.1" y="723.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="1152.3" y="707.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1155.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="1152.3" y="691.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1155.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.11%)</title><rect x="1152.9" y="723.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1155.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="1153.6" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1156.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (39 samples, 2.08%)</title><rect x="1154.2" y="739.0" width="24.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.2" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (37 samples, 1.97%)</title><rect x="1154.8" y="723.0" width="23.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.8" y="734.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (37 samples, 1.97%)</title><rect x="1154.8" y="707.0" width="23.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1157.8" y="718.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (37 samples, 1.97%)</title><rect x="1154.8" y="691.0" width="23.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1157.8" y="702.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (37 samples, 1.97%)</title><rect x="1154.8" y="675.0" width="23.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1157.8" y="686.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (33 samples, 1.76%)</title><rect x="1154.8" y="659.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (33 samples, 1.76%)</title><rect x="1154.8" y="643.0" width="20.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (33 samples, 1.76%)</title><rect x="1154.8" y="627.0" width="20.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.8" y="638.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.05%)</title><rect x="1155.5" y="611.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1158.5" y="622.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="1155.5" y="595.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1158.5" y="606.0"></text>
</g>
<g>
<title>read (31 samples, 1.65%)</title><rect x="1156.1" y="611.0" width="19.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1159.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.21%)</title><rect x="1175.6" y="659.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.6" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.21%)</title><rect x="1175.6" y="643.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1178.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.21%)</title><rect x="1175.6" y="627.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1178.6" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1177.4" y="611.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1180.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.05%)</title><rect x="1178.1" y="723.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.1" y="734.0"></text>
</g>
<g>
<title>[tid=13571] (1 samples, 0.05%)</title><rect x="1178.7" y="803.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1181.7" y="814.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.05%)</title><rect x="1178.7" y="787.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1181.7" y="798.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.05%)</title><rect x="1178.7" y="771.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1181.7" y="782.0"></text>
</g>
<g>
<title>_pthread_body (1 samples, 0.05%)</title><rect x="1178.7" y="755.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1181.7" y="766.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="1178.7" y="739.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1181.7" y="750.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.05%)</title><rect x="1178.7" y="723.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.7" y="734.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.05%)</title><rect x="1178.7" y="707.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.7" y="718.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.05%)</title><rect x="1178.7" y="691.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.7" y="702.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sample_young_list_rs_lengths() (1 samples, 0.05%)</title><rect x="1178.7" y="675.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.7" y="686.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.05%)</title><rect x="1178.7" y="659.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.7" y="670.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.05%)</title><rect x="1178.7" y="643.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.7" y="654.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.05%)</title><rect x="1178.7" y="627.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.7" y="638.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.05%)</title><rect x="1178.7" y="611.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.7" y="622.0"></text>
</g>
<g>
<title>G1Policy::predict_bytes_to_copy(HeapRegion*) const (1 samples, 0.05%)</title><rect x="1178.7" y="595.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.7" y="606.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.05%)</title><rect x="1178.7" y="579.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.7" y="590.0"></text>
</g>
<g>
<title>[tid=14083] (2 samples, 0.11%)</title><rect x="1179.3" y="803.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1182.3" y="814.0"></text>
</g>
<g>
<title>thread_start (2 samples, 0.11%)</title><rect x="1179.3" y="787.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1182.3" y="798.0"></text>
</g>
<g>
<title>_pthread_start (2 samples, 0.11%)</title><rect x="1179.3" y="771.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1182.3" y="782.0"></text>
</g>
<g>
<title>_pthread_body (2 samples, 0.11%)</title><rect x="1179.3" y="755.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1182.3" y="766.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.11%)</title><rect x="1179.3" y="739.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1182.3" y="750.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.11%)</title><rect x="1179.3" y="723.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.3" y="734.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.11%)</title><rect x="1179.3" y="707.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1182.3" y="718.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.11%)</title><rect x="1179.3" y="691.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.3" y="702.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.05%)</title><rect x="1179.3" y="675.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1182.3" y="686.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.05%)</title><rect x="1179.3" y="659.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.3" y="670.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::ParallelSPCleanupTask(unsigned int, DeflateMonitorCounters*) (1 samples, 0.05%)</title><rect x="1179.3" y="643.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.3" y="654.0"></text>
</g>
<g>
<title>SubTasksDone::SubTasksDone(unsigned int) (1 samples, 0.05%)</title><rect x="1179.3" y="627.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.3" y="638.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1179.3" y="611.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.3" y="622.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.05%)</title><rect x="1180.0" y="675.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.0" y="686.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.05%)</title><rect x="1180.0" y="659.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.0" y="670.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.05%)</title><rect x="1180.0" y="643.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.0" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.05%)</title><rect x="1180.0" y="627.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.0" y="638.0"></text>
</g>
<g>
<title>AdaptiveSizePolicy::calc_active_workers(unsigned long, unsigned long, unsigned long) (1 samples, 0.05%)</title><rect x="1180.0" y="611.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.0" y="622.0"></text>
</g>
<g>
<title>JVMFlagEx::is_default(JVMFlags) (1 samples, 0.05%)</title><rect x="1180.0" y="595.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.0" y="606.0"></text>
</g>
<g>
<title>[tid=17411] (1 samples, 0.05%)</title><rect x="1180.6" y="803.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1183.6" y="814.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.05%)</title><rect x="1180.6" y="787.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1183.6" y="798.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.05%)</title><rect x="1180.6" y="771.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1183.6" y="782.0"></text>
</g>
<g>
<title>_pthread_body (1 samples, 0.05%)</title><rect x="1180.6" y="755.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1183.6" y="766.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="1180.6" y="739.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1183.6" y="750.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.05%)</title><rect x="1180.6" y="723.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.6" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.05%)</title><rect x="1180.6" y="707.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.6" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.05%)</title><rect x="1180.6" y="691.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.6" y="702.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1 samples, 0.05%)</title><rect x="1180.6" y="675.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.6" y="686.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.05%)</title><rect x="1180.6" y="659.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.6" y="670.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.05%)</title><rect x="1180.6" y="643.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.6" y="654.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.05%)</title><rect x="1180.6" y="627.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.6" y="638.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.05%)</title><rect x="1180.6" y="611.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.6" y="622.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="1180.6" y="595.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1183.6" y="606.0"></text>
</g>
<g>
<title>[tid=17923] (11 samples, 0.59%)</title><rect x="1181.2" y="803.0" width="6.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1184.2" y="814.0"></text>
</g>
<g>
<title>thread_start (11 samples, 0.59%)</title><rect x="1181.2" y="787.0" width="6.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1184.2" y="798.0"></text>
</g>
<g>
<title>_pthread_start (11 samples, 0.59%)</title><rect x="1181.2" y="771.0" width="6.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1184.2" y="782.0"></text>
</g>
<g>
<title>_pthread_body (11 samples, 0.59%)</title><rect x="1181.2" y="755.0" width="6.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1184.2" y="766.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 0.59%)</title><rect x="1181.2" y="739.0" width="6.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1184.2" y="750.0"></text>
</g>
<g>
<title>Thread::call_run() (11 samples, 0.59%)</title><rect x="1181.2" y="723.0" width="6.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.2" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (11 samples, 0.59%)</title><rect x="1181.2" y="707.0" width="6.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.2" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (11 samples, 0.59%)</title><rect x="1181.2" y="691.0" width="6.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.2" y="702.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (11 samples, 0.59%)</title><rect x="1181.2" y="675.0" width="6.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.2" y="686.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (11 samples, 0.59%)</title><rect x="1181.2" y="659.0" width="6.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.2" y="670.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (10 samples, 0.53%)</title><rect x="1181.8" y="643.0" width="6.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.8" y="654.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (10 samples, 0.53%)</title><rect x="1181.8" y="627.0" width="6.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.8" y="638.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (5 samples, 0.27%)</title><rect x="1181.8" y="611.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.8" y="622.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.16%)</title><rect x="1181.8" y="595.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.8" y="606.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.16%)</title><rect x="1181.8" y="579.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.8" y="590.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1181.8" y="563.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.8" y="574.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.05%)</title><rect x="1182.5" y="563.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.5" y="574.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (1 samples, 0.05%)</title><rect x="1182.5" y="547.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.5" y="558.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.05%)</title><rect x="1182.5" y="531.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.5" y="542.0"></text>
</g>
<g>
<title>PhaseChaitin::lower_pressure(Block*, unsigned int, LRG&amp;, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.05%)</title><rect x="1182.5" y="515.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.5" y="526.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (1 samples, 0.05%)</title><rect x="1183.1" y="563.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.1" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2 samples, 0.11%)</title><rect x="1183.7" y="595.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.7" y="606.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.05%)</title><rect x="1183.7" y="579.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.7" y="590.0"></text>
</g>
<g>
<title>RegMask::is_misaligned_pair() const (1 samples, 0.05%)</title><rect x="1183.7" y="563.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.7" y="574.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.05%)</title><rect x="1183.7" y="547.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.7" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.05%)</title><rect x="1184.3" y="579.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.3" y="590.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.11%)</title><rect x="1185.0" y="611.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.0" y="622.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (2 samples, 0.11%)</title><rect x="1185.0" y="595.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.0" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.05%)</title><rect x="1185.0" y="579.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.0" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.05%)</title><rect x="1185.6" y="579.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.6" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.05%)</title><rect x="1185.6" y="563.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.6" y="574.0"></text>
</g>
<g>
<title>PhaseIterGVN::replace_node(Node*, Node*) (1 samples, 0.05%)</title><rect x="1185.6" y="547.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.6" y="558.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.05%)</title><rect x="1185.6" y="531.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.6" y="542.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.05%)</title><rect x="1185.6" y="515.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.6" y="526.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.05%)</title><rect x="1185.6" y="499.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.6" y="510.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.05%)</title><rect x="1185.6" y="483.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.6" y="494.0"></text>
</g>
<g>
<title>Compile::current() (1 samples, 0.05%)</title><rect x="1185.6" y="467.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.6" y="478.0"></text>
</g>
<g>
<title>ciEnv::current() (1 samples, 0.05%)</title><rect x="1185.6" y="451.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.6" y="462.0"></text>
</g>
<g>
<title>CompilerThread::current() (1 samples, 0.05%)</title><rect x="1185.6" y="435.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.6" y="446.0"></text>
</g>
<g>
<title>JavaThread::current() (1 samples, 0.05%)</title><rect x="1185.6" y="419.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.6" y="430.0"></text>
</g>
<g>
<title>Thread::current() (1 samples, 0.05%)</title><rect x="1185.6" y="403.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.6" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1186.2" y="611.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.2" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1186.2" y="595.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.11%)</title><rect x="1186.2" y="579.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.11%)</title><rect x="1186.2" y="563.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1186.2" y="547.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.2" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="531.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.2" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.2" y="515.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.2" y="499.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.2" y="483.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.2" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1186.2" y="467.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.2" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="451.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.2" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.2" y="435.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.2" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.2" y="419.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.2" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.2" y="403.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.2" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1186.2" y="387.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.2" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="371.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.2" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.2" y="355.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.2" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.2" y="339.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.2" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.2" y="323.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.2" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1186.2" y="307.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.2" y="318.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="291.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.2" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="275.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.2" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.2" y="259.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.2" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.2" y="243.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.2" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.2" y="227.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.2" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1186.2" y="211.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="222.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1186.2" y="195.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.2" y="206.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1186.2" y="179.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.2" y="190.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1186.2" y="163.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.2" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1186.2" y="147.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="158.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.05%)</title><rect x="1186.2" y="131.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.2" y="142.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1186.2" y="115.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.2" y="126.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long long) (1 samples, 0.05%)</title><rect x="1186.2" y="99.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.2" y="110.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1186.2" y="83.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.2" y="94.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1186.2" y="67.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.2" y="78.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.05%)</title><rect x="1186.2" y="51.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.2" y="62.0"></text>
</g>
<g>
<title>URShiftLNode::bottom_type() const (1 samples, 0.05%)</title><rect x="1186.2" y="35.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.2" y="46.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.05%)</title><rect x="1186.9" y="547.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1186.9" y="531.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.9" y="542.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.05%)</title><rect x="1186.9" y="515.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.9" y="526.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.05%)</title><rect x="1186.9" y="499.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.9" y="510.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.05%)</title><rect x="1186.9" y="483.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.9" y="494.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.05%)</title><rect x="1186.9" y="467.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.9" y="478.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.05%)</title><rect x="1186.9" y="451.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.9" y="462.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.05%)</title><rect x="1186.9" y="435.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.9" y="446.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.05%)</title><rect x="1186.9" y="419.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.9" y="430.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.05%)</title><rect x="1186.9" y="403.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.9" y="414.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray&lt;ciField*&gt;*) (1 samples, 0.05%)</title><rect x="1186.9" y="387.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.9" y="398.0"></text>
</g>
<g>
<title>ciField::initialize_from(fieldDescriptor*) (1 samples, 0.05%)</title><rect x="1186.9" y="371.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.9" y="382.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1186.9" y="355.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.9" y="366.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.05%)</title><rect x="1187.5" y="611.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.5" y="622.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.05%)</title><rect x="1187.5" y="595.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.5" y="606.0"></text>
</g>
<g>
<title>Type::get_const_type(ciType*) (1 samples, 0.05%)</title><rect x="1187.5" y="579.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.5" y="590.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1187.5" y="563.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.5" y="574.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="1187.5" y="547.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.5" y="558.0"></text>
</g>
<g>
<title>TypeInstPtr::xdual() const (1 samples, 0.05%)</title><rect x="1187.5" y="531.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.5" y="542.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.05%)</title><rect x="1187.5" y="515.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.5" y="526.0"></text>
</g>
<g>
<title>[tid=22019] (1 samples, 0.05%)</title><rect x="1188.1" y="803.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1191.1" y="814.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.05%)</title><rect x="1188.1" y="787.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1191.1" y="798.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.05%)</title><rect x="1188.1" y="771.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1191.1" y="782.0"></text>
</g>
<g>
<title>_pthread_body (1 samples, 0.05%)</title><rect x="1188.1" y="755.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1191.1" y="766.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.05%)</title><rect x="1188.1" y="739.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1191.1" y="750.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.05%)</title><rect x="1188.1" y="723.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.1" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.05%)</title><rect x="1188.1" y="707.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.1" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.05%)</title><rect x="1188.1" y="691.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="702.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (1 samples, 0.05%)</title><rect x="1188.1" y="675.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.1" y="686.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.05%)</title><rect x="1188.1" y="659.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="670.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.05%)</title><rect x="1188.1" y="643.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.1" y="654.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="1188.1" y="627.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.1" y="638.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.05%)</title><rect x="1188.1" y="611.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.1" y="622.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.05%)</title><rect x="1188.1" y="595.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.1" y="606.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="1188.1" y="579.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1191.1" y="590.0"></text>
</g>
<g>
<title>[tid=22531] (2 samples, 0.11%)</title><rect x="1188.7" y="803.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1191.7" y="814.0"></text>
</g>
<g>
<title>thread_start (2 samples, 0.11%)</title><rect x="1188.7" y="787.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1191.7" y="798.0"></text>
</g>
<g>
<title>_pthread_start (2 samples, 0.11%)</title><rect x="1188.7" y="771.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1191.7" y="782.0"></text>
</g>
<g>
<title>_pthread_body (2 samples, 0.11%)</title><rect x="1188.7" y="755.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1191.7" y="766.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.11%)</title><rect x="1188.7" y="739.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1191.7" y="750.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.11%)</title><rect x="1188.7" y="723.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.11%)</title><rect x="1188.7" y="707.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.7" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.11%)</title><rect x="1188.7" y="691.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (2 samples, 0.11%)</title><rect x="1188.7" y="675.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.05%)</title><rect x="1188.7" y="659.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.7" y="670.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.05%)</title><rect x="1188.7" y="643.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.7" y="654.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 0.05%)</title><rect x="1188.7" y="627.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1191.7" y="638.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1188.7" y="611.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.7" y="622.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1188.7" y="595.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="606.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1188.7" y="579.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.7" y="590.0"></text>
</g>
<g>
<title>ThreadCritical::ThreadCritical() (1 samples, 0.05%)</title><rect x="1188.7" y="563.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.7" y="574.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.05%)</title><rect x="1188.7" y="547.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1191.7" y="558.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.05%)</title><rect x="1188.7" y="531.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1191.7" y="542.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.05%)</title><rect x="1189.4" y="659.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.4" y="670.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.05%)</title><rect x="1189.4" y="643.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.05%)</title><rect x="1189.4" y="627.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.4" y="638.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.05%)</title><rect x="1189.4" y="611.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1192.4" y="622.0"></text>
</g>
</g>
</svg>
